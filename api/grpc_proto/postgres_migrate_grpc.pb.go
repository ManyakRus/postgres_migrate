// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.12.4
// source: postgres_migrate.proto

package grpc_proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PostgresMigrateClient is the client API for PostgresMigrate service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PostgresMigrateClient interface {
	// PostgresMigratePgAttribute
	PostgresMigratePgAttribute_Read(ctx context.Context, in *Request_String_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	PostgresMigratePgAttribute_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PostgresMigratePgAttribute_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PostgresMigratePgAttribute_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PostgresMigratePgAttribute_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attalign(ctx context.Context, in *Request_String_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attbyval(ctx context.Context, in *Request_String_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attcacheoff(ctx context.Context, in *Request_String_Int64_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attcollation(ctx context.Context, in *Request_String_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attgenerated(ctx context.Context, in *Request_String_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Atthasdef(ctx context.Context, in *Request_String_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Atthasmissing(ctx context.Context, in *Request_String_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attidentity(ctx context.Context, in *Request_String_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attinhcount(ctx context.Context, in *Request_String_Int64_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attisdropped(ctx context.Context, in *Request_String_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attislocal(ctx context.Context, in *Request_String_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attlen(ctx context.Context, in *Request_String_Int64_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attname(ctx context.Context, in *Request_String_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attndims(ctx context.Context, in *Request_String_Int64_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attnotnull(ctx context.Context, in *Request_String_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attnum(ctx context.Context, in *Request_String_Int64_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attrelid(ctx context.Context, in *Request_String_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attstattarget(ctx context.Context, in *Request_String_Int64_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attstorage(ctx context.Context, in *Request_String_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Atttypid(ctx context.Context, in *Request_String_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Atttypmod(ctx context.Context, in *Request_String_Int64_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_VersionID(ctx context.Context, in *Request_String_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_ReadFromCache(ctx context.Context, in *Request_String_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	PostgresMigratePgAttribute_ReadObject(ctx context.Context, in *Request_String_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	// PostgresMigratePgClass
	PostgresMigratePgClass_Read(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	PostgresMigratePgClass_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PostgresMigratePgClass_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PostgresMigratePgClass_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PostgresMigratePgClass_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Oid(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relallvisible(ctx context.Context, in *Request_Int64_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relam(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relchecks(ctx context.Context, in *Request_Int64_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relfilenode(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relforcerowsecurity(ctx context.Context, in *Request_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relfrozenxid(ctx context.Context, in *Request_Int64_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relhasindex(ctx context.Context, in *Request_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relhasrules(ctx context.Context, in *Request_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relhassubclass(ctx context.Context, in *Request_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relhastriggers(ctx context.Context, in *Request_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relispartition(ctx context.Context, in *Request_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relispopulated(ctx context.Context, in *Request_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relisshared(ctx context.Context, in *Request_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relkind(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relminmxid(ctx context.Context, in *Request_Int64_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relname(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relnamespace(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relnatts(ctx context.Context, in *Request_Int64_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Reloftype(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relowner(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relpages(ctx context.Context, in *Request_Int64_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relpersistence(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relreplident(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relrewrite(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relrowsecurity(ctx context.Context, in *Request_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Reltablespace(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Reltoastrelid(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Reltuples(ctx context.Context, in *Request_Int64_Int64_Float32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Reltype(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_VersionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgClass_ReadFromCache(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	PostgresMigratePgClass_ReadObject(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	// PostgresMigratePgConstraint
	PostgresMigratePgConstraint_Read(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	PostgresMigratePgConstraint_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PostgresMigratePgConstraint_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PostgresMigratePgConstraint_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PostgresMigratePgConstraint_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Condeferrable(ctx context.Context, in *Request_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Condeferred(ctx context.Context, in *Request_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Conexclop(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Confdeltype(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Conffeqop(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Confkey(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Confmatchtype(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Confrelid(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Confupdtype(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Conindid(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Coninhcount(ctx context.Context, in *Request_Int64_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Conislocal(ctx context.Context, in *Request_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Conkey(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Conname(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Connamespace(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Connoinherit(ctx context.Context, in *Request_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Conparentid(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Conpfeqop(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Conppeqop(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Conrelid(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Contype(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Contypid(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Convalidated(ctx context.Context, in *Request_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Oid(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_VersionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_ReadFromCache(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	PostgresMigratePgConstraint_ReadObject(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	// PostgresMigratePgDescription
	PostgresMigratePgDescription_Read(ctx context.Context, in *Request_Int64_Int64_Int32_Int64, opts ...grpc.CallOption) (*Response, error)
	PostgresMigratePgDescription_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PostgresMigratePgDescription_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PostgresMigratePgDescription_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PostgresMigratePgDescription_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgDescription_Update_Classoid(ctx context.Context, in *Request_Int64_Int64_Int32_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgDescription_Update_Description(ctx context.Context, in *Request_Int64_Int64_Int32_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgDescription_Update_Objoid(ctx context.Context, in *Request_Int64_Int64_Int32_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgDescription_Update_Objsubid(ctx context.Context, in *Request_Int64_Int64_Int32_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgDescription_Update_VersionID(ctx context.Context, in *Request_Int64_Int64_Int32_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgDescription_ReadFromCache(ctx context.Context, in *Request_Int64_Int64_Int32_Int64, opts ...grpc.CallOption) (*Response, error)
	PostgresMigratePgDescription_ReadObject(ctx context.Context, in *Request_Int64_Int64_Int32_Int64, opts ...grpc.CallOption) (*Response, error)
	// PostgresMigratePgIndex
	PostgresMigratePgIndex_Read(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	PostgresMigratePgIndex_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PostgresMigratePgIndex_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PostgresMigratePgIndex_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PostgresMigratePgIndex_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indcheckxmin(ctx context.Context, in *Request_Int64_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indclass(ctx context.Context, in *Request_Int64_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indcollation(ctx context.Context, in *Request_Int64_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indexprs(ctx context.Context, in *Request_Int64_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indexrelid(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indimmediate(ctx context.Context, in *Request_Int64_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indisclustered(ctx context.Context, in *Request_Int64_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indisexclusion(ctx context.Context, in *Request_Int64_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indislive(ctx context.Context, in *Request_Int64_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indisprimary(ctx context.Context, in *Request_Int64_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indisready(ctx context.Context, in *Request_Int64_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indisreplident(ctx context.Context, in *Request_Int64_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indisunique(ctx context.Context, in *Request_Int64_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indisvalid(ctx context.Context, in *Request_Int64_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indkey(ctx context.Context, in *Request_Int64_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indnatts(ctx context.Context, in *Request_Int64_Int64_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indnkeyatts(ctx context.Context, in *Request_Int64_Int64_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indoption(ctx context.Context, in *Request_Int64_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indpred(ctx context.Context, in *Request_Int64_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indrelid(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_VersionID(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgIndex_ReadFromCache(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	PostgresMigratePgIndex_ReadObject(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	// PostgresMigratePgNamespace
	PostgresMigratePgNamespace_Read(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	PostgresMigratePgNamespace_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PostgresMigratePgNamespace_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PostgresMigratePgNamespace_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PostgresMigratePgNamespace_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgNamespace_Update_Nspacl(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgNamespace_Update_Nspname(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgNamespace_Update_Nspowner(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgNamespace_Update_Oid(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgNamespace_Update_VersionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigratePgNamespace_ReadFromCache(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	PostgresMigratePgNamespace_ReadObject(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	// PostgresMigrateVersion
	PostgresMigrateVersion_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	PostgresMigrateVersion_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PostgresMigrateVersion_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PostgresMigrateVersion_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PostgresMigrateVersion_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigrateVersion_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigrateVersion_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PostgresMigrateVersion_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	PostgresMigrateVersion_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// AccountingArea
	AccountingArea_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	AccountingArea_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	AccountingArea_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	AccountingArea_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	AccountingArea_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error)
	AccountingArea_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	AccountingArea_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	AccountingArea_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	AccountingArea_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	AccountingArea_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	AccountingArea_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	AccountingArea_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	AccountingArea_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	AccountingArea_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// AccrualType
	AccrualType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	AccrualType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	AccrualType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	AccrualType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	AccrualType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	AccrualType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	AccrualType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	AccrualType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	AccrualType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	AccrualType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	AccrualType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// Balance
	Balance_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Balance_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Balance_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Balance_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Balance_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error)
	Balance_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Balance_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Balance_Update_BillingMonth(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Balance_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Balance_Update_ContractID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Balance_Update_DebtTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Balance_Update_DocumentAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Balance_Update_DocumentInvoiceID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Balance_Update_DocumentPaymentID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Balance_Update_Sum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Balance_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Balance_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Balance_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// BankAccountOrganization
	BankAccountOrganization_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	BankAccountOrganization_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	BankAccountOrganization_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	BankAccountOrganization_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	BankAccountOrganization_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error)
	BankAccountOrganization_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	BankAccountOrganization_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	BankAccountOrganization_Update_AccountNumber(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BankAccountOrganization_Update_BankID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BankAccountOrganization_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BankAccountOrganization_Update_OrganizationID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BankAccountOrganization_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	BankAccountOrganization_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BankAccountOrganization_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// Bank
	Bank_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Bank_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Bank_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Bank_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Bank_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error)
	Bank_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Bank_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Bank_Update_BIK(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Bank_Update_City(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Bank_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Bank_Update_CorrespondentAccount(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Bank_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Bank_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Bank_Update_OrganizationID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Bank_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Bank_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Bank_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// BeforeTimeType
	BeforeTimeType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	BeforeTimeType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	BeforeTimeType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	BeforeTimeType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	BeforeTimeType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	BeforeTimeType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	BeforeTimeType_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BeforeTimeType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BeforeTimeType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BeforeTimeType_Update_Value(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BeforeTimeType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	BeforeTimeType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BeforeTimeType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// BillKindType
	BillKindType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	BillKindType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	BillKindType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	BillKindType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	BillKindType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	BillKindType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	BillKindType_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BillKindType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BillKindType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BillKindType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	BillKindType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BillKindType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// Branch
	Branch_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Branch_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Branch_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Branch_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Branch_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Branch_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Branch_Update_Code(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Branch_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Branch_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Branch_Update_OrganizationID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Branch_Update_PersonalAreaLink(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Branch_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Branch_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Branch_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// Briefcase
	Briefcase_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Briefcase_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Briefcase_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Briefcase_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Briefcase_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Briefcase_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Briefcase_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Briefcase_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Briefcase_Update_LawerID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Briefcase_Update_BranchID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Briefcase_Update_Number(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Briefcase_Update_StatusID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Briefcase_SetLawer_ChangeItems(ctx context.Context, in *Request_Model_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Briefcase_FindEmployeeBy_LawerID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	Briefcase_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// BriefcaseComment
	BriefcaseComment_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	BriefcaseComment_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	BriefcaseComment_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	BriefcaseComment_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	BriefcaseComment_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	BriefcaseComment_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	BriefcaseComment_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BriefcaseComment_Update_BriefcaseID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BriefcaseComment_Update_CommentTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BriefcaseComment_Update_EmployeeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BriefcaseComment_Update_Message(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BriefcaseComment_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	BriefcaseComment_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	BriefcaseComment_FindMassBy_BriefcaseID_CommentTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseMass, error)
	// BriefcasesFile
	BriefcasesFile_Read(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	BriefcasesFile_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	BriefcasesFile_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	BriefcasesFile_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	BriefcasesFile_Delete(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	BriefcasesFile_Restore(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	BriefcasesFile_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BriefcasesFile_Update_BriefcaseID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BriefcasesFile_Update_FileID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BriefcasesFile_ReadFromCache(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	BriefcasesFile_ReadObject(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	BriefcasesFile_FindMassBy_BriefcaseID(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*ResponseMass, error)
	BriefcasesFile_FindMassObjectBy_BriefcaseID(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*ResponseMass, error)
	// BriefcasesHashtag
	BriefcasesHashtag_Read(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	BriefcasesHashtag_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	BriefcasesHashtag_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	BriefcasesHashtag_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	BriefcasesHashtag_Delete(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	BriefcasesHashtag_Restore(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	BriefcasesHashtag_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BriefcasesHashtag_Update_BriefcaseID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BriefcasesHashtag_Update_HashtagID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BriefcasesHashtag_ReadFromCache(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	BriefcasesHashtag_FindMassBy_BriefcaseID(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*ResponseMass, error)
	BriefcasesHashtag_ReadObject(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	// BriefcasesLawsuit
	BriefcasesLawsuit_Read(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	BriefcasesLawsuit_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	BriefcasesLawsuit_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	BriefcasesLawsuit_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	BriefcasesLawsuit_Delete(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	BriefcasesLawsuit_Restore(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	BriefcasesLawsuit_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BriefcasesLawsuit_Update_BriefcaseID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BriefcasesLawsuit_Update_LawsuitID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BriefcasesLawsuit_ReadFromCache(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	BriefcasesLawsuit_ReadObject(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	// BriefcaseStatusState
	BriefcaseStatusState_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	BriefcaseStatusState_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	BriefcaseStatusState_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	BriefcaseStatusState_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	BriefcaseStatusState_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	BriefcaseStatusState_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	BriefcaseStatusState_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BriefcaseStatusState_Update_BriefcaseDebtSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BriefcaseStatusState_Update_BriefcaseID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BriefcaseStatusState_Update_BriefcaseInvoiceSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BriefcaseStatusState_Update_BriefcasePaySum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BriefcaseStatusState_Update_ContractBillsTotalSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BriefcaseStatusState_Update_ContractDebtSumAllTypes(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BriefcaseStatusState_Update_ContractMainSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BriefcaseStatusState_Update_ContractPennySum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BriefcaseStatusState_Update_ContractRestrictSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BriefcaseStatusState_Update_ContractStateDutySum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BriefcaseStatusState_Update_StatusAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BriefcaseStatusState_Update_StatusID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	BriefcaseStatusState_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	BriefcaseStatusState_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// Calendar
	Calendar_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Calendar_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Calendar_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Calendar_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Calendar_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Calendar_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Calendar_Update_Comment(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Calendar_Update_Date(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Calendar_Update_DayTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Calendar_Update_Days(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Calendar_Update_Hours(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Calendar_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Calendar_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Calendar_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// ChangeItem
	ChangeItem_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ChangeItem_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ChangeItem_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ChangeItem_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ChangeItem_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ChangeItem_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ChangeItem_Update_Key(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ChangeItem_Update_Prev(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ChangeItem_Update_Value(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ChangeItem_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ChangeItem_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ChangeItem_Update_TableNameID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ChangeItem_Update_TableRowID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ChangeItem_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// ChannelType
	ChannelType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ChannelType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ChannelType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ChannelType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ChannelType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ChannelType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ChannelType_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ChannelType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ChannelType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ChannelType_Update_NotifierID(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ChannelType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ChannelType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ChannelType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// ClaimType
	ClaimType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ClaimType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ClaimType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ClaimType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ClaimType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ClaimType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ClaimType_Update_Code(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ClaimType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ClaimType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ClaimType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ClaimType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ClaimType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// ColorType
	ColorType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ColorType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ColorType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ColorType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ColorType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ColorType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ColorType_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ColorType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ColorType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ColorType_Update_Value(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ColorType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ColorType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ColorType_Update_Blue(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ColorType_Update_Green(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ColorType_Update_Red(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ColorType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// CommentType
	CommentType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	CommentType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	CommentType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	CommentType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	CommentType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	CommentType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	CommentType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	CommentType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	CommentType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	CommentType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	CommentType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// CompletedMonth
	CompletedMonth_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	CompletedMonth_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	CompletedMonth_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	CompletedMonth_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	CompletedMonth_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error)
	CompletedMonth_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	CompletedMonth_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	CompletedMonth_Update_AccountingAreaID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	CompletedMonth_Update_BillingMonth(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	CompletedMonth_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	CompletedMonth_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	CompletedMonth_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	CompletedMonth_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// Connection
	Connection_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Connection_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Connection_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Connection_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Connection_Update_BranchID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Connection_Update_DbName(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Connection_Update_DbScheme(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Connection_Update_IsLegal(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Connection_Update_Login(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Connection_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Connection_Update_Password(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Connection_Update_Port(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Connection_Update_Server(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Connection_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Connection_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Connection_FindBy_BranchID_IsLegal(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*Response, error)
	Connection_FindMassBy_BranchID(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*ResponseMass, error)
	Connection_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// ContractBlackItem
	ContractBlackItem_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ContractBlackItem_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ContractBlackItem_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ContractBlackItem_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ContractBlackItem_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ContractBlackItem_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ContractBlackItem_Update_ContractID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractBlackItem_Update_ContractNumber(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractBlackItem_Update_CreatedByID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractBlackItem_Update_DateFrom(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractBlackItem_Update_DateTo(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractBlackItem_Update_EDMSLink(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractBlackItem_Update_ModifiedByID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractBlackItem_Update_Note(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractBlackItem_Update_Reason(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractBlackItem_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ContractBlackItem_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractBlackItem_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// ContractCategoryType
	ContractCategoryType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ContractCategoryType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ContractCategoryType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ContractCategoryType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ContractCategoryType_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error)
	ContractCategoryType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ContractCategoryType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ContractCategoryType_Update_Code(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractCategoryType_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractCategoryType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractCategoryType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractCategoryType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ContractCategoryType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractCategoryType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// ContractType
	ContractType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ContractType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ContractType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ContractType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ContractType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ContractType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ContractType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ContractType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// ContractWhiteItem
	ContractWhiteItem_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ContractWhiteItem_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ContractWhiteItem_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ContractWhiteItem_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ContractWhiteItem_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ContractWhiteItem_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ContractWhiteItem_Update_ContractID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractWhiteItem_Update_ContractNumber(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractWhiteItem_Update_CreatedByID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractWhiteItem_Update_DateFrom(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractWhiteItem_Update_DateTo(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractWhiteItem_Update_EDMSLink(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractWhiteItem_Update_ModifiedByID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractWhiteItem_Update_Note(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractWhiteItem_Update_Reason(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractWhiteItem_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ContractWhiteItem_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractWhiteItem_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// Contract
	Contract_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Contract_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Contract_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Contract_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Contract_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error)
	Contract_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Contract_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Contract_FindBy_Number(ctx context.Context, in *RequestString, opts ...grpc.CallOption) (*Response, error)
	Contract_Update_BeginAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_Update_BranchID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_Update_CategoryID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_Update_CuratorClaimID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_Update_CuratorContractID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_Update_CuratorLegalID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_Update_CuratorPaymentID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_Update_CuratorTechAuditID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_Update_DaysToResolveClaim(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_Update_Email(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_Update_EndAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_Update_ErrorFromStackAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_Update_IndividualID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_Update_IsErrorFromStack(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_Update_IsIndOrganization(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_Update_IsOrganization(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_Update_IsValidEmail(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_Update_Number(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_Update_OrganizationConsigneeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_Update_OrganizationCustomerID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_Update_OrganizationPayerID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_Update_PostAddress(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_Update_SignAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_Update_Status(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_Update_TerminateAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Contract_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_Update_IsBelongsRosatom(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_Update_DepartmentID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_Update_Note(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_Update_SectorID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_Update_TypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Contract_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// ContractsTotalSum
	ContractsTotalSum_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ContractsTotalSum_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ContractsTotalSum_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ContractsTotalSum_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ContractsTotalSum_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ContractsTotalSum_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ContractsTotalSum_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractsTotalSum_Update_ContractID(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractsTotalSum_Update_MainSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractsTotalSum_Update_PennySum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractsTotalSum_Update_RestrictSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractsTotalSum_Update_StateDutySum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractsTotalSum_Update_TotalSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractsTotalSum_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ContractsTotalSum_Update_BillsSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractsTotalSum_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// ContractIndividual
	ContractIndividual_Read(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	ContractIndividual_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ContractIndividual_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ContractIndividual_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ContractIndividual_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractIndividual_Update_ContractID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractIndividual_Update_IndividualID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractIndividual_ReadFromCache(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	ContractIndividual_ReadObject(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	// ContractOrganization
	ContractOrganization_Read(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	ContractOrganization_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ContractOrganization_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ContractOrganization_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ContractOrganization_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractOrganization_Update_ContractID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractOrganization_Update_OrganizationID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ContractOrganization_ReadFromCache(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	ContractOrganization_ReadObject(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	// CourtSuit
	CourtSuit_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	CourtSuit_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	CourtSuit_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	CourtSuit_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	CourtSuit_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	CourtSuit_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	CourtSuit_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	CourtSuit_Update_BriefcaseID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	CourtSuit_Update_CourtID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	CourtSuit_Update_LawerID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	CourtSuit_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	CourtSuit_Update_LitigationTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	CourtSuit_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// CourtSuitsFile
	CourtSuitsFile_Read(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	CourtSuitsFile_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	CourtSuitsFile_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	CourtSuitsFile_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	CourtSuitsFile_Delete(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	CourtSuitsFile_Restore(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	CourtSuitsFile_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	CourtSuitsFile_Update_CourtSuitID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	CourtSuitsFile_Update_FileID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	CourtSuitsFile_ReadFromCache(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	CourtSuitsFile_ReadObject(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	CourtSuitsFile_FindMassBy_CourtSuitID(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*ResponseMass, error)
	CourtSuitsFile_FindMassObjectBy_CourtSuitID(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*ResponseMass, error)
	// Court
	Court_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Court_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Court_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Court_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Court_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Court_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Court_Update_City(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Court_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Court_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Court_Update_OrganizationID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Court_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Court_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Court_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// CourtSuitComment
	CourtSuitComment_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	CourtSuitComment_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	CourtSuitComment_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	CourtSuitComment_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	CourtSuitComment_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	CourtSuitComment_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	CourtSuitComment_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	CourtSuitComment_Update_CommentTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	CourtSuitComment_Update_CourtSuitID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	CourtSuitComment_Update_EmployeeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	CourtSuitComment_Update_Message(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	CourtSuitComment_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	CourtSuitComment_FindMassBy_CourtSuitID_CommentTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseMass, error)
	CourtSuitComment_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// DayType
	DayType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DayType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DayType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DayType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DayType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DayType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DayType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DayType_Update_IsWorkDay(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DayType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DayType_Update_ShortName(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DayType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DayType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DayType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// DebtType
	DebtType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DebtType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DebtType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DebtType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DebtType_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error)
	DebtType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DebtType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DebtType_Update_CodeNSI(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DebtType_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DebtType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DebtType_Update_ExtCode(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DebtType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DebtType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DebtType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DebtType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// DirectionType
	DirectionType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DirectionType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DirectionType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DirectionType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DirectionType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DirectionType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DirectionType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DirectionType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DirectionType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DirectionType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DirectionType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// DocumentLinkType
	DocumentLinkType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DocumentLinkType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DocumentLinkType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DocumentLinkType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DocumentLinkType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DocumentLinkType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DocumentLinkType_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentLinkType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentLinkType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentLinkType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DocumentLinkType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentLinkType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// DocumentLink
	DocumentLink_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DocumentLink_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DocumentLink_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DocumentLink_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DocumentLink_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error)
	DocumentLink_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DocumentLink_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DocumentLink_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentLink_Update_ContractID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentLink_Update_CorrectionSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentLink_Update_Document1ID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentLink_Update_Document2ID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentLink_Update_LinkTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentLink_Update_DateFrom(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentLink_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DocumentLink_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentLink_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// DocumentLinksRapira
	DocumentLinksRapira_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DocumentLinksRapira_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DocumentLinksRapira_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DocumentLinksRapira_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DocumentLinksRapira_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DocumentLinksRapira_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DocumentLinksRapira_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentLinksRapira_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentLinksRapira_Update_ContractID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentLinksRapira_Update_CorrectionSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentLinksRapira_Update_DateFrom(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentLinksRapira_Update_Document1ID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentLinksRapira_Update_Document2ID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentLinksRapira_Update_LinkTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentLinksRapira_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DocumentLinksRapira_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DocumentLinksRapira_Update_ModifiedAtStack(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentLinksRapira_Update_CreatedAtStack(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentLinksRapira_FindByExtID(ctx context.Context, in *RequestExtIDString, opts ...grpc.CallOption) (*Response, error)
	// DocumentRequired
	DocumentRequired_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DocumentRequired_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DocumentRequired_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DocumentRequired_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DocumentRequired_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DocumentRequired_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DocumentRequired_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentRequired_Update_Code(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentRequired_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentRequired_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DocumentRequired_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// DocumentReturnReason
	DocumentReturnReason_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DocumentReturnReason_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DocumentReturnReason_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DocumentReturnReason_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DocumentReturnReason_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DocumentReturnReason_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DocumentReturnReason_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentReturnReason_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentReturnReason_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentReturnReason_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DocumentReturnReason_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// DocumentStatus
	DocumentStatus_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DocumentStatus_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DocumentStatus_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DocumentStatus_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DocumentStatus_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DocumentStatus_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DocumentStatus_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentStatus_Update_Code(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentStatus_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentStatus_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DocumentStatus_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// DocumentType
	DocumentType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DocumentType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DocumentType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DocumentType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DocumentType_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error)
	DocumentType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DocumentType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DocumentType_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentType_Update_IncomeExpense(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentType_Update_IsService(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentType_Update_IsVisible(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentType_Update_ShortName(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentType_Update_Type(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	DocumentType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	DocumentType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// Document
	Document_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Document_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Document_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Document_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Document_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error)
	Document_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Document_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Document_Update_Analytics(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Document_Update_Balance(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Document_Update_BillKindID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Document_Update_BillingMonth(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Document_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Document_Update_ContractID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Document_Update_Count(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Document_Update_DebtSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Document_Update_DocumentAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Document_Update_DocumentSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Document_Update_DocumentTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Document_Update_Note(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Document_Update_Number(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Document_Update_NumberFull(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Document_Update_PayDeadline(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Document_Update_PayFrom(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Document_Update_PayTo(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Document_Update_Payment(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Document_Update_Reason(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Document_Update_ReversalID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Document_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Document_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Document_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// Employee
	Employee_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Employee_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Employee_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Employee_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Employee_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Employee_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Employee_FindByExtId(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error)
	Employee_FindByLogin(ctx context.Context, in *RequestString, opts ...grpc.CallOption) (*Response, error)
	Employee_FindByEMail(ctx context.Context, in *RequestString, opts ...grpc.CallOption) (*Response, error)
	Employee_FindByFIO(ctx context.Context, in *RequestString3, opts ...grpc.CallOption) (*Response, error)
	Employee_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error)
	Employee_Update_BranchID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Employee_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Employee_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Employee_Update_Email(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Employee_Update_IsActive(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Employee_Update_Login(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Employee_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Employee_Update_ParentName(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Employee_Update_Phone(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Employee_Update_Photo(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Employee_Update_Position(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Employee_Update_SecondName(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Employee_Update_Tag(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Employee_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Employee_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Employee_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// EmployeesHashtag
	EmployeesHashtag_Read(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	EmployeesHashtag_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	EmployeesHashtag_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	EmployeesHashtag_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	EmployeesHashtag_Delete(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	EmployeesHashtag_Restore(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	EmployeesHashtag_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	EmployeesHashtag_Update_EmployeeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	EmployeesHashtag_Update_HashtagID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	EmployeesHashtag_ReadFromCache(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	EmployeesHashtag_FindMassBy_EmployeeID(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*ResponseMass, error)
	EmployeesHashtag_ReadObject(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	// EventType
	EventType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	EventType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	EventType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	EventType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	EventType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	EventType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	EventType_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	EventType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	EventType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	EventType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	EventType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	EventType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// Event
	Event_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Event_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Event_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Event_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Event_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Event_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Event_Update_ColorTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Event_Update_CreatedByID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Event_Update_DeletedByID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Event_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Event_Update_EventTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Event_Update_FinishAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Event_Update_IsAllDay(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Event_Update_ModifiedByID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Event_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Event_Update_NotificationID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Event_Update_PerformerID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Event_Update_PriorityTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Event_Update_RepeatTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Event_Update_StartAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Event_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Event_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Event_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// Facsimile
	Facsimile_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Facsimile_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Facsimile_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Facsimile_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Facsimile_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Facsimile_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Facsimile_Update_Branch(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Facsimile_Update_Contract(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Facsimile_Update_Department(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Facsimile_Update_Post(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Facsimile_Update_Responsible(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Facsimile_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Facsimile_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Facsimile_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// File
	File_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	File_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	File_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	File_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	File_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	File_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	File_FindByFileID(ctx context.Context, in *RequestString, opts ...grpc.CallOption) (*Response, error)
	File_FindByFullName(ctx context.Context, in *RequestString, opts ...grpc.CallOption) (*Response, error)
	File_FindMassBy_TableNameID_TableRowID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseMass, error)
	File_FindMassBy_TableNameID_TableRowID_FileTypeID(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseMass, error)
	File_Update_BranchID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	File_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	File_Update_EmployeeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	File_Update_Extension(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	File_Update_FileID(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	File_Update_FileName(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	File_Update_FileTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	File_Update_FullName(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	File_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	File_Update_Size(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	File_Update_TemplateID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	File_Update_Version(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	File_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	File_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	File_Save_SaveLink_SaveChangeItems(ctx context.Context, in *Request_Model_Int64_Int64, opts ...grpc.CallOption) (*ResponseInt64, error)
	File_SaveLinkDeleted_SaveChangeItems(ctx context.Context, in *Request_Model_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	File_Update_TableNameID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	File_Update_TableRowID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	File_Update_BucketName(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	File_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// FileChange
	FileChange_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	FileChange_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	FileChange_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	FileChange_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	FileChange_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FileChange_Update_EmployeeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FileChange_Update_FileID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FileChange_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	FileChange_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FileChange_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// FileTemplate
	FileTemplate_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	FileTemplate_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	FileTemplate_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	FileTemplate_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	FileTemplate_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	FileTemplate_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	FileTemplate_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FileTemplate_Update_FileID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FileTemplate_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FileTemplate_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	FileTemplate_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FileTemplate_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// FilesClaim
	FilesClaim_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	FilesClaim_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	FilesClaim_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	FilesClaim_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	FilesClaim_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	FilesClaim_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	FilesClaim_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FilesClaim_Update_CheckOfClaim(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FilesClaim_Update_Code(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FilesClaim_Update_ConsumerSignature(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FilesClaim_Update_DateOfDocument(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FilesClaim_Update_DateOfDownload(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FilesClaim_Update_FilePath(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FilesClaim_Update_Invoice(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FilesClaim_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FilesClaim_Update_Number(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FilesClaim_Update_OriginalDocument(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FilesClaim_Update_Period(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FilesClaim_Update_PersonDownloadID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FilesClaim_Update_SignOfObligation(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FilesClaim_Update_StatusOfDocument(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FilesClaim_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// FileType
	FileType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	FileType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	FileType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	FileType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	FileType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	FileType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	FileType_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FileType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FileType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FileType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	FileType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FileType_Update_CanBeSynced(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FileType_Update_MimeType(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FileType_Update_RequireUpload(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FileType_ReadAll(ctx context.Context, in *Request_Empty, opts ...grpc.CallOption) (*ResponseMass, error)
	FileType_Update_TableNameID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FileType_FindBy_Code(ctx context.Context, in *Request_Int32, opts ...grpc.CallOption) (*Response, error)
	FileType_Update_ExistsBankMark(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FileType_Update_ExistsSignature(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FileType_Update_FilenameTemplate(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FileType_Update_MultipleLoad(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	FileType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// GenderType
	GenderType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	GenderType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	GenderType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	GenderType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	GenderType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	GenderType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	GenderType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	GenderType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	GenderType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	GenderType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// Hashtag
	Hashtag_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Hashtag_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Hashtag_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Hashtag_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Hashtag_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Hashtag_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Hashtag_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Hashtag_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Hashtag_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Hashtag_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Hashtag_ReadAll(ctx context.Context, in *Request_Empty, opts ...grpc.CallOption) (*ResponseMass, error)
	Hashtag_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// Individual
	Individual_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Individual_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Individual_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Individual_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Individual_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error)
	Individual_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Individual_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Individual_Update_BirthDate(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Individual_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Individual_Update_DeathDate(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Individual_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Individual_Update_Email(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Individual_Update_GenderID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Individual_Update_INN(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Individual_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Individual_Update_ParentName(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Individual_Update_Phone(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Individual_Update_SecondName(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Individual_Update_Snils(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Individual_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Individual_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Individual_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// InnerNotifyMessage
	InnerNotifyMessage_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	InnerNotifyMessage_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	InnerNotifyMessage_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	InnerNotifyMessage_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	InnerNotifyMessage_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	InnerNotifyMessage_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	InnerNotifyMessage_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	InnerNotifyMessage_Update_Body(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	InnerNotifyMessage_Update_ContractID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	InnerNotifyMessage_Update_MessageType(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	InnerNotifyMessage_Update_RecipientEmail(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	InnerNotifyMessage_Update_SendResult(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	InnerNotifyMessage_Update_SenderEmail(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	InnerNotifyMessage_Update_Subject(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	InnerNotifyMessage_Update_Title(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	InnerNotifyMessage_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	InnerNotifyMessage_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// InvoiceDebtTypeStat
	InvoiceDebtTypeStat_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	InvoiceDebtTypeStat_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	InvoiceDebtTypeStat_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	InvoiceDebtTypeStat_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	InvoiceDebtTypeStat_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	InvoiceDebtTypeStat_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	InvoiceDebtTypeStat_Update_DebtTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	InvoiceDebtTypeStat_Update_InvoiceID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	InvoiceDebtTypeStat_Update_StateAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	InvoiceDebtTypeStat_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	InvoiceDebtTypeStat_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	InvoiceDebtTypeStat_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// Lawsuit
	Lawsuit_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Lawsuit_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Lawsuit_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Lawsuit_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Lawsuit_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Lawsuit_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Lawsuit_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error)
	Lawsuit_FindBy_Number(ctx context.Context, in *RequestString, opts ...grpc.CallOption) (*Response, error)
	Lawsuit_FindBy_NumberClaim(ctx context.Context, in *RequestString, opts ...grpc.CallOption) (*Response, error)
	Lawsuit_Update_BranchID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_Chance(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_ClaimAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_ClaimPeriodStr(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_ClaimTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_ClosedAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_ContractID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_ControlledAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_CourtID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_CuratorClaimID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_CuratorContractID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_CuratorLegalID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_CuratorPaymentID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_CuratorTechAuditID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_DateFrom(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_DateTo(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_DebtSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_DebtSumAllTypes(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_ErrorText(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_InvoiceSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_IsClosed(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_MainSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_NotifyClaimAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_NotifyClaimChannel(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_NotifyClaimCode(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_NotifyClaimDone(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_NotifyClaimMailingCode(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_NotifyPretrialAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_NotifyPretrialChannel(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_NotifyPretrialCode(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_NotifyPretrialDone(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_NotifyPretrialMailingCode(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_Number(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_NumberClaim(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_NumberTrial(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_PaySum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_Penalty(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_Penny(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_Percent317(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_Percent395(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_PretrialAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_ProcessKey(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_ProcessStartedAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_ReasonID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_RestrictSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_StageAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_StageID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_StateDuty(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_StatusAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_StatusID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_Tag(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_TypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_UnknownPayments(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_TrialAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Lawsuit_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_NotifyPostBarcode(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_Update_NotifyPostReq(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Lawsuit_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// LawsuitComment
	LawsuitComment_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitComment_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitComment_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitComment_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitComment_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitComment_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitComment_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitComment_Update_CommentTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitComment_Update_EmployeeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitComment_Update_LawsuitID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitComment_Update_Message(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitComment_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitComment_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitComment_FindMassBy_LawsuitID_CommentTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseMass, error)
	// LawsuitsFile
	LawsuitsFile_Read(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitsFile_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitsFile_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitsFile_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitsFile_Delete(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitsFile_Restore(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitsFile_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitsFile_Update_FileID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitsFile_Update_LawsuitID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitsFile_ReadFromCache(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitsFile_ReadObject(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitsFile_FindMassBy_LawsuitID(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*ResponseMass, error)
	LawsuitsFile_FindMassObjectBy_LawsuitID(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*ResponseMass, error)
	// LawsuitInvoiceCorrection
	LawsuitInvoiceCorrection_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitInvoiceCorrection_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitInvoiceCorrection_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitInvoiceCorrection_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitInvoiceCorrection_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitInvoiceCorrection_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitInvoiceCorrection_Update_CorrectionDocumentID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitInvoiceCorrection_Update_CorrectionDocumentSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitInvoiceCorrection_Update_InvoiceDocumentID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitInvoiceCorrection_Update_LawsuitID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitInvoiceCorrection_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitInvoiceCorrection_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitInvoiceCorrection_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// LawsuitInvoice
	LawsuitInvoice_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitInvoice_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitInvoice_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitInvoice_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitInvoice_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitInvoice_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitInvoice_Update_ClosedAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitInvoice_Update_ClosedSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitInvoice_Update_Count(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitInvoice_Update_DocumentID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitInvoice_Update_DocumentSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitInvoice_Update_IsClosed(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitInvoice_Update_IsCorrective(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitInvoice_Update_LawsuitID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitInvoice_Update_Sum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitInvoice_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitInvoice_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitInvoice_Update_BriefcaseID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitInvoice_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// LawsuitPaymentCorrection
	LawsuitPaymentCorrection_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitPaymentCorrection_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitPaymentCorrection_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitPaymentCorrection_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitPaymentCorrection_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitPaymentCorrection_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitPaymentCorrection_Update_CorrectionDocumentID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitPaymentCorrection_Update_CorrectionDocumentSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitPaymentCorrection_Update_LawsuitID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitPaymentCorrection_Update_PaymentDocumentID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitPaymentCorrection_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitPaymentCorrection_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitPaymentCorrection_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// LawsuitPayment
	LawsuitPayment_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitPayment_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitPayment_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitPayment_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitPayment_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitPayment_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitPayment_Update_DocumentID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitPayment_Update_DocumentSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitPayment_Update_InvoiceID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitPayment_Update_IsCorrective(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitPayment_Update_LawsuitID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitPayment_Update_Sum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitPayment_Update_LinkedAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitPayment_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitPayment_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitPayment_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// LawsuitReasonType
	LawsuitReasonType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitReasonType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitReasonType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitReasonType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitReasonType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitReasonType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitReasonType_Update_Code(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitReasonType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitReasonType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitReasonType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitReasonType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitReasonType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// LawsuitStageType
	LawsuitStageType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitStageType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitStageType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitStageType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitStageType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitStageType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitStageType_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitStageType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitStageType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitStageType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitStageType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitStageType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// LawsuitStatusState
	LawsuitStatusState_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitStatusState_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitStatusState_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitStatusState_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitStatusState_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitStatusState_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitStatusState_FillFromLawsuit(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitStatusState_FindDebtSum(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseFloat64, error)
	LawsuitStatusState_FindPreviousStatus(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseInt64, error)
	LawsuitStatusState_Update_CommentID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitStatusState_Update_InvoiceSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitStatusState_Update_LawsuitID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitStatusState_Update_MainSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitStatusState_Update_PaySum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitStatusState_Update_PenaltySum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitStatusState_Update_PennySum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitStatusState_Update_RestrictSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitStatusState_Update_StateDutySum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitStatusState_Update_StatusAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitStatusState_Update_StatusID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitStatusState_Update_Tag(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitStatusState_Update_TotalDebt(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitStatusState_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitStatusState_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitStatusState_Update_ContractDebtSumAllTypes(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitStatusState_Update_BillsTotalSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitStatusState_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// LawsuitStatusType
	LawsuitStatusType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitStatusType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitStatusType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitStatusType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitStatusType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitStatusType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitStatusType_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitStatusType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitStatusType_Update_IsClosed(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitStatusType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitStatusType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitStatusType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitStatusType_Update_ColorID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitStatusType_Update_IsError(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitStatusType_Update_IsTech(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitStatusType_Update_ViewSort(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitStatusType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// LawsuitType
	LawsuitType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitType_Update_Code(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LawsuitType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// LegalType
	LegalType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LegalType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LegalType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LegalType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LegalType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LegalType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LegalType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LegalType_Update_IsIndividual(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LegalType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LegalType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LegalType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LegalType_ReadAll(ctx context.Context, in *Request_Empty, opts ...grpc.CallOption) (*ResponseMass, error)
	LegalType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// LitigationType
	LitigationType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LitigationType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LitigationType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LitigationType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LitigationType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LitigationType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LitigationType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LitigationType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LitigationType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LitigationType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	LitigationType_ReadAll(ctx context.Context, in *Request_Empty, opts ...grpc.CallOption) (*ResponseMass, error)
	LitigationType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// MessageAttachement
	MessageAttachement_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	MessageAttachement_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	MessageAttachement_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	MessageAttachement_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	MessageAttachement_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	MessageAttachement_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	MessageAttachement_Update_FilesID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	MessageAttachement_Update_MessagesID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	MessageAttachement_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	MessageAttachement_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	MessageAttachement_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// MessageSendStatus
	MessageSendStatus_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	MessageSendStatus_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	MessageSendStatus_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	MessageSendStatus_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	MessageSendStatus_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	MessageSendStatus_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	MessageSendStatus_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	MessageSendStatus_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	MessageSendStatus_Update_FormalName(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	MessageSendStatus_Update_IsDelivered(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	MessageSendStatus_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	MessageSendStatus_Update_NotifierID(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	MessageSendStatus_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	MessageSendStatus_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	MessageSendStatus_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// MessageType
	MessageType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	MessageType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	MessageType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	MessageType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	MessageType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	MessageType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	MessageType_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	MessageType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	MessageType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	MessageType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	MessageType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	MessageType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// Message
	Message_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Message_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Message_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Message_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Message_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Message_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Message_FindBy_LawsuitID_MessageTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	Message_Update_ChannelTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Message_Update_ContactFrom(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Message_Update_ContactTo(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Message_Update_DirectionTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Message_Update_EmployeeIdFrom(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Message_Update_EmployeeIdTo(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Message_Update_ExtCode(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Message_Update_LawsuitID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Message_Update_MailingCode(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Message_Update_MessageFileID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Message_Update_MessageTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Message_Update_ReceiveResult(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Message_Update_ReceiveStatusID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Message_Update_ReceivedAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Message_Update_SendResult(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Message_Update_SendStatusID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Message_Update_SentAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Message_Update_Topic(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Message_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Message_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Message_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// NotificationType
	NotificationType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	NotificationType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	NotificationType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	NotificationType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	NotificationType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	NotificationType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	NotificationType_Update_BeforeTimeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	NotificationType_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	NotificationType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	NotificationType_Update_InTime(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	NotificationType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	NotificationType_Update_Value(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	NotificationType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	NotificationType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	NotificationType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// Organization
	Organization_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Organization_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Organization_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Organization_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Organization_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Organization_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Organization_FindByInnKpp(ctx context.Context, in *RequestInnKpp, opts ...grpc.CallOption) (*Response, error)
	Organization_FindBy_InnKppLegaltype(ctx context.Context, in *Request_String_String_Int64, opts ...grpc.CallOption) (*Response, error)
	Organization_FindByExtId(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error)
	Organization_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error)
	Organization_Update_BankruptAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_Update_BookkeeperName(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_Update_CategoryID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_Update_Email(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_Update_FullName(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_Update_INN(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_Update_IsActive(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_Update_IsBankrupt(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_Update_IsLiquidated(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_Update_KPP(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_Update_LegalAddress(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_Update_LegalEmail(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_Update_LegalTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_Update_LiquidateAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_Update_ManagerName(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_Update_NSIFlat(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_Update_NSIFlatID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_Update_NSIID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_Update_OGRN(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_Update_OKATO(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_Update_OKPO(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_Update_Phone(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_Update_PostAddress(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_Update_PostAddressID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_Update_RegistrationAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_Update_StateCode(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_Update_StateID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_Update_WWW(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	Organization_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_Update_LegalAddressStack(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	Organization_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// OrganizationsFile
	OrganizationsFile_Read(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	OrganizationsFile_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	OrganizationsFile_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	OrganizationsFile_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	OrganizationsFile_Delete(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	OrganizationsFile_Restore(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	OrganizationsFile_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	OrganizationsFile_Update_FileID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	OrganizationsFile_Update_OrganizationID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	OrganizationsFile_ReadFromCache(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	OrganizationsFile_ReadObject(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	// OrganizationCasebook
	OrganizationCasebook_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	OrganizationCasebook_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	OrganizationCasebook_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	OrganizationCasebook_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	OrganizationCasebook_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	OrganizationCasebook_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	OrganizationCasebook_FindByInnKpp(ctx context.Context, in *RequestInnKpp, opts ...grpc.CallOption) (*Response, error)
	OrganizationCasebook_FindByInn(ctx context.Context, in *RequestString, opts ...grpc.CallOption) (*Response, error)
	OrganizationCasebook_FindByOrganizationId(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	OrganizationCasebook_Update_INN(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	OrganizationCasebook_Update_JSONFileID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	OrganizationCasebook_Update_JSONUpdatedAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	OrganizationCasebook_Update_OrganizationID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	OrganizationCasebook_Update_PDFFileID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	OrganizationCasebook_Update_PDFUpdatedAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	OrganizationCasebook_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	OrganizationCasebook_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	OrganizationCasebook_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// OrganizationCategoryType
	OrganizationCategoryType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	OrganizationCategoryType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	OrganizationCategoryType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	OrganizationCategoryType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	OrganizationCategoryType_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error)
	OrganizationCategoryType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	OrganizationCategoryType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	OrganizationCategoryType_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	OrganizationCategoryType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	OrganizationCategoryType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	OrganizationCategoryType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	OrganizationCategoryType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	OrganizationCategoryType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// OrganizationStateType
	OrganizationStateType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	OrganizationStateType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	OrganizationStateType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	OrganizationStateType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	OrganizationStateType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	OrganizationStateType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	OrganizationStateType_Update_ActionIndividual(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	OrganizationStateType_Update_ActionOrganization(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	OrganizationStateType_Update_Code(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	OrganizationStateType_Update_Color(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	OrganizationStateType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	OrganizationStateType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	OrganizationStateType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	OrganizationStateType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	OrganizationStateType_Update_IsBankrupt(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	OrganizationStateType_Update_IsLiquidated(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error)
	OrganizationStateType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// PaymentDay
	PaymentDay_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	PaymentDay_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PaymentDay_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PaymentDay_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PaymentDay_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error)
	PaymentDay_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	PaymentDay_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	PaymentDay_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PaymentDay_Update_ContractID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PaymentDay_Update_DateFrom(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PaymentDay_Update_DateTo(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PaymentDay_Update_Day(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PaymentDay_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	PaymentDay_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PaymentDay_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// PaymentSchedule
	PaymentSchedule_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	PaymentSchedule_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PaymentSchedule_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PaymentSchedule_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PaymentSchedule_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error)
	PaymentSchedule_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	PaymentSchedule_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	PaymentSchedule_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PaymentSchedule_Update_ContractID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PaymentSchedule_Update_DateFrom(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PaymentSchedule_Update_DateTo(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PaymentSchedule_Update_Day(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PaymentSchedule_Update_Percent(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PaymentSchedule_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	PaymentSchedule_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PaymentSchedule_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// PenaltyCalculationItem
	PenaltyCalculationItem_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	PenaltyCalculationItem_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PenaltyCalculationItem_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PenaltyCalculationItem_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PenaltyCalculationItem_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error)
	PenaltyCalculationItem_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	PenaltyCalculationItem_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	PenaltyCalculationItem_Update_BillingMonth(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PenaltyCalculationItem_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PenaltyCalculationItem_Update_ContractID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PenaltyCalculationItem_Update_DateFrom(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PenaltyCalculationItem_Update_DateTo(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PenaltyCalculationItem_Update_DaysCount(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PenaltyCalculationItem_Update_DebtSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PenaltyCalculationItem_Update_DebtorCategoryID(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PenaltyCalculationItem_Update_Dividend(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PenaltyCalculationItem_Update_Divider(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PenaltyCalculationItem_Update_DocumentInvoiceID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PenaltyCalculationItem_Update_Flags(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PenaltyCalculationItem_Update_PaymentDueAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PenaltyCalculationItem_Update_PenaltyCalculationItemsTypeID(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PenaltyCalculationItem_Update_Percent(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PenaltyCalculationItem_Update_Sum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PenaltyCalculationItem_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	PenaltyCalculationItem_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PenaltyCalculationItem_Update_DebtCollectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PenaltyCalculationItem_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// PenaltyCalculationItemsType
	PenaltyCalculationItemsType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	PenaltyCalculationItemsType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PenaltyCalculationItemsType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PenaltyCalculationItemsType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PenaltyCalculationItemsType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	PenaltyCalculationItemsType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	PenaltyCalculationItemsType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PenaltyCalculationItemsType_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PenaltyCalculationItemsType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PenaltyCalculationItemsType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PenaltyCalculationItemsType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	PenaltyCalculationItemsType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// PriorityType
	PriorityType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	PriorityType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PriorityType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PriorityType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PriorityType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	PriorityType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	PriorityType_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PriorityType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PriorityType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PriorityType_Update_Value(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PriorityType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	PriorityType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	PriorityType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// RepeatType
	RepeatType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	RepeatType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	RepeatType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	RepeatType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	RepeatType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	RepeatType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	RepeatType_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	RepeatType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	RepeatType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	RepeatType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	RepeatType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	RepeatType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// ServiceProvider
	ServiceProvider_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ServiceProvider_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ServiceProvider_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ServiceProvider_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ServiceProvider_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error)
	ServiceProvider_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ServiceProvider_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ServiceProvider_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ServiceProvider_Update_DateFrom(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ServiceProvider_Update_DateTo(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ServiceProvider_Update_OrganizationID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ServiceProvider_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ServiceProvider_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ServiceProvider_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// ServiceType
	ServiceType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ServiceType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ServiceType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ServiceType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ServiceType_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error)
	ServiceType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ServiceType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ServiceType_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ServiceType_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ServiceType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ServiceType_Update_FullName(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ServiceType_Update_Measure(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ServiceType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ServiceType_Update_ServiceProviderID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ServiceType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	ServiceType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	ServiceType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// StateDuty
	StateDuty_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	StateDuty_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	StateDuty_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	StateDuty_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	StateDuty_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	StateDuty_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	StateDuty_Update_CourtID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDuty_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDuty_Update_LawsuitID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDuty_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDuty_Update_RequestDate(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDuty_Update_RequestNumber(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDuty_Update_Sum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDuty_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	StateDuty_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDuty_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// StateDutyConsumption
	StateDutyConsumption_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	StateDutyConsumption_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	StateDutyConsumption_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	StateDutyConsumption_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	StateDutyConsumption_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	StateDutyConsumption_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	StateDutyConsumption_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDutyConsumption_Update_CourtSuitID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDutyConsumption_Update_StateDutyPaymentsPaymentID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDutyConsumption_Update_StateDutyPaymentsReturnID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDutyConsumption_Update_StateDutyRegistryID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDutyConsumption_Update_StateDutySum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDutyConsumption_Update_StatusID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDutyConsumption_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	StateDutyConsumption_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// StateDutyConsumptionsFile
	StateDutyConsumptionsFile_Read(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	StateDutyConsumptionsFile_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	StateDutyConsumptionsFile_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	StateDutyConsumptionsFile_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	StateDutyConsumptionsFile_Delete(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	StateDutyConsumptionsFile_Restore(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	StateDutyConsumptionsFile_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDutyConsumptionsFile_Update_ConsumptionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDutyConsumptionsFile_Update_FileID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDutyConsumptionsFile_ReadFromCache(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	StateDutyConsumptionsFile_ReadObject(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	// StateDutyPaymentType
	StateDutyPaymentType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	StateDutyPaymentType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	StateDutyPaymentType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	StateDutyPaymentType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	StateDutyPaymentType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	StateDutyPaymentType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	StateDutyPaymentType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDutyPaymentType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDutyPaymentType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDutyPaymentType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	StateDutyPaymentType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// StateDutyPayment
	StateDutyPayment_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	StateDutyPayment_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	StateDutyPayment_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	StateDutyPayment_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	StateDutyPayment_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	StateDutyPayment_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	StateDutyPayment_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDutyPayment_Update_BranchID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDutyPayment_Update_CourtID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDutyPayment_Update_DocumentSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDutyPayment_Update_FileID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDutyPayment_Update_Number(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDutyPayment_Update_PaymentDate(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDutyPayment_Update_StateDutyPaymentTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDutyPayment_Update_TaxOfficeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDutyPayment_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	StateDutyPayment_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// StateDutyRegistry
	StateDutyRegistry_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	StateDutyRegistry_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	StateDutyRegistry_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	StateDutyRegistry_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	StateDutyRegistry_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	StateDutyRegistry_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	StateDutyRegistry_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDutyRegistry_Update_BranchID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDutyRegistry_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	StateDutyRegistry_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// StateDutyStatus
	StateDutyStatus_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	StateDutyStatus_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	StateDutyStatus_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	StateDutyStatus_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	StateDutyStatus_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	StateDutyStatus_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	StateDutyStatus_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDutyStatus_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDutyStatus_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	StateDutyStatus_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	StateDutyStatus_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// TableName
	TableName_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	TableName_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	TableName_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	TableName_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	TableName_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	TableName_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	TableName_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	TableName_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	TableName_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	TableName_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	TableName_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// TaxOffice
	TaxOffice_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	TaxOffice_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	TaxOffice_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	TaxOffice_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	TaxOffice_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	TaxOffice_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	TaxOffice_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	TaxOffice_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	TaxOffice_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	TaxOffice_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	TaxOffice_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// UserRole
	UserRole_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	UserRole_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	UserRole_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	UserRole_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	UserRole_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	UserRole_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	UserRole_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	UserRole_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	UserRole_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	UserRole_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	UserRole_ReadAll(ctx context.Context, in *Request_Empty, opts ...grpc.CallOption) (*ResponseMass, error)
	UserRole_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	// UserRolesMembership
	UserRolesMembership_Read(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	UserRolesMembership_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	UserRolesMembership_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	UserRolesMembership_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	UserRolesMembership_Delete(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	UserRolesMembership_Restore(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	UserRolesMembership_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	UserRolesMembership_Update_EmployeeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	UserRolesMembership_Update_UserRoleID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error)
	UserRolesMembership_ReadFromCache(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	UserRolesMembership_FindMassBy_EmployeeID(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*ResponseMass, error)
	UserRolesMembership_FindMassBy_UserRoleID(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*ResponseMass, error)
	UserRolesMembership_ReadObject(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error)
	// WhiteListReasonType
	WhiteListReasonType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	WhiteListReasonType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	WhiteListReasonType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	WhiteListReasonType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	WhiteListReasonType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	WhiteListReasonType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	WhiteListReasonType_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error)
	WhiteListReasonType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	WhiteListReasonType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error)
	WhiteListReasonType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
	WhiteListReasonType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error)
	WhiteListReasonType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error)
}

type postgresMigrateClient struct {
	cc grpc.ClientConnInterface
}

func NewPostgresMigrateClient(cc grpc.ClientConnInterface) PostgresMigrateClient {
	return &postgresMigrateClient{cc}
}

func (c *postgresMigrateClient) PostgresMigratePgAttribute_Read(ctx context.Context, in *Request_String_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgAttribute_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgAttribute_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgAttribute_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgAttribute_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgAttribute_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgAttribute_Update_Attalign(ctx context.Context, in *Request_String_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attalign", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgAttribute_Update_Attbyval(ctx context.Context, in *Request_String_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attbyval", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgAttribute_Update_Attcacheoff(ctx context.Context, in *Request_String_Int64_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attcacheoff", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgAttribute_Update_Attcollation(ctx context.Context, in *Request_String_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attcollation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgAttribute_Update_Attgenerated(ctx context.Context, in *Request_String_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attgenerated", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgAttribute_Update_Atthasdef(ctx context.Context, in *Request_String_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Atthasdef", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgAttribute_Update_Atthasmissing(ctx context.Context, in *Request_String_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Atthasmissing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgAttribute_Update_Attidentity(ctx context.Context, in *Request_String_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attidentity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgAttribute_Update_Attinhcount(ctx context.Context, in *Request_String_Int64_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attinhcount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgAttribute_Update_Attisdropped(ctx context.Context, in *Request_String_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attisdropped", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgAttribute_Update_Attislocal(ctx context.Context, in *Request_String_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attislocal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgAttribute_Update_Attlen(ctx context.Context, in *Request_String_Int64_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attlen", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgAttribute_Update_Attname(ctx context.Context, in *Request_String_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attname", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgAttribute_Update_Attndims(ctx context.Context, in *Request_String_Int64_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attndims", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgAttribute_Update_Attnotnull(ctx context.Context, in *Request_String_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attnotnull", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgAttribute_Update_Attnum(ctx context.Context, in *Request_String_Int64_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attnum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgAttribute_Update_Attrelid(ctx context.Context, in *Request_String_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attrelid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgAttribute_Update_Attstattarget(ctx context.Context, in *Request_String_Int64_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attstattarget", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgAttribute_Update_Attstorage(ctx context.Context, in *Request_String_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attstorage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgAttribute_Update_Atttypid(ctx context.Context, in *Request_String_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Atttypid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgAttribute_Update_Atttypmod(ctx context.Context, in *Request_String_Int64_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Atttypmod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgAttribute_Update_VersionID(ctx context.Context, in *Request_String_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_VersionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgAttribute_ReadFromCache(ctx context.Context, in *Request_String_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgAttribute_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgAttribute_ReadObject(ctx context.Context, in *Request_String_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgAttribute_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Read(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Update_Oid(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Oid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Update_Relallvisible(ctx context.Context, in *Request_Int64_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relallvisible", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Update_Relam(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relam", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Update_Relchecks(ctx context.Context, in *Request_Int64_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relchecks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Update_Relfilenode(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relfilenode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Update_Relforcerowsecurity(ctx context.Context, in *Request_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relforcerowsecurity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Update_Relfrozenxid(ctx context.Context, in *Request_Int64_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relfrozenxid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Update_Relhasindex(ctx context.Context, in *Request_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relhasindex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Update_Relhasrules(ctx context.Context, in *Request_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relhasrules", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Update_Relhassubclass(ctx context.Context, in *Request_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relhassubclass", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Update_Relhastriggers(ctx context.Context, in *Request_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relhastriggers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Update_Relispartition(ctx context.Context, in *Request_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relispartition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Update_Relispopulated(ctx context.Context, in *Request_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relispopulated", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Update_Relisshared(ctx context.Context, in *Request_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relisshared", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Update_Relkind(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relkind", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Update_Relminmxid(ctx context.Context, in *Request_Int64_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relminmxid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Update_Relname(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relname", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Update_Relnamespace(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relnamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Update_Relnatts(ctx context.Context, in *Request_Int64_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relnatts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Update_Reloftype(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Reloftype", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Update_Relowner(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relowner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Update_Relpages(ctx context.Context, in *Request_Int64_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relpages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Update_Relpersistence(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relpersistence", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Update_Relreplident(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relreplident", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Update_Relrewrite(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relrewrite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Update_Relrowsecurity(ctx context.Context, in *Request_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relrowsecurity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Update_Reltablespace(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Reltablespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Update_Reltoastrelid(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Reltoastrelid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Update_Reltuples(ctx context.Context, in *Request_Int64_Int64_Float32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Reltuples", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Update_Reltype(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Reltype", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_Update_VersionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_VersionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_ReadFromCache(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgClass_ReadObject(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgClass_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgConstraint_Read(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgConstraint_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgConstraint_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgConstraint_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgConstraint_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgConstraint_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgConstraint_Update_Condeferrable(ctx context.Context, in *Request_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Condeferrable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgConstraint_Update_Condeferred(ctx context.Context, in *Request_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Condeferred", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgConstraint_Update_Conexclop(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Conexclop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgConstraint_Update_Confdeltype(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Confdeltype", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgConstraint_Update_Conffeqop(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Conffeqop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgConstraint_Update_Confkey(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Confkey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgConstraint_Update_Confmatchtype(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Confmatchtype", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgConstraint_Update_Confrelid(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Confrelid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgConstraint_Update_Confupdtype(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Confupdtype", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgConstraint_Update_Conindid(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Conindid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgConstraint_Update_Coninhcount(ctx context.Context, in *Request_Int64_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Coninhcount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgConstraint_Update_Conislocal(ctx context.Context, in *Request_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Conislocal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgConstraint_Update_Conkey(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Conkey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgConstraint_Update_Conname(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Conname", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgConstraint_Update_Connamespace(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Connamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgConstraint_Update_Connoinherit(ctx context.Context, in *Request_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Connoinherit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgConstraint_Update_Conparentid(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Conparentid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgConstraint_Update_Conpfeqop(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Conpfeqop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgConstraint_Update_Conppeqop(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Conppeqop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgConstraint_Update_Conrelid(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Conrelid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgConstraint_Update_Contype(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Contype", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgConstraint_Update_Contypid(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Contypid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgConstraint_Update_Convalidated(ctx context.Context, in *Request_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Convalidated", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgConstraint_Update_Oid(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Oid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgConstraint_Update_VersionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_VersionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgConstraint_ReadFromCache(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgConstraint_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgConstraint_ReadObject(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgConstraint_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgDescription_Read(ctx context.Context, in *Request_Int64_Int64_Int32_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgDescription_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgDescription_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgDescription_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgDescription_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgDescription_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgDescription_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgDescription_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgDescription_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgDescription_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgDescription_Update_Classoid(ctx context.Context, in *Request_Int64_Int64_Int32_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgDescription_Update_Classoid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgDescription_Update_Description(ctx context.Context, in *Request_Int64_Int64_Int32_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgDescription_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgDescription_Update_Objoid(ctx context.Context, in *Request_Int64_Int64_Int32_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgDescription_Update_Objoid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgDescription_Update_Objsubid(ctx context.Context, in *Request_Int64_Int64_Int32_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgDescription_Update_Objsubid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgDescription_Update_VersionID(ctx context.Context, in *Request_Int64_Int64_Int32_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgDescription_Update_VersionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgDescription_ReadFromCache(ctx context.Context, in *Request_Int64_Int64_Int32_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgDescription_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgDescription_ReadObject(ctx context.Context, in *Request_Int64_Int64_Int32_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgDescription_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgIndex_Read(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgIndex_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgIndex_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgIndex_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgIndex_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgIndex_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgIndex_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgIndex_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgIndex_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgIndex_Update_Indcheckxmin(ctx context.Context, in *Request_Int64_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indcheckxmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgIndex_Update_Indclass(ctx context.Context, in *Request_Int64_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indclass", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgIndex_Update_Indcollation(ctx context.Context, in *Request_Int64_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indcollation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgIndex_Update_Indexprs(ctx context.Context, in *Request_Int64_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indexprs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgIndex_Update_Indexrelid(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indexrelid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgIndex_Update_Indimmediate(ctx context.Context, in *Request_Int64_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indimmediate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgIndex_Update_Indisclustered(ctx context.Context, in *Request_Int64_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indisclustered", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgIndex_Update_Indisexclusion(ctx context.Context, in *Request_Int64_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indisexclusion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgIndex_Update_Indislive(ctx context.Context, in *Request_Int64_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indislive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgIndex_Update_Indisprimary(ctx context.Context, in *Request_Int64_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indisprimary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgIndex_Update_Indisready(ctx context.Context, in *Request_Int64_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indisready", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgIndex_Update_Indisreplident(ctx context.Context, in *Request_Int64_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indisreplident", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgIndex_Update_Indisunique(ctx context.Context, in *Request_Int64_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indisunique", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgIndex_Update_Indisvalid(ctx context.Context, in *Request_Int64_Int64_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indisvalid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgIndex_Update_Indkey(ctx context.Context, in *Request_Int64_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indkey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgIndex_Update_Indnatts(ctx context.Context, in *Request_Int64_Int64_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indnatts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgIndex_Update_Indnkeyatts(ctx context.Context, in *Request_Int64_Int64_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indnkeyatts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgIndex_Update_Indoption(ctx context.Context, in *Request_Int64_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indoption", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgIndex_Update_Indpred(ctx context.Context, in *Request_Int64_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indpred", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgIndex_Update_Indrelid(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indrelid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgIndex_Update_VersionID(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_VersionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgIndex_ReadFromCache(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgIndex_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgIndex_ReadObject(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgIndex_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgNamespace_Read(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgNamespace_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgNamespace_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgNamespace_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgNamespace_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgNamespace_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgNamespace_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgNamespace_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgNamespace_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgNamespace_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgNamespace_Update_Nspacl(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgNamespace_Update_Nspacl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgNamespace_Update_Nspname(ctx context.Context, in *Request_Int64_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgNamespace_Update_Nspname", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgNamespace_Update_Nspowner(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgNamespace_Update_Nspowner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgNamespace_Update_Oid(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgNamespace_Update_Oid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgNamespace_Update_VersionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgNamespace_Update_VersionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgNamespace_ReadFromCache(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgNamespace_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigratePgNamespace_ReadObject(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigratePgNamespace_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigrateVersion_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigrateVersion_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigrateVersion_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigrateVersion_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigrateVersion_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigrateVersion_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigrateVersion_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigrateVersion_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigrateVersion_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigrateVersion_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigrateVersion_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigrateVersion_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigrateVersion_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigrateVersion_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigrateVersion_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigrateVersion_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PostgresMigrateVersion_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PostgresMigrateVersion_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) AccountingArea_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/AccountingArea_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) AccountingArea_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/AccountingArea_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) AccountingArea_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/AccountingArea_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) AccountingArea_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/AccountingArea_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) AccountingArea_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/AccountingArea_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) AccountingArea_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/AccountingArea_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) AccountingArea_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/AccountingArea_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) AccountingArea_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/AccountingArea_Update_Code", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) AccountingArea_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/AccountingArea_Update_ConnectionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) AccountingArea_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/AccountingArea_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) AccountingArea_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/AccountingArea_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) AccountingArea_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/AccountingArea_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) AccountingArea_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/AccountingArea_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) AccountingArea_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/AccountingArea_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) AccrualType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/AccrualType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) AccrualType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/AccrualType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) AccrualType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/AccrualType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) AccrualType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/AccrualType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) AccrualType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/AccrualType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) AccrualType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/AccrualType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) AccrualType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/AccrualType_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) AccrualType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/AccrualType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) AccrualType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/AccrualType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) AccrualType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/AccrualType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) AccrualType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/AccrualType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Balance_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Balance_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Balance_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Balance_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Balance_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Balance_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Balance_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Balance_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Balance_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Balance_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Balance_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Balance_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Balance_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Balance_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Balance_Update_BillingMonth(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Balance_Update_BillingMonth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Balance_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Balance_Update_ConnectionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Balance_Update_ContractID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Balance_Update_ContractID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Balance_Update_DebtTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Balance_Update_DebtTypeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Balance_Update_DocumentAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Balance_Update_DocumentAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Balance_Update_DocumentInvoiceID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Balance_Update_DocumentInvoiceID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Balance_Update_DocumentPaymentID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Balance_Update_DocumentPaymentID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Balance_Update_Sum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Balance_Update_Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Balance_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Balance_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Balance_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Balance_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Balance_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Balance_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BankAccountOrganization_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BankAccountOrganization_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BankAccountOrganization_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BankAccountOrganization_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BankAccountOrganization_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BankAccountOrganization_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BankAccountOrganization_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BankAccountOrganization_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BankAccountOrganization_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BankAccountOrganization_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BankAccountOrganization_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BankAccountOrganization_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BankAccountOrganization_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BankAccountOrganization_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BankAccountOrganization_Update_AccountNumber(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BankAccountOrganization_Update_AccountNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BankAccountOrganization_Update_BankID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BankAccountOrganization_Update_BankID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BankAccountOrganization_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BankAccountOrganization_Update_ConnectionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BankAccountOrganization_Update_OrganizationID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BankAccountOrganization_Update_OrganizationID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BankAccountOrganization_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BankAccountOrganization_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BankAccountOrganization_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BankAccountOrganization_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BankAccountOrganization_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BankAccountOrganization_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Bank_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Bank_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Bank_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Bank_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Bank_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Bank_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Bank_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Bank_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Bank_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Bank_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Bank_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Bank_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Bank_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Bank_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Bank_Update_BIK(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Bank_Update_BIK", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Bank_Update_City(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Bank_Update_City", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Bank_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Bank_Update_ConnectionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Bank_Update_CorrespondentAccount(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Bank_Update_CorrespondentAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Bank_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Bank_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Bank_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Bank_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Bank_Update_OrganizationID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Bank_Update_OrganizationID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Bank_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Bank_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Bank_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Bank_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Bank_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Bank_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BeforeTimeType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BeforeTimeType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BeforeTimeType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BeforeTimeType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BeforeTimeType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BeforeTimeType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BeforeTimeType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BeforeTimeType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BeforeTimeType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BeforeTimeType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BeforeTimeType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BeforeTimeType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BeforeTimeType_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BeforeTimeType_Update_Code", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BeforeTimeType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BeforeTimeType_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BeforeTimeType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BeforeTimeType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BeforeTimeType_Update_Value(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BeforeTimeType_Update_Value", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BeforeTimeType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BeforeTimeType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BeforeTimeType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BeforeTimeType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BeforeTimeType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BeforeTimeType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BillKindType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BillKindType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BillKindType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BillKindType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BillKindType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BillKindType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BillKindType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BillKindType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BillKindType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BillKindType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BillKindType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BillKindType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BillKindType_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BillKindType_Update_Code", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BillKindType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BillKindType_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BillKindType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BillKindType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BillKindType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BillKindType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BillKindType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BillKindType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BillKindType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BillKindType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Branch_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Branch_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Branch_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Branch_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Branch_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Branch_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Branch_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Branch_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Branch_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Branch_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Branch_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Branch_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Branch_Update_Code(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Branch_Update_Code", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Branch_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Branch_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Branch_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Branch_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Branch_Update_OrganizationID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Branch_Update_OrganizationID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Branch_Update_PersonalAreaLink(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Branch_Update_PersonalAreaLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Branch_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Branch_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Branch_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Branch_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Branch_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Branch_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Briefcase_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Briefcase_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Briefcase_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Briefcase_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Briefcase_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Briefcase_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Briefcase_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Briefcase_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Briefcase_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Briefcase_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Briefcase_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Briefcase_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Briefcase_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Briefcase_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Briefcase_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Briefcase_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Briefcase_Update_LawerID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Briefcase_Update_LawerID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Briefcase_Update_BranchID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Briefcase_Update_BranchID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Briefcase_Update_Number(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Briefcase_Update_Number", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Briefcase_Update_StatusID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Briefcase_Update_StatusID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Briefcase_SetLawer_ChangeItems(ctx context.Context, in *Request_Model_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Briefcase_SetLawer_ChangeItems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Briefcase_FindEmployeeBy_LawerID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Briefcase_FindEmployeeBy_LawerID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Briefcase_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Briefcase_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseComment_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseComment_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseComment_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseComment_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseComment_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseComment_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseComment_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseComment_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseComment_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseComment_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseComment_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseComment_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseComment_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseComment_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseComment_Update_BriefcaseID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseComment_Update_BriefcaseID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseComment_Update_CommentTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseComment_Update_CommentTypeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseComment_Update_EmployeeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseComment_Update_EmployeeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseComment_Update_Message(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseComment_Update_Message", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseComment_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseComment_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseComment_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseComment_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseComment_FindMassBy_BriefcaseID_CommentTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseMass, error) {
	out := new(ResponseMass)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseComment_FindMassBy_BriefcaseID_CommentTypeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesFile_Read(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesFile_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesFile_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesFile_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesFile_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesFile_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesFile_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesFile_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesFile_Delete(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesFile_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesFile_Restore(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesFile_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesFile_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesFile_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesFile_Update_BriefcaseID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesFile_Update_BriefcaseID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesFile_Update_FileID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesFile_Update_FileID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesFile_ReadFromCache(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesFile_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesFile_ReadObject(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesFile_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesFile_FindMassBy_BriefcaseID(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*ResponseMass, error) {
	out := new(ResponseMass)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesFile_FindMassBy_BriefcaseID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesFile_FindMassObjectBy_BriefcaseID(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*ResponseMass, error) {
	out := new(ResponseMass)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesFile_FindMassObjectBy_BriefcaseID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesHashtag_Read(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesHashtag_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesHashtag_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesHashtag_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesHashtag_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesHashtag_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesHashtag_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesHashtag_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesHashtag_Delete(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesHashtag_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesHashtag_Restore(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesHashtag_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesHashtag_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesHashtag_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesHashtag_Update_BriefcaseID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesHashtag_Update_BriefcaseID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesHashtag_Update_HashtagID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesHashtag_Update_HashtagID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesHashtag_ReadFromCache(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesHashtag_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesHashtag_FindMassBy_BriefcaseID(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*ResponseMass, error) {
	out := new(ResponseMass)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesHashtag_FindMassBy_BriefcaseID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesHashtag_ReadObject(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesHashtag_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesLawsuit_Read(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesLawsuit_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesLawsuit_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesLawsuit_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesLawsuit_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesLawsuit_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesLawsuit_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesLawsuit_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesLawsuit_Delete(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesLawsuit_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesLawsuit_Restore(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesLawsuit_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesLawsuit_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesLawsuit_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesLawsuit_Update_BriefcaseID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesLawsuit_Update_BriefcaseID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesLawsuit_Update_LawsuitID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesLawsuit_Update_LawsuitID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesLawsuit_ReadFromCache(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesLawsuit_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcasesLawsuit_ReadObject(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcasesLawsuit_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseStatusState_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseStatusState_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseStatusState_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseStatusState_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseStatusState_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseStatusState_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseStatusState_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseStatusState_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseStatusState_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseStatusState_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseStatusState_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseStatusState_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseStatusState_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseStatusState_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseStatusState_Update_BriefcaseDebtSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseStatusState_Update_BriefcaseDebtSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseStatusState_Update_BriefcaseID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseStatusState_Update_BriefcaseID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseStatusState_Update_BriefcaseInvoiceSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseStatusState_Update_BriefcaseInvoiceSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseStatusState_Update_BriefcasePaySum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseStatusState_Update_BriefcasePaySum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseStatusState_Update_ContractBillsTotalSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseStatusState_Update_ContractBillsTotalSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseStatusState_Update_ContractDebtSumAllTypes(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseStatusState_Update_ContractDebtSumAllTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseStatusState_Update_ContractMainSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseStatusState_Update_ContractMainSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseStatusState_Update_ContractPennySum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseStatusState_Update_ContractPennySum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseStatusState_Update_ContractRestrictSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseStatusState_Update_ContractRestrictSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseStatusState_Update_ContractStateDutySum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseStatusState_Update_ContractStateDutySum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseStatusState_Update_StatusAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseStatusState_Update_StatusAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseStatusState_Update_StatusID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseStatusState_Update_StatusID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseStatusState_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseStatusState_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) BriefcaseStatusState_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/BriefcaseStatusState_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Calendar_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Calendar_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Calendar_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Calendar_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Calendar_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Calendar_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Calendar_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Calendar_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Calendar_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Calendar_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Calendar_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Calendar_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Calendar_Update_Comment(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Calendar_Update_Comment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Calendar_Update_Date(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Calendar_Update_Date", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Calendar_Update_DayTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Calendar_Update_DayTypeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Calendar_Update_Days(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Calendar_Update_Days", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Calendar_Update_Hours(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Calendar_Update_Hours", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Calendar_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Calendar_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Calendar_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Calendar_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Calendar_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Calendar_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ChangeItem_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ChangeItem_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ChangeItem_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ChangeItem_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ChangeItem_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ChangeItem_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ChangeItem_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ChangeItem_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ChangeItem_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ChangeItem_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ChangeItem_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ChangeItem_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ChangeItem_Update_Key(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ChangeItem_Update_Key", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ChangeItem_Update_Prev(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ChangeItem_Update_Prev", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ChangeItem_Update_Value(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ChangeItem_Update_Value", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ChangeItem_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ChangeItem_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ChangeItem_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ChangeItem_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ChangeItem_Update_TableNameID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ChangeItem_Update_TableNameID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ChangeItem_Update_TableRowID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ChangeItem_Update_TableRowID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ChangeItem_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ChangeItem_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ChannelType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ChannelType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ChannelType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ChannelType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ChannelType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ChannelType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ChannelType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ChannelType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ChannelType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ChannelType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ChannelType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ChannelType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ChannelType_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ChannelType_Update_Code", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ChannelType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ChannelType_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ChannelType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ChannelType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ChannelType_Update_NotifierID(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ChannelType_Update_NotifierID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ChannelType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ChannelType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ChannelType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ChannelType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ChannelType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ChannelType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ClaimType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ClaimType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ClaimType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ClaimType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ClaimType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ClaimType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ClaimType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ClaimType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ClaimType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ClaimType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ClaimType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ClaimType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ClaimType_Update_Code(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ClaimType_Update_Code", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ClaimType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ClaimType_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ClaimType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ClaimType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ClaimType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ClaimType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ClaimType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ClaimType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ClaimType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ClaimType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ColorType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ColorType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ColorType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ColorType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ColorType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ColorType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ColorType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ColorType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ColorType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ColorType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ColorType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ColorType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ColorType_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ColorType_Update_Code", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ColorType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ColorType_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ColorType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ColorType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ColorType_Update_Value(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ColorType_Update_Value", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ColorType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ColorType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ColorType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ColorType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ColorType_Update_Blue(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ColorType_Update_Blue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ColorType_Update_Green(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ColorType_Update_Green", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ColorType_Update_Red(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ColorType_Update_Red", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ColorType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ColorType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CommentType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CommentType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CommentType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CommentType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CommentType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CommentType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CommentType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CommentType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CommentType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CommentType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CommentType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CommentType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CommentType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CommentType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CommentType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CommentType_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CommentType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CommentType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CommentType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CommentType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CommentType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CommentType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CompletedMonth_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CompletedMonth_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CompletedMonth_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CompletedMonth_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CompletedMonth_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CompletedMonth_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CompletedMonth_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CompletedMonth_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CompletedMonth_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CompletedMonth_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CompletedMonth_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CompletedMonth_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CompletedMonth_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CompletedMonth_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CompletedMonth_Update_AccountingAreaID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CompletedMonth_Update_AccountingAreaID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CompletedMonth_Update_BillingMonth(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CompletedMonth_Update_BillingMonth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CompletedMonth_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CompletedMonth_Update_ConnectionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CompletedMonth_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CompletedMonth_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CompletedMonth_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CompletedMonth_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CompletedMonth_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CompletedMonth_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Connection_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Connection_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Connection_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Connection_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Connection_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Connection_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Connection_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Connection_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Connection_Update_BranchID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Connection_Update_BranchID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Connection_Update_DbName(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Connection_Update_DbName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Connection_Update_DbScheme(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Connection_Update_DbScheme", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Connection_Update_IsLegal(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Connection_Update_IsLegal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Connection_Update_Login(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Connection_Update_Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Connection_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Connection_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Connection_Update_Password(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Connection_Update_Password", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Connection_Update_Port(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Connection_Update_Port", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Connection_Update_Server(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Connection_Update_Server", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Connection_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Connection_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Connection_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Connection_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Connection_FindBy_BranchID_IsLegal(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Connection_FindBy_BranchID_IsLegal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Connection_FindMassBy_BranchID(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*ResponseMass, error) {
	out := new(ResponseMass)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Connection_FindMassBy_BranchID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Connection_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Connection_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractBlackItem_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractBlackItem_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractBlackItem_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractBlackItem_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractBlackItem_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractBlackItem_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractBlackItem_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractBlackItem_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractBlackItem_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractBlackItem_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractBlackItem_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractBlackItem_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractBlackItem_Update_ContractID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractBlackItem_Update_ContractID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractBlackItem_Update_ContractNumber(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractBlackItem_Update_ContractNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractBlackItem_Update_CreatedByID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractBlackItem_Update_CreatedByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractBlackItem_Update_DateFrom(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractBlackItem_Update_DateFrom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractBlackItem_Update_DateTo(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractBlackItem_Update_DateTo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractBlackItem_Update_EDMSLink(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractBlackItem_Update_EDMSLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractBlackItem_Update_ModifiedByID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractBlackItem_Update_ModifiedByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractBlackItem_Update_Note(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractBlackItem_Update_Note", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractBlackItem_Update_Reason(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractBlackItem_Update_Reason", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractBlackItem_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractBlackItem_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractBlackItem_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractBlackItem_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractBlackItem_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractBlackItem_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractCategoryType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractCategoryType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractCategoryType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractCategoryType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractCategoryType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractCategoryType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractCategoryType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractCategoryType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractCategoryType_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractCategoryType_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractCategoryType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractCategoryType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractCategoryType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractCategoryType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractCategoryType_Update_Code(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractCategoryType_Update_Code", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractCategoryType_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractCategoryType_Update_ConnectionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractCategoryType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractCategoryType_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractCategoryType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractCategoryType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractCategoryType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractCategoryType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractCategoryType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractCategoryType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractCategoryType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractCategoryType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractType_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractWhiteItem_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractWhiteItem_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractWhiteItem_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractWhiteItem_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractWhiteItem_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractWhiteItem_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractWhiteItem_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractWhiteItem_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractWhiteItem_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractWhiteItem_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractWhiteItem_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractWhiteItem_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractWhiteItem_Update_ContractID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractWhiteItem_Update_ContractID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractWhiteItem_Update_ContractNumber(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractWhiteItem_Update_ContractNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractWhiteItem_Update_CreatedByID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractWhiteItem_Update_CreatedByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractWhiteItem_Update_DateFrom(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractWhiteItem_Update_DateFrom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractWhiteItem_Update_DateTo(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractWhiteItem_Update_DateTo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractWhiteItem_Update_EDMSLink(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractWhiteItem_Update_EDMSLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractWhiteItem_Update_ModifiedByID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractWhiteItem_Update_ModifiedByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractWhiteItem_Update_Note(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractWhiteItem_Update_Note", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractWhiteItem_Update_Reason(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractWhiteItem_Update_Reason", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractWhiteItem_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractWhiteItem_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractWhiteItem_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractWhiteItem_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractWhiteItem_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractWhiteItem_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_FindBy_Number(ctx context.Context, in *RequestString, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_FindBy_Number", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update_BeginAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update_BeginAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update_BranchID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update_BranchID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update_CategoryID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update_CategoryID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update_ConnectionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update_CuratorClaimID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update_CuratorClaimID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update_CuratorContractID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update_CuratorContractID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update_CuratorLegalID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update_CuratorLegalID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update_CuratorPaymentID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update_CuratorPaymentID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update_CuratorTechAuditID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update_CuratorTechAuditID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update_DaysToResolveClaim(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update_DaysToResolveClaim", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update_Email(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update_Email", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update_EndAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update_EndAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update_ErrorFromStackAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update_ErrorFromStackAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update_IndividualID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update_IndividualID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update_IsErrorFromStack(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update_IsErrorFromStack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update_IsIndOrganization(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update_IsIndOrganization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update_IsOrganization(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update_IsOrganization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update_IsValidEmail(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update_IsValidEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update_Number(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update_Number", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update_OrganizationConsigneeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update_OrganizationConsigneeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update_OrganizationCustomerID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update_OrganizationCustomerID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update_OrganizationPayerID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update_OrganizationPayerID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update_PostAddress(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update_PostAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update_SignAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update_SignAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update_Status(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update_Status", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update_TerminateAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update_TerminateAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update_IsBelongsRosatom(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update_IsBelongsRosatom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update_DepartmentID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update_DepartmentID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update_Note(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update_Note", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update_SectorID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update_SectorID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_Update_TypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_Update_TypeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Contract_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Contract_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractsTotalSum_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractsTotalSum_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractsTotalSum_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractsTotalSum_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractsTotalSum_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractsTotalSum_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractsTotalSum_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractsTotalSum_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractsTotalSum_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractsTotalSum_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractsTotalSum_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractsTotalSum_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractsTotalSum_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractsTotalSum_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractsTotalSum_Update_ContractID(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractsTotalSum_Update_ContractID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractsTotalSum_Update_MainSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractsTotalSum_Update_MainSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractsTotalSum_Update_PennySum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractsTotalSum_Update_PennySum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractsTotalSum_Update_RestrictSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractsTotalSum_Update_RestrictSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractsTotalSum_Update_StateDutySum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractsTotalSum_Update_StateDutySum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractsTotalSum_Update_TotalSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractsTotalSum_Update_TotalSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractsTotalSum_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractsTotalSum_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractsTotalSum_Update_BillsSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractsTotalSum_Update_BillsSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractsTotalSum_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractsTotalSum_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractIndividual_Read(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractIndividual_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractIndividual_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractIndividual_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractIndividual_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractIndividual_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractIndividual_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractIndividual_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractIndividual_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractIndividual_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractIndividual_Update_ContractID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractIndividual_Update_ContractID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractIndividual_Update_IndividualID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractIndividual_Update_IndividualID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractIndividual_ReadFromCache(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractIndividual_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractIndividual_ReadObject(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractIndividual_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractOrganization_Read(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractOrganization_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractOrganization_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractOrganization_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractOrganization_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractOrganization_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractOrganization_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractOrganization_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractOrganization_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractOrganization_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractOrganization_Update_ContractID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractOrganization_Update_ContractID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractOrganization_Update_OrganizationID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractOrganization_Update_OrganizationID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractOrganization_ReadFromCache(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractOrganization_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ContractOrganization_ReadObject(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ContractOrganization_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuit_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuit_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuit_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuit_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuit_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuit_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuit_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuit_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuit_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuit_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuit_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuit_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuit_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuit_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuit_Update_BriefcaseID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuit_Update_BriefcaseID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuit_Update_CourtID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuit_Update_CourtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuit_Update_LawerID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuit_Update_LawerID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuit_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuit_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuit_Update_LitigationTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuit_Update_LitigationTypeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuit_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuit_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuitsFile_Read(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuitsFile_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuitsFile_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuitsFile_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuitsFile_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuitsFile_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuitsFile_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuitsFile_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuitsFile_Delete(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuitsFile_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuitsFile_Restore(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuitsFile_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuitsFile_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuitsFile_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuitsFile_Update_CourtSuitID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuitsFile_Update_CourtSuitID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuitsFile_Update_FileID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuitsFile_Update_FileID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuitsFile_ReadFromCache(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuitsFile_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuitsFile_ReadObject(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuitsFile_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuitsFile_FindMassBy_CourtSuitID(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*ResponseMass, error) {
	out := new(ResponseMass)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuitsFile_FindMassBy_CourtSuitID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuitsFile_FindMassObjectBy_CourtSuitID(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*ResponseMass, error) {
	out := new(ResponseMass)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuitsFile_FindMassObjectBy_CourtSuitID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Court_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Court_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Court_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Court_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Court_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Court_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Court_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Court_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Court_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Court_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Court_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Court_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Court_Update_City(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Court_Update_City", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Court_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Court_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Court_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Court_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Court_Update_OrganizationID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Court_Update_OrganizationID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Court_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Court_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Court_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Court_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Court_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Court_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuitComment_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuitComment_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuitComment_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuitComment_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuitComment_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuitComment_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuitComment_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuitComment_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuitComment_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuitComment_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuitComment_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuitComment_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuitComment_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuitComment_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuitComment_Update_CommentTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuitComment_Update_CommentTypeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuitComment_Update_CourtSuitID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuitComment_Update_CourtSuitID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuitComment_Update_EmployeeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuitComment_Update_EmployeeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuitComment_Update_Message(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuitComment_Update_Message", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuitComment_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuitComment_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuitComment_FindMassBy_CourtSuitID_CommentTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseMass, error) {
	out := new(ResponseMass)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuitComment_FindMassBy_CourtSuitID_CommentTypeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) CourtSuitComment_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/CourtSuitComment_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DayType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DayType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DayType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DayType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DayType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DayType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DayType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DayType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DayType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DayType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DayType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DayType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DayType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DayType_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DayType_Update_IsWorkDay(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DayType_Update_IsWorkDay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DayType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DayType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DayType_Update_ShortName(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DayType_Update_ShortName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DayType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DayType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DayType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DayType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DayType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DayType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DebtType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DebtType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DebtType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DebtType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DebtType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DebtType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DebtType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DebtType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DebtType_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DebtType_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DebtType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DebtType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DebtType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DebtType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DebtType_Update_CodeNSI(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DebtType_Update_CodeNSI", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DebtType_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DebtType_Update_ConnectionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DebtType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DebtType_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DebtType_Update_ExtCode(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DebtType_Update_ExtCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DebtType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DebtType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DebtType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DebtType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DebtType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DebtType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DebtType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DebtType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DirectionType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DirectionType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DirectionType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DirectionType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DirectionType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DirectionType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DirectionType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DirectionType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DirectionType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DirectionType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DirectionType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DirectionType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DirectionType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DirectionType_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DirectionType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DirectionType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DirectionType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DirectionType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DirectionType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DirectionType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DirectionType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DirectionType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLinkType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLinkType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLinkType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLinkType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLinkType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLinkType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLinkType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLinkType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLinkType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLinkType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLinkType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLinkType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLinkType_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLinkType_Update_Code", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLinkType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLinkType_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLinkType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLinkType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLinkType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLinkType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLinkType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLinkType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLinkType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLinkType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLink_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLink_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLink_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLink_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLink_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLink_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLink_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLink_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLink_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLink_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLink_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLink_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLink_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLink_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLink_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLink_Update_ConnectionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLink_Update_ContractID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLink_Update_ContractID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLink_Update_CorrectionSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLink_Update_CorrectionSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLink_Update_Document1ID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLink_Update_Document1ID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLink_Update_Document2ID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLink_Update_Document2ID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLink_Update_LinkTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLink_Update_LinkTypeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLink_Update_DateFrom(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLink_Update_DateFrom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLink_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLink_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLink_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLink_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLink_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLink_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLinksRapira_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLinksRapira_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLinksRapira_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLinksRapira_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLinksRapira_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLinksRapira_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLinksRapira_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLinksRapira_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLinksRapira_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLinksRapira_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLinksRapira_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLinksRapira_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLinksRapira_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLinksRapira_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLinksRapira_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLinksRapira_Update_ConnectionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLinksRapira_Update_ContractID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLinksRapira_Update_ContractID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLinksRapira_Update_CorrectionSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLinksRapira_Update_CorrectionSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLinksRapira_Update_DateFrom(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLinksRapira_Update_DateFrom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLinksRapira_Update_Document1ID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLinksRapira_Update_Document1ID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLinksRapira_Update_Document2ID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLinksRapira_Update_Document2ID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLinksRapira_Update_LinkTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLinksRapira_Update_LinkTypeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLinksRapira_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLinksRapira_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLinksRapira_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLinksRapira_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLinksRapira_Update_ModifiedAtStack(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLinksRapira_Update_ModifiedAtStack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLinksRapira_Update_CreatedAtStack(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLinksRapira_Update_CreatedAtStack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentLinksRapira_FindByExtID(ctx context.Context, in *RequestExtIDString, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentLinksRapira_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentRequired_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentRequired_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentRequired_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentRequired_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentRequired_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentRequired_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentRequired_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentRequired_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentRequired_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentRequired_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentRequired_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentRequired_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentRequired_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentRequired_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentRequired_Update_Code(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentRequired_Update_Code", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentRequired_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentRequired_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentRequired_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentRequired_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentRequired_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentRequired_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentReturnReason_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentReturnReason_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentReturnReason_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentReturnReason_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentReturnReason_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentReturnReason_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentReturnReason_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentReturnReason_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentReturnReason_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentReturnReason_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentReturnReason_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentReturnReason_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentReturnReason_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentReturnReason_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentReturnReason_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentReturnReason_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentReturnReason_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentReturnReason_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentReturnReason_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentReturnReason_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentReturnReason_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentReturnReason_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentStatus_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentStatus_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentStatus_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentStatus_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentStatus_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentStatus_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentStatus_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentStatus_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentStatus_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentStatus_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentStatus_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentStatus_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentStatus_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentStatus_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentStatus_Update_Code(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentStatus_Update_Code", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentStatus_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentStatus_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentStatus_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentStatus_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentStatus_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentStatus_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentType_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentType_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentType_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentType_Update_ConnectionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentType_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentType_Update_IncomeExpense(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentType_Update_IncomeExpense", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentType_Update_IsService(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentType_Update_IsService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentType_Update_IsVisible(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentType_Update_IsVisible", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentType_Update_ShortName(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentType_Update_ShortName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentType_Update_Type(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentType_Update_Type", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) DocumentType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/DocumentType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Document_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Document_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Document_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Document_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Document_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Document_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Document_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Document_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Document_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Document_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Document_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Document_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Document_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Document_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Document_Update_Analytics(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Document_Update_Analytics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Document_Update_Balance(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Document_Update_Balance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Document_Update_BillKindID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Document_Update_BillKindID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Document_Update_BillingMonth(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Document_Update_BillingMonth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Document_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Document_Update_ConnectionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Document_Update_ContractID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Document_Update_ContractID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Document_Update_Count(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Document_Update_Count", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Document_Update_DebtSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Document_Update_DebtSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Document_Update_DocumentAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Document_Update_DocumentAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Document_Update_DocumentSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Document_Update_DocumentSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Document_Update_DocumentTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Document_Update_DocumentTypeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Document_Update_Note(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Document_Update_Note", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Document_Update_Number(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Document_Update_Number", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Document_Update_NumberFull(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Document_Update_NumberFull", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Document_Update_PayDeadline(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Document_Update_PayDeadline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Document_Update_PayFrom(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Document_Update_PayFrom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Document_Update_PayTo(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Document_Update_PayTo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Document_Update_Payment(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Document_Update_Payment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Document_Update_Reason(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Document_Update_Reason", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Document_Update_ReversalID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Document_Update_ReversalID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Document_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Document_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Document_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Document_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Document_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Document_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Employee_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Employee_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Employee_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Employee_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Employee_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Employee_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Employee_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Employee_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Employee_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Employee_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Employee_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Employee_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Employee_FindByExtId(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Employee_FindByExtId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Employee_FindByLogin(ctx context.Context, in *RequestString, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Employee_FindByLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Employee_FindByEMail(ctx context.Context, in *RequestString, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Employee_FindByEMail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Employee_FindByFIO(ctx context.Context, in *RequestString3, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Employee_FindByFIO", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Employee_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Employee_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Employee_Update_BranchID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Employee_Update_BranchID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Employee_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Employee_Update_ConnectionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Employee_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Employee_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Employee_Update_Email(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Employee_Update_Email", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Employee_Update_IsActive(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Employee_Update_IsActive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Employee_Update_Login(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Employee_Update_Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Employee_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Employee_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Employee_Update_ParentName(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Employee_Update_ParentName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Employee_Update_Phone(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Employee_Update_Phone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Employee_Update_Photo(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Employee_Update_Photo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Employee_Update_Position(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Employee_Update_Position", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Employee_Update_SecondName(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Employee_Update_SecondName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Employee_Update_Tag(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Employee_Update_Tag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Employee_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Employee_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Employee_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Employee_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Employee_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Employee_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) EmployeesHashtag_Read(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/EmployeesHashtag_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) EmployeesHashtag_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/EmployeesHashtag_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) EmployeesHashtag_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/EmployeesHashtag_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) EmployeesHashtag_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/EmployeesHashtag_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) EmployeesHashtag_Delete(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/EmployeesHashtag_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) EmployeesHashtag_Restore(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/EmployeesHashtag_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) EmployeesHashtag_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/EmployeesHashtag_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) EmployeesHashtag_Update_EmployeeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/EmployeesHashtag_Update_EmployeeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) EmployeesHashtag_Update_HashtagID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/EmployeesHashtag_Update_HashtagID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) EmployeesHashtag_ReadFromCache(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/EmployeesHashtag_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) EmployeesHashtag_FindMassBy_EmployeeID(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*ResponseMass, error) {
	out := new(ResponseMass)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/EmployeesHashtag_FindMassBy_EmployeeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) EmployeesHashtag_ReadObject(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/EmployeesHashtag_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) EventType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/EventType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) EventType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/EventType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) EventType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/EventType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) EventType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/EventType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) EventType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/EventType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) EventType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/EventType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) EventType_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/EventType_Update_Code", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) EventType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/EventType_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) EventType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/EventType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) EventType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/EventType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) EventType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/EventType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) EventType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/EventType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Event_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Event_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Event_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Event_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Event_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Event_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Event_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Event_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Event_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Event_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Event_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Event_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Event_Update_ColorTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Event_Update_ColorTypeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Event_Update_CreatedByID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Event_Update_CreatedByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Event_Update_DeletedByID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Event_Update_DeletedByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Event_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Event_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Event_Update_EventTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Event_Update_EventTypeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Event_Update_FinishAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Event_Update_FinishAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Event_Update_IsAllDay(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Event_Update_IsAllDay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Event_Update_ModifiedByID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Event_Update_ModifiedByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Event_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Event_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Event_Update_NotificationID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Event_Update_NotificationID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Event_Update_PerformerID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Event_Update_PerformerID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Event_Update_PriorityTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Event_Update_PriorityTypeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Event_Update_RepeatTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Event_Update_RepeatTypeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Event_Update_StartAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Event_Update_StartAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Event_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Event_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Event_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Event_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Event_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Event_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Facsimile_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Facsimile_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Facsimile_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Facsimile_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Facsimile_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Facsimile_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Facsimile_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Facsimile_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Facsimile_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Facsimile_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Facsimile_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Facsimile_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Facsimile_Update_Branch(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Facsimile_Update_Branch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Facsimile_Update_Contract(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Facsimile_Update_Contract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Facsimile_Update_Department(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Facsimile_Update_Department", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Facsimile_Update_Post(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Facsimile_Update_Post", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Facsimile_Update_Responsible(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Facsimile_Update_Responsible", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Facsimile_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Facsimile_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Facsimile_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Facsimile_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Facsimile_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Facsimile_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) File_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/File_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) File_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/File_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) File_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/File_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) File_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/File_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) File_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/File_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) File_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/File_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) File_FindByFileID(ctx context.Context, in *RequestString, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/File_FindByFileID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) File_FindByFullName(ctx context.Context, in *RequestString, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/File_FindByFullName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) File_FindMassBy_TableNameID_TableRowID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseMass, error) {
	out := new(ResponseMass)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/File_FindMassBy_TableNameID_TableRowID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) File_FindMassBy_TableNameID_TableRowID_FileTypeID(ctx context.Context, in *Request_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseMass, error) {
	out := new(ResponseMass)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/File_FindMassBy_TableNameID_TableRowID_FileTypeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) File_Update_BranchID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/File_Update_BranchID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) File_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/File_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) File_Update_EmployeeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/File_Update_EmployeeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) File_Update_Extension(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/File_Update_Extension", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) File_Update_FileID(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/File_Update_FileID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) File_Update_FileName(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/File_Update_FileName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) File_Update_FileTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/File_Update_FileTypeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) File_Update_FullName(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/File_Update_FullName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) File_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/File_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) File_Update_Size(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/File_Update_Size", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) File_Update_TemplateID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/File_Update_TemplateID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) File_Update_Version(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/File_Update_Version", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) File_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/File_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) File_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/File_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) File_Save_SaveLink_SaveChangeItems(ctx context.Context, in *Request_Model_Int64_Int64, opts ...grpc.CallOption) (*ResponseInt64, error) {
	out := new(ResponseInt64)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/File_Save_SaveLink_SaveChangeItems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) File_SaveLinkDeleted_SaveChangeItems(ctx context.Context, in *Request_Model_Int64_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/File_SaveLinkDeleted_SaveChangeItems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) File_Update_TableNameID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/File_Update_TableNameID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) File_Update_TableRowID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/File_Update_TableRowID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) File_Update_BucketName(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/File_Update_BucketName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) File_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/File_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileChange_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileChange_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileChange_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileChange_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileChange_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileChange_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileChange_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileChange_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileChange_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileChange_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileChange_Update_EmployeeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileChange_Update_EmployeeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileChange_Update_FileID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileChange_Update_FileID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileChange_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileChange_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileChange_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileChange_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileChange_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileChange_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileTemplate_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileTemplate_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileTemplate_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileTemplate_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileTemplate_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileTemplate_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileTemplate_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileTemplate_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileTemplate_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileTemplate_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileTemplate_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileTemplate_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileTemplate_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileTemplate_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileTemplate_Update_FileID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileTemplate_Update_FileID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileTemplate_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileTemplate_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileTemplate_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileTemplate_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileTemplate_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileTemplate_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileTemplate_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileTemplate_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FilesClaim_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FilesClaim_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FilesClaim_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FilesClaim_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FilesClaim_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FilesClaim_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FilesClaim_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FilesClaim_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FilesClaim_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FilesClaim_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FilesClaim_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FilesClaim_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FilesClaim_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FilesClaim_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FilesClaim_Update_CheckOfClaim(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FilesClaim_Update_CheckOfClaim", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FilesClaim_Update_Code(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FilesClaim_Update_Code", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FilesClaim_Update_ConsumerSignature(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FilesClaim_Update_ConsumerSignature", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FilesClaim_Update_DateOfDocument(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FilesClaim_Update_DateOfDocument", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FilesClaim_Update_DateOfDownload(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FilesClaim_Update_DateOfDownload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FilesClaim_Update_FilePath(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FilesClaim_Update_FilePath", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FilesClaim_Update_Invoice(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FilesClaim_Update_Invoice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FilesClaim_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FilesClaim_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FilesClaim_Update_Number(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FilesClaim_Update_Number", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FilesClaim_Update_OriginalDocument(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FilesClaim_Update_OriginalDocument", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FilesClaim_Update_Period(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FilesClaim_Update_Period", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FilesClaim_Update_PersonDownloadID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FilesClaim_Update_PersonDownloadID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FilesClaim_Update_SignOfObligation(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FilesClaim_Update_SignOfObligation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FilesClaim_Update_StatusOfDocument(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FilesClaim_Update_StatusOfDocument", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FilesClaim_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FilesClaim_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileType_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileType_Update_Code", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileType_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileType_Update_CanBeSynced(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileType_Update_CanBeSynced", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileType_Update_MimeType(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileType_Update_MimeType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileType_Update_RequireUpload(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileType_Update_RequireUpload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileType_ReadAll(ctx context.Context, in *Request_Empty, opts ...grpc.CallOption) (*ResponseMass, error) {
	out := new(ResponseMass)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileType_ReadAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileType_Update_TableNameID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileType_Update_TableNameID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileType_FindBy_Code(ctx context.Context, in *Request_Int32, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileType_FindBy_Code", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileType_Update_ExistsBankMark(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileType_Update_ExistsBankMark", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileType_Update_ExistsSignature(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileType_Update_ExistsSignature", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileType_Update_FilenameTemplate(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileType_Update_FilenameTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileType_Update_MultipleLoad(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileType_Update_MultipleLoad", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) FileType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/FileType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) GenderType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/GenderType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) GenderType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/GenderType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) GenderType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/GenderType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) GenderType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/GenderType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) GenderType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/GenderType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) GenderType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/GenderType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) GenderType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/GenderType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) GenderType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/GenderType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) GenderType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/GenderType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) GenderType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/GenderType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Hashtag_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Hashtag_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Hashtag_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Hashtag_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Hashtag_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Hashtag_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Hashtag_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Hashtag_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Hashtag_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Hashtag_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Hashtag_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Hashtag_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Hashtag_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Hashtag_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Hashtag_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Hashtag_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Hashtag_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Hashtag_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Hashtag_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Hashtag_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Hashtag_ReadAll(ctx context.Context, in *Request_Empty, opts ...grpc.CallOption) (*ResponseMass, error) {
	out := new(ResponseMass)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Hashtag_ReadAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Hashtag_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Hashtag_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Individual_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Individual_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Individual_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Individual_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Individual_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Individual_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Individual_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Individual_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Individual_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Individual_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Individual_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Individual_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Individual_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Individual_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Individual_Update_BirthDate(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Individual_Update_BirthDate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Individual_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Individual_Update_ConnectionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Individual_Update_DeathDate(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Individual_Update_DeathDate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Individual_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Individual_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Individual_Update_Email(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Individual_Update_Email", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Individual_Update_GenderID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Individual_Update_GenderID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Individual_Update_INN(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Individual_Update_INN", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Individual_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Individual_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Individual_Update_ParentName(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Individual_Update_ParentName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Individual_Update_Phone(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Individual_Update_Phone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Individual_Update_SecondName(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Individual_Update_SecondName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Individual_Update_Snils(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Individual_Update_Snils", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Individual_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Individual_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Individual_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Individual_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Individual_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Individual_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) InnerNotifyMessage_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/InnerNotifyMessage_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) InnerNotifyMessage_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/InnerNotifyMessage_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) InnerNotifyMessage_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/InnerNotifyMessage_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) InnerNotifyMessage_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/InnerNotifyMessage_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) InnerNotifyMessage_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/InnerNotifyMessage_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) InnerNotifyMessage_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/InnerNotifyMessage_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) InnerNotifyMessage_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/InnerNotifyMessage_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) InnerNotifyMessage_Update_Body(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/InnerNotifyMessage_Update_Body", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) InnerNotifyMessage_Update_ContractID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/InnerNotifyMessage_Update_ContractID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) InnerNotifyMessage_Update_MessageType(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/InnerNotifyMessage_Update_MessageType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) InnerNotifyMessage_Update_RecipientEmail(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/InnerNotifyMessage_Update_RecipientEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) InnerNotifyMessage_Update_SendResult(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/InnerNotifyMessage_Update_SendResult", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) InnerNotifyMessage_Update_SenderEmail(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/InnerNotifyMessage_Update_SenderEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) InnerNotifyMessage_Update_Subject(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/InnerNotifyMessage_Update_Subject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) InnerNotifyMessage_Update_Title(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/InnerNotifyMessage_Update_Title", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) InnerNotifyMessage_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/InnerNotifyMessage_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) InnerNotifyMessage_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/InnerNotifyMessage_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) InvoiceDebtTypeStat_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/InvoiceDebtTypeStat_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) InvoiceDebtTypeStat_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/InvoiceDebtTypeStat_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) InvoiceDebtTypeStat_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/InvoiceDebtTypeStat_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) InvoiceDebtTypeStat_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/InvoiceDebtTypeStat_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) InvoiceDebtTypeStat_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/InvoiceDebtTypeStat_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) InvoiceDebtTypeStat_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/InvoiceDebtTypeStat_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) InvoiceDebtTypeStat_Update_DebtTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/InvoiceDebtTypeStat_Update_DebtTypeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) InvoiceDebtTypeStat_Update_InvoiceID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/InvoiceDebtTypeStat_Update_InvoiceID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) InvoiceDebtTypeStat_Update_StateAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/InvoiceDebtTypeStat_Update_StateAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) InvoiceDebtTypeStat_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/InvoiceDebtTypeStat_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) InvoiceDebtTypeStat_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/InvoiceDebtTypeStat_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) InvoiceDebtTypeStat_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/InvoiceDebtTypeStat_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_FindBy_Number(ctx context.Context, in *RequestString, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_FindBy_Number", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_FindBy_NumberClaim(ctx context.Context, in *RequestString, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_FindBy_NumberClaim", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_BranchID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_BranchID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_Chance(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_Chance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_ClaimAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_ClaimAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_ClaimPeriodStr(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_ClaimPeriodStr", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_ClaimTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_ClaimTypeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_ClosedAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_ClosedAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_ConnectionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_ContractID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_ContractID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_ControlledAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_ControlledAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_CourtID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_CourtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_CuratorClaimID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_CuratorClaimID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_CuratorContractID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_CuratorContractID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_CuratorLegalID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_CuratorLegalID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_CuratorPaymentID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_CuratorPaymentID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_CuratorTechAuditID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_CuratorTechAuditID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_DateFrom(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_DateFrom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_DateTo(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_DateTo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_DebtSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_DebtSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_DebtSumAllTypes(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_DebtSumAllTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_ErrorText(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_ErrorText", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_InvoiceSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_InvoiceSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_IsClosed(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_IsClosed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_MainSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_MainSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_NotifyClaimAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_NotifyClaimAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_NotifyClaimChannel(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_NotifyClaimChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_NotifyClaimCode(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_NotifyClaimCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_NotifyClaimDone(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_NotifyClaimDone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_NotifyClaimMailingCode(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_NotifyClaimMailingCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_NotifyPretrialAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_NotifyPretrialAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_NotifyPretrialChannel(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_NotifyPretrialChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_NotifyPretrialCode(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_NotifyPretrialCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_NotifyPretrialDone(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_NotifyPretrialDone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_NotifyPretrialMailingCode(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_NotifyPretrialMailingCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_Number(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_Number", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_NumberClaim(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_NumberClaim", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_NumberTrial(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_NumberTrial", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_PaySum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_PaySum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_Penalty(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_Penalty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_Penny(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_Penny", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_Percent317(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_Percent317", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_Percent395(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_Percent395", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_PretrialAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_PretrialAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_ProcessKey(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_ProcessKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_ProcessStartedAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_ProcessStartedAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_ReasonID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_ReasonID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_RestrictSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_RestrictSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_StageAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_StageAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_StageID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_StageID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_StateDuty(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_StateDuty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_StatusAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_StatusAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_StatusID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_StatusID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_Tag(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_Tag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_TypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_TypeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_UnknownPayments(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_UnknownPayments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_TrialAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_TrialAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_NotifyPostBarcode(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_NotifyPostBarcode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_Update_NotifyPostReq(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_Update_NotifyPostReq", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Lawsuit_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Lawsuit_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitComment_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitComment_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitComment_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitComment_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitComment_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitComment_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitComment_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitComment_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitComment_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitComment_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitComment_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitComment_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitComment_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitComment_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitComment_Update_CommentTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitComment_Update_CommentTypeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitComment_Update_EmployeeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitComment_Update_EmployeeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitComment_Update_LawsuitID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitComment_Update_LawsuitID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitComment_Update_Message(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitComment_Update_Message", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitComment_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitComment_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitComment_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitComment_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitComment_FindMassBy_LawsuitID_CommentTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseMass, error) {
	out := new(ResponseMass)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitComment_FindMassBy_LawsuitID_CommentTypeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitsFile_Read(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitsFile_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitsFile_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitsFile_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitsFile_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitsFile_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitsFile_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitsFile_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitsFile_Delete(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitsFile_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitsFile_Restore(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitsFile_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitsFile_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitsFile_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitsFile_Update_FileID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitsFile_Update_FileID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitsFile_Update_LawsuitID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitsFile_Update_LawsuitID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitsFile_ReadFromCache(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitsFile_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitsFile_ReadObject(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitsFile_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitsFile_FindMassBy_LawsuitID(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*ResponseMass, error) {
	out := new(ResponseMass)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitsFile_FindMassBy_LawsuitID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitsFile_FindMassObjectBy_LawsuitID(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*ResponseMass, error) {
	out := new(ResponseMass)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitsFile_FindMassObjectBy_LawsuitID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitInvoiceCorrection_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitInvoiceCorrection_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitInvoiceCorrection_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitInvoiceCorrection_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitInvoiceCorrection_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitInvoiceCorrection_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitInvoiceCorrection_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitInvoiceCorrection_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitInvoiceCorrection_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitInvoiceCorrection_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitInvoiceCorrection_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitInvoiceCorrection_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitInvoiceCorrection_Update_CorrectionDocumentID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitInvoiceCorrection_Update_CorrectionDocumentID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitInvoiceCorrection_Update_CorrectionDocumentSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitInvoiceCorrection_Update_CorrectionDocumentSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitInvoiceCorrection_Update_InvoiceDocumentID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitInvoiceCorrection_Update_InvoiceDocumentID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitInvoiceCorrection_Update_LawsuitID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitInvoiceCorrection_Update_LawsuitID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitInvoiceCorrection_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitInvoiceCorrection_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitInvoiceCorrection_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitInvoiceCorrection_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitInvoiceCorrection_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitInvoiceCorrection_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitInvoice_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitInvoice_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitInvoice_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitInvoice_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitInvoice_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitInvoice_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitInvoice_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitInvoice_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitInvoice_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitInvoice_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitInvoice_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitInvoice_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitInvoice_Update_ClosedAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitInvoice_Update_ClosedAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitInvoice_Update_ClosedSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitInvoice_Update_ClosedSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitInvoice_Update_Count(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitInvoice_Update_Count", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitInvoice_Update_DocumentID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitInvoice_Update_DocumentID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitInvoice_Update_DocumentSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitInvoice_Update_DocumentSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitInvoice_Update_IsClosed(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitInvoice_Update_IsClosed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitInvoice_Update_IsCorrective(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitInvoice_Update_IsCorrective", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitInvoice_Update_LawsuitID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitInvoice_Update_LawsuitID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitInvoice_Update_Sum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitInvoice_Update_Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitInvoice_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitInvoice_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitInvoice_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitInvoice_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitInvoice_Update_BriefcaseID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitInvoice_Update_BriefcaseID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitInvoice_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitInvoice_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitPaymentCorrection_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitPaymentCorrection_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitPaymentCorrection_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitPaymentCorrection_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitPaymentCorrection_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitPaymentCorrection_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitPaymentCorrection_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitPaymentCorrection_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitPaymentCorrection_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitPaymentCorrection_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitPaymentCorrection_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitPaymentCorrection_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitPaymentCorrection_Update_CorrectionDocumentID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitPaymentCorrection_Update_CorrectionDocumentID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitPaymentCorrection_Update_CorrectionDocumentSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitPaymentCorrection_Update_CorrectionDocumentSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitPaymentCorrection_Update_LawsuitID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitPaymentCorrection_Update_LawsuitID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitPaymentCorrection_Update_PaymentDocumentID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitPaymentCorrection_Update_PaymentDocumentID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitPaymentCorrection_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitPaymentCorrection_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitPaymentCorrection_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitPaymentCorrection_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitPaymentCorrection_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitPaymentCorrection_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitPayment_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitPayment_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitPayment_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitPayment_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitPayment_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitPayment_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitPayment_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitPayment_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitPayment_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitPayment_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitPayment_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitPayment_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitPayment_Update_DocumentID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitPayment_Update_DocumentID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitPayment_Update_DocumentSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitPayment_Update_DocumentSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitPayment_Update_InvoiceID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitPayment_Update_InvoiceID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitPayment_Update_IsCorrective(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitPayment_Update_IsCorrective", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitPayment_Update_LawsuitID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitPayment_Update_LawsuitID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitPayment_Update_Sum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitPayment_Update_Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitPayment_Update_LinkedAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitPayment_Update_LinkedAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitPayment_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitPayment_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitPayment_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitPayment_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitPayment_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitPayment_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitReasonType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitReasonType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitReasonType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitReasonType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitReasonType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitReasonType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitReasonType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitReasonType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitReasonType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitReasonType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitReasonType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitReasonType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitReasonType_Update_Code(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitReasonType_Update_Code", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitReasonType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitReasonType_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitReasonType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitReasonType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitReasonType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitReasonType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitReasonType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitReasonType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitReasonType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitReasonType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStageType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStageType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStageType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStageType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStageType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStageType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStageType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStageType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStageType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStageType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStageType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStageType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStageType_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStageType_Update_Code", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStageType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStageType_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStageType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStageType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStageType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStageType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStageType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStageType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStageType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStageType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusState_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusState_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusState_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusState_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusState_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusState_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusState_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusState_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusState_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusState_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusState_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusState_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusState_FillFromLawsuit(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusState_FillFromLawsuit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusState_FindDebtSum(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseFloat64, error) {
	out := new(ResponseFloat64)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusState_FindDebtSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusState_FindPreviousStatus(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseInt64, error) {
	out := new(ResponseInt64)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusState_FindPreviousStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusState_Update_CommentID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusState_Update_CommentID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusState_Update_InvoiceSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusState_Update_InvoiceSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusState_Update_LawsuitID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusState_Update_LawsuitID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusState_Update_MainSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusState_Update_MainSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusState_Update_PaySum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusState_Update_PaySum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusState_Update_PenaltySum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusState_Update_PenaltySum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusState_Update_PennySum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusState_Update_PennySum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusState_Update_RestrictSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusState_Update_RestrictSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusState_Update_StateDutySum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusState_Update_StateDutySum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusState_Update_StatusAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusState_Update_StatusAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusState_Update_StatusID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusState_Update_StatusID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusState_Update_Tag(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusState_Update_Tag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusState_Update_TotalDebt(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusState_Update_TotalDebt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusState_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusState_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusState_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusState_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusState_Update_ContractDebtSumAllTypes(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusState_Update_ContractDebtSumAllTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusState_Update_BillsTotalSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusState_Update_BillsTotalSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusState_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusState_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusType_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusType_Update_Code", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusType_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusType_Update_IsClosed(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusType_Update_IsClosed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusType_Update_ColorID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusType_Update_ColorID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusType_Update_IsError(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusType_Update_IsError", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusType_Update_IsTech(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusType_Update_IsTech", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusType_Update_ViewSort(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusType_Update_ViewSort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitStatusType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitStatusType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitType_Update_Code(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitType_Update_Code", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitType_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LawsuitType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LawsuitType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LegalType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LegalType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LegalType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LegalType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LegalType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LegalType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LegalType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LegalType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LegalType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LegalType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LegalType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LegalType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LegalType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LegalType_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LegalType_Update_IsIndividual(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LegalType_Update_IsIndividual", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LegalType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LegalType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LegalType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LegalType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LegalType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LegalType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LegalType_ReadAll(ctx context.Context, in *Request_Empty, opts ...grpc.CallOption) (*ResponseMass, error) {
	out := new(ResponseMass)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LegalType_ReadAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LegalType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LegalType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LitigationType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LitigationType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LitigationType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LitigationType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LitigationType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LitigationType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LitigationType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LitigationType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LitigationType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LitigationType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LitigationType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LitigationType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LitigationType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LitigationType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LitigationType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LitigationType_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LitigationType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LitigationType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LitigationType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LitigationType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LitigationType_ReadAll(ctx context.Context, in *Request_Empty, opts ...grpc.CallOption) (*ResponseMass, error) {
	out := new(ResponseMass)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LitigationType_ReadAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) LitigationType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/LitigationType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageAttachement_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageAttachement_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageAttachement_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageAttachement_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageAttachement_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageAttachement_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageAttachement_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageAttachement_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageAttachement_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageAttachement_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageAttachement_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageAttachement_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageAttachement_Update_FilesID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageAttachement_Update_FilesID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageAttachement_Update_MessagesID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageAttachement_Update_MessagesID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageAttachement_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageAttachement_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageAttachement_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageAttachement_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageAttachement_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageAttachement_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageSendStatus_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageSendStatus_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageSendStatus_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageSendStatus_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageSendStatus_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageSendStatus_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageSendStatus_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageSendStatus_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageSendStatus_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageSendStatus_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageSendStatus_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageSendStatus_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageSendStatus_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageSendStatus_Update_Code", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageSendStatus_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageSendStatus_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageSendStatus_Update_FormalName(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageSendStatus_Update_FormalName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageSendStatus_Update_IsDelivered(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageSendStatus_Update_IsDelivered", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageSendStatus_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageSendStatus_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageSendStatus_Update_NotifierID(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageSendStatus_Update_NotifierID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageSendStatus_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageSendStatus_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageSendStatus_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageSendStatus_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageSendStatus_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageSendStatus_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageType_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageType_Update_Code", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageType_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) MessageType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/MessageType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Message_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Message_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Message_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Message_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Message_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Message_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Message_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Message_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Message_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Message_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Message_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Message_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Message_FindBy_LawsuitID_MessageTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Message_FindBy_LawsuitID_MessageTypeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Message_Update_ChannelTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Message_Update_ChannelTypeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Message_Update_ContactFrom(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Message_Update_ContactFrom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Message_Update_ContactTo(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Message_Update_ContactTo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Message_Update_DirectionTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Message_Update_DirectionTypeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Message_Update_EmployeeIdFrom(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Message_Update_EmployeeIdFrom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Message_Update_EmployeeIdTo(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Message_Update_EmployeeIdTo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Message_Update_ExtCode(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Message_Update_ExtCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Message_Update_LawsuitID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Message_Update_LawsuitID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Message_Update_MailingCode(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Message_Update_MailingCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Message_Update_MessageFileID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Message_Update_MessageFileID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Message_Update_MessageTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Message_Update_MessageTypeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Message_Update_ReceiveResult(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Message_Update_ReceiveResult", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Message_Update_ReceiveStatusID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Message_Update_ReceiveStatusID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Message_Update_ReceivedAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Message_Update_ReceivedAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Message_Update_SendResult(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Message_Update_SendResult", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Message_Update_SendStatusID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Message_Update_SendStatusID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Message_Update_SentAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Message_Update_SentAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Message_Update_Topic(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Message_Update_Topic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Message_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Message_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Message_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Message_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Message_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Message_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) NotificationType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/NotificationType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) NotificationType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/NotificationType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) NotificationType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/NotificationType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) NotificationType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/NotificationType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) NotificationType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/NotificationType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) NotificationType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/NotificationType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) NotificationType_Update_BeforeTimeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/NotificationType_Update_BeforeTimeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) NotificationType_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/NotificationType_Update_Code", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) NotificationType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/NotificationType_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) NotificationType_Update_InTime(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/NotificationType_Update_InTime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) NotificationType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/NotificationType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) NotificationType_Update_Value(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/NotificationType_Update_Value", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) NotificationType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/NotificationType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) NotificationType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/NotificationType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) NotificationType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/NotificationType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_FindByInnKpp(ctx context.Context, in *RequestInnKpp, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_FindByInnKpp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_FindBy_InnKppLegaltype(ctx context.Context, in *Request_String_String_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_FindBy_InnKppLegaltype", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_FindByExtId(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_FindByExtId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update_BankruptAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update_BankruptAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update_BookkeeperName(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update_BookkeeperName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update_CategoryID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update_CategoryID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update_ConnectionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update_Email(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update_Email", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update_FullName(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update_FullName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update_INN(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update_INN", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update_IsActive(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update_IsActive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update_IsBankrupt(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update_IsBankrupt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update_IsLiquidated(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update_IsLiquidated", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update_KPP(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update_KPP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update_LegalAddress(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update_LegalAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update_LegalEmail(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update_LegalEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update_LegalTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update_LegalTypeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update_LiquidateAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update_LiquidateAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update_ManagerName(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update_ManagerName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update_NSIFlat(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update_NSIFlat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update_NSIFlatID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update_NSIFlatID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update_NSIID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update_NSIID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update_OGRN(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update_OGRN", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update_OKATO(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update_OKATO", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update_OKPO(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update_OKPO", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update_Phone(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update_Phone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update_PostAddress(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update_PostAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update_PostAddressID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update_PostAddressID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update_RegistrationAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update_RegistrationAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update_StateCode(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update_StateCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update_StateID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update_StateID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update_WWW(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update_WWW", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_Update_LegalAddressStack(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_Update_LegalAddressStack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) Organization_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/Organization_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationsFile_Read(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationsFile_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationsFile_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationsFile_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationsFile_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationsFile_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationsFile_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationsFile_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationsFile_Delete(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationsFile_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationsFile_Restore(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationsFile_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationsFile_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationsFile_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationsFile_Update_FileID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationsFile_Update_FileID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationsFile_Update_OrganizationID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationsFile_Update_OrganizationID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationsFile_ReadFromCache(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationsFile_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationsFile_ReadObject(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationsFile_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationCasebook_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationCasebook_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationCasebook_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationCasebook_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationCasebook_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationCasebook_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationCasebook_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationCasebook_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationCasebook_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationCasebook_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationCasebook_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationCasebook_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationCasebook_FindByInnKpp(ctx context.Context, in *RequestInnKpp, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationCasebook_FindByInnKpp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationCasebook_FindByInn(ctx context.Context, in *RequestString, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationCasebook_FindByInn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationCasebook_FindByOrganizationId(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationCasebook_FindByOrganizationId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationCasebook_Update_INN(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationCasebook_Update_INN", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationCasebook_Update_JSONFileID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationCasebook_Update_JSONFileID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationCasebook_Update_JSONUpdatedAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationCasebook_Update_JSONUpdatedAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationCasebook_Update_OrganizationID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationCasebook_Update_OrganizationID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationCasebook_Update_PDFFileID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationCasebook_Update_PDFFileID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationCasebook_Update_PDFUpdatedAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationCasebook_Update_PDFUpdatedAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationCasebook_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationCasebook_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationCasebook_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationCasebook_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationCasebook_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationCasebook_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationCategoryType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationCategoryType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationCategoryType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationCategoryType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationCategoryType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationCategoryType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationCategoryType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationCategoryType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationCategoryType_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationCategoryType_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationCategoryType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationCategoryType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationCategoryType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationCategoryType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationCategoryType_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationCategoryType_Update_ConnectionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationCategoryType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationCategoryType_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationCategoryType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationCategoryType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationCategoryType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationCategoryType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationCategoryType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationCategoryType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationCategoryType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationCategoryType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationStateType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationStateType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationStateType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationStateType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationStateType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationStateType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationStateType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationStateType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationStateType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationStateType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationStateType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationStateType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationStateType_Update_ActionIndividual(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationStateType_Update_ActionIndividual", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationStateType_Update_ActionOrganization(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationStateType_Update_ActionOrganization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationStateType_Update_Code(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationStateType_Update_Code", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationStateType_Update_Color(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationStateType_Update_Color", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationStateType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationStateType_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationStateType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationStateType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationStateType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationStateType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationStateType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationStateType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationStateType_Update_IsBankrupt(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationStateType_Update_IsBankrupt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationStateType_Update_IsLiquidated(ctx context.Context, in *Request_Int64_Bool, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationStateType_Update_IsLiquidated", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) OrganizationStateType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/OrganizationStateType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PaymentDay_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PaymentDay_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PaymentDay_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PaymentDay_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PaymentDay_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PaymentDay_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PaymentDay_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PaymentDay_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PaymentDay_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PaymentDay_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PaymentDay_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PaymentDay_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PaymentDay_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PaymentDay_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PaymentDay_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PaymentDay_Update_ConnectionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PaymentDay_Update_ContractID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PaymentDay_Update_ContractID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PaymentDay_Update_DateFrom(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PaymentDay_Update_DateFrom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PaymentDay_Update_DateTo(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PaymentDay_Update_DateTo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PaymentDay_Update_Day(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PaymentDay_Update_Day", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PaymentDay_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PaymentDay_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PaymentDay_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PaymentDay_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PaymentDay_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PaymentDay_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PaymentSchedule_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PaymentSchedule_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PaymentSchedule_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PaymentSchedule_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PaymentSchedule_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PaymentSchedule_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PaymentSchedule_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PaymentSchedule_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PaymentSchedule_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PaymentSchedule_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PaymentSchedule_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PaymentSchedule_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PaymentSchedule_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PaymentSchedule_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PaymentSchedule_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PaymentSchedule_Update_ConnectionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PaymentSchedule_Update_ContractID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PaymentSchedule_Update_ContractID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PaymentSchedule_Update_DateFrom(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PaymentSchedule_Update_DateFrom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PaymentSchedule_Update_DateTo(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PaymentSchedule_Update_DateTo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PaymentSchedule_Update_Day(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PaymentSchedule_Update_Day", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PaymentSchedule_Update_Percent(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PaymentSchedule_Update_Percent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PaymentSchedule_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PaymentSchedule_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PaymentSchedule_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PaymentSchedule_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PaymentSchedule_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PaymentSchedule_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItem_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItem_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItem_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItem_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItem_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItem_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItem_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItem_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItem_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItem_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItem_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItem_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItem_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItem_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItem_Update_BillingMonth(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_BillingMonth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItem_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_ConnectionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItem_Update_ContractID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_ContractID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItem_Update_DateFrom(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_DateFrom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItem_Update_DateTo(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_DateTo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItem_Update_DaysCount(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_DaysCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItem_Update_DebtSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_DebtSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItem_Update_DebtorCategoryID(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_DebtorCategoryID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItem_Update_Dividend(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_Dividend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItem_Update_Divider(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_Divider", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItem_Update_DocumentInvoiceID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_DocumentInvoiceID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItem_Update_Flags(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_Flags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItem_Update_PaymentDueAt(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_PaymentDueAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItem_Update_PenaltyCalculationItemsTypeID(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_PenaltyCalculationItemsTypeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItem_Update_Percent(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_Percent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItem_Update_Sum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItem_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItem_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItem_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItem_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItem_Update_DebtCollectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_DebtCollectionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItem_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItem_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItemsType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItemsType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItemsType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItemsType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItemsType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItemsType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItemsType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItemsType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItemsType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItemsType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItemsType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItemsType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItemsType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItemsType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItemsType_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItemsType_Update_Code", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItemsType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItemsType_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItemsType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItemsType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItemsType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItemsType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PenaltyCalculationItemsType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PenaltyCalculationItemsType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PriorityType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PriorityType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PriorityType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PriorityType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PriorityType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PriorityType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PriorityType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PriorityType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PriorityType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PriorityType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PriorityType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PriorityType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PriorityType_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PriorityType_Update_Code", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PriorityType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PriorityType_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PriorityType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PriorityType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PriorityType_Update_Value(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PriorityType_Update_Value", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PriorityType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PriorityType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PriorityType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PriorityType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) PriorityType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/PriorityType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) RepeatType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/RepeatType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) RepeatType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/RepeatType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) RepeatType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/RepeatType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) RepeatType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/RepeatType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) RepeatType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/RepeatType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) RepeatType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/RepeatType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) RepeatType_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/RepeatType_Update_Code", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) RepeatType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/RepeatType_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) RepeatType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/RepeatType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) RepeatType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/RepeatType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) RepeatType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/RepeatType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) RepeatType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/RepeatType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ServiceProvider_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ServiceProvider_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ServiceProvider_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ServiceProvider_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ServiceProvider_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ServiceProvider_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ServiceProvider_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ServiceProvider_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ServiceProvider_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ServiceProvider_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ServiceProvider_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ServiceProvider_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ServiceProvider_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ServiceProvider_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ServiceProvider_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ServiceProvider_Update_ConnectionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ServiceProvider_Update_DateFrom(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ServiceProvider_Update_DateFrom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ServiceProvider_Update_DateTo(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ServiceProvider_Update_DateTo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ServiceProvider_Update_OrganizationID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ServiceProvider_Update_OrganizationID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ServiceProvider_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ServiceProvider_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ServiceProvider_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ServiceProvider_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ServiceProvider_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ServiceProvider_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ServiceType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ServiceType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ServiceType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ServiceType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ServiceType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ServiceType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ServiceType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ServiceType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ServiceType_FindByExtID(ctx context.Context, in *RequestExtID, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ServiceType_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ServiceType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ServiceType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ServiceType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ServiceType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ServiceType_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ServiceType_Update_Code", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ServiceType_Update_ConnectionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ServiceType_Update_ConnectionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ServiceType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ServiceType_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ServiceType_Update_FullName(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ServiceType_Update_FullName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ServiceType_Update_Measure(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ServiceType_Update_Measure", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ServiceType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ServiceType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ServiceType_Update_ServiceProviderID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ServiceType_Update_ServiceProviderID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ServiceType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ServiceType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ServiceType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ServiceType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) ServiceType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/ServiceType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDuty_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDuty_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDuty_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDuty_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDuty_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDuty_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDuty_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDuty_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDuty_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDuty_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDuty_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDuty_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDuty_Update_CourtID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDuty_Update_CourtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDuty_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDuty_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDuty_Update_LawsuitID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDuty_Update_LawsuitID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDuty_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDuty_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDuty_Update_RequestDate(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDuty_Update_RequestDate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDuty_Update_RequestNumber(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDuty_Update_RequestNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDuty_Update_Sum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDuty_Update_Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDuty_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDuty_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDuty_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDuty_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDuty_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDuty_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyConsumption_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyConsumption_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyConsumption_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyConsumption_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyConsumption_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyConsumption_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyConsumption_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyConsumption_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyConsumption_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyConsumption_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyConsumption_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyConsumption_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyConsumption_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyConsumption_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyConsumption_Update_CourtSuitID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyConsumption_Update_CourtSuitID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyConsumption_Update_StateDutyPaymentsPaymentID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyConsumption_Update_StateDutyPaymentsPaymentID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyConsumption_Update_StateDutyPaymentsReturnID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyConsumption_Update_StateDutyPaymentsReturnID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyConsumption_Update_StateDutyRegistryID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyConsumption_Update_StateDutyRegistryID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyConsumption_Update_StateDutySum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyConsumption_Update_StateDutySum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyConsumption_Update_StatusID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyConsumption_Update_StatusID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyConsumption_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyConsumption_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyConsumption_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyConsumption_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyConsumptionsFile_Read(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyConsumptionsFile_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyConsumptionsFile_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyConsumptionsFile_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyConsumptionsFile_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyConsumptionsFile_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyConsumptionsFile_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyConsumptionsFile_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyConsumptionsFile_Delete(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyConsumptionsFile_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyConsumptionsFile_Restore(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyConsumptionsFile_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyConsumptionsFile_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyConsumptionsFile_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyConsumptionsFile_Update_ConsumptionID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyConsumptionsFile_Update_ConsumptionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyConsumptionsFile_Update_FileID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyConsumptionsFile_Update_FileID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyConsumptionsFile_ReadFromCache(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyConsumptionsFile_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyConsumptionsFile_ReadObject(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyConsumptionsFile_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyPaymentType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyPaymentType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyPaymentType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyPaymentType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyPaymentType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyPaymentType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyPaymentType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyPaymentType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyPaymentType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyPaymentType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyPaymentType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyPaymentType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyPaymentType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyPaymentType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyPaymentType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyPaymentType_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyPaymentType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyPaymentType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyPaymentType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyPaymentType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyPaymentType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyPaymentType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyPayment_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyPayment_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyPayment_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyPayment_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyPayment_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyPayment_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyPayment_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyPayment_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyPayment_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyPayment_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyPayment_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyPayment_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyPayment_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyPayment_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyPayment_Update_BranchID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyPayment_Update_BranchID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyPayment_Update_CourtID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyPayment_Update_CourtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyPayment_Update_DocumentSum(ctx context.Context, in *Request_Int64_Float64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyPayment_Update_DocumentSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyPayment_Update_FileID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyPayment_Update_FileID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyPayment_Update_Number(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyPayment_Update_Number", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyPayment_Update_PaymentDate(ctx context.Context, in *Request_Int64_Date, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyPayment_Update_PaymentDate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyPayment_Update_StateDutyPaymentTypeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyPayment_Update_StateDutyPaymentTypeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyPayment_Update_TaxOfficeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyPayment_Update_TaxOfficeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyPayment_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyPayment_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyPayment_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyPayment_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyRegistry_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyRegistry_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyRegistry_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyRegistry_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyRegistry_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyRegistry_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyRegistry_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyRegistry_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyRegistry_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyRegistry_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyRegistry_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyRegistry_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyRegistry_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyRegistry_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyRegistry_Update_BranchID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyRegistry_Update_BranchID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyRegistry_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyRegistry_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyRegistry_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyRegistry_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyStatus_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyStatus_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyStatus_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyStatus_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyStatus_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyStatus_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyStatus_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyStatus_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyStatus_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyStatus_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyStatus_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyStatus_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyStatus_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyStatus_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyStatus_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyStatus_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyStatus_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyStatus_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyStatus_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyStatus_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) StateDutyStatus_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/StateDutyStatus_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) TableName_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/TableName_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) TableName_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/TableName_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) TableName_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/TableName_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) TableName_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/TableName_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) TableName_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/TableName_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) TableName_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/TableName_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) TableName_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/TableName_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) TableName_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/TableName_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) TableName_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/TableName_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) TableName_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/TableName_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) TableName_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/TableName_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) TaxOffice_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/TaxOffice_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) TaxOffice_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/TaxOffice_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) TaxOffice_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/TaxOffice_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) TaxOffice_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/TaxOffice_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) TaxOffice_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/TaxOffice_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) TaxOffice_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/TaxOffice_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) TaxOffice_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/TaxOffice_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) TaxOffice_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/TaxOffice_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) TaxOffice_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/TaxOffice_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) TaxOffice_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/TaxOffice_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) TaxOffice_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/TaxOffice_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) UserRole_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/UserRole_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) UserRole_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/UserRole_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) UserRole_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/UserRole_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) UserRole_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/UserRole_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) UserRole_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/UserRole_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) UserRole_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/UserRole_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) UserRole_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/UserRole_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) UserRole_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/UserRole_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) UserRole_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/UserRole_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) UserRole_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/UserRole_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) UserRole_ReadAll(ctx context.Context, in *Request_Empty, opts ...grpc.CallOption) (*ResponseMass, error) {
	out := new(ResponseMass)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/UserRole_ReadAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) UserRole_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/UserRole_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) UserRolesMembership_Read(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/UserRolesMembership_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) UserRolesMembership_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/UserRolesMembership_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) UserRolesMembership_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/UserRolesMembership_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) UserRolesMembership_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/UserRolesMembership_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) UserRolesMembership_Delete(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/UserRolesMembership_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) UserRolesMembership_Restore(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/UserRolesMembership_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) UserRolesMembership_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/UserRolesMembership_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) UserRolesMembership_Update_EmployeeID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/UserRolesMembership_Update_EmployeeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) UserRolesMembership_Update_UserRoleID(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/UserRolesMembership_Update_UserRoleID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) UserRolesMembership_ReadFromCache(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/UserRolesMembership_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) UserRolesMembership_FindMassBy_EmployeeID(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*ResponseMass, error) {
	out := new(ResponseMass)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/UserRolesMembership_FindMassBy_EmployeeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) UserRolesMembership_FindMassBy_UserRoleID(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*ResponseMass, error) {
	out := new(ResponseMass)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/UserRolesMembership_FindMassBy_UserRoleID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) UserRolesMembership_ReadObject(ctx context.Context, in *Request_Int64_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/UserRolesMembership_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) WhiteListReasonType_Read(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/WhiteListReasonType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) WhiteListReasonType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/WhiteListReasonType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) WhiteListReasonType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/WhiteListReasonType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) WhiteListReasonType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/WhiteListReasonType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) WhiteListReasonType_Delete(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/WhiteListReasonType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) WhiteListReasonType_Restore(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/WhiteListReasonType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) WhiteListReasonType_Update_Code(ctx context.Context, in *Request_Int64_Int32, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/WhiteListReasonType_Update_Code", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) WhiteListReasonType_Update_Description(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/WhiteListReasonType_Update_Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) WhiteListReasonType_Update_Name(ctx context.Context, in *Request_Int64_String, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/WhiteListReasonType_Update_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) WhiteListReasonType_ReadFromCache(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/WhiteListReasonType_ReadFromCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) WhiteListReasonType_UpdateManyFields(ctx context.Context, in *Request_Model_MassString, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/WhiteListReasonType_UpdateManyFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postgresMigrateClient) WhiteListReasonType_ReadObject(ctx context.Context, in *Request_Int64, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Postgres_migrate/WhiteListReasonType_ReadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PostgresMigrateServer is the server API for PostgresMigrate service.
// All implementations must embed UnimplementedPostgresMigrateServer
// for forward compatibility
type PostgresMigrateServer interface {
	// PostgresMigratePgAttribute
	PostgresMigratePgAttribute_Read(context.Context, *Request_String_Int64_Int64) (*Response, error)
	PostgresMigratePgAttribute_Create(context.Context, *RequestModel) (*Response, error)
	PostgresMigratePgAttribute_Update(context.Context, *RequestModel) (*Response, error)
	PostgresMigratePgAttribute_Save(context.Context, *RequestModel) (*Response, error)
	PostgresMigratePgAttribute_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attalign(context.Context, *Request_String_Int64_Int64_String) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attbyval(context.Context, *Request_String_Int64_Int64_Bool) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attcacheoff(context.Context, *Request_String_Int64_Int64_Int32) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attcollation(context.Context, *Request_String_Int64_Int64_Int64) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attgenerated(context.Context, *Request_String_Int64_Int64_String) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Atthasdef(context.Context, *Request_String_Int64_Int64_Bool) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Atthasmissing(context.Context, *Request_String_Int64_Int64_Bool) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attidentity(context.Context, *Request_String_Int64_Int64_String) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attinhcount(context.Context, *Request_String_Int64_Int64_Int32) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attisdropped(context.Context, *Request_String_Int64_Int64_Bool) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attislocal(context.Context, *Request_String_Int64_Int64_Bool) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attlen(context.Context, *Request_String_Int64_Int64_Int32) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attname(context.Context, *Request_String_Int64_Int64) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attndims(context.Context, *Request_String_Int64_Int64_Int32) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attnotnull(context.Context, *Request_String_Int64_Int64_Bool) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attnum(context.Context, *Request_String_Int64_Int64_Int32) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attrelid(context.Context, *Request_String_Int64_Int64) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attstattarget(context.Context, *Request_String_Int64_Int64_Int32) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Attstorage(context.Context, *Request_String_Int64_Int64_String) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Atttypid(context.Context, *Request_String_Int64_Int64_Int64) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_Atttypmod(context.Context, *Request_String_Int64_Int64_Int32) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_Update_VersionID(context.Context, *Request_String_Int64_Int64) (*ResponseEmpty, error)
	PostgresMigratePgAttribute_ReadFromCache(context.Context, *Request_String_Int64_Int64) (*Response, error)
	PostgresMigratePgAttribute_ReadObject(context.Context, *Request_String_Int64_Int64) (*Response, error)
	// PostgresMigratePgClass
	PostgresMigratePgClass_Read(context.Context, *Request_Int64_Int64) (*Response, error)
	PostgresMigratePgClass_Create(context.Context, *RequestModel) (*Response, error)
	PostgresMigratePgClass_Update(context.Context, *RequestModel) (*Response, error)
	PostgresMigratePgClass_Save(context.Context, *RequestModel) (*Response, error)
	PostgresMigratePgClass_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Oid(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relallvisible(context.Context, *Request_Int64_Int64_Int32) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relam(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relchecks(context.Context, *Request_Int64_Int64_Int32) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relfilenode(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relforcerowsecurity(context.Context, *Request_Int64_Int64_Bool) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relfrozenxid(context.Context, *Request_Int64_Int64_Int32) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relhasindex(context.Context, *Request_Int64_Int64_Bool) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relhasrules(context.Context, *Request_Int64_Int64_Bool) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relhassubclass(context.Context, *Request_Int64_Int64_Bool) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relhastriggers(context.Context, *Request_Int64_Int64_Bool) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relispartition(context.Context, *Request_Int64_Int64_Bool) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relispopulated(context.Context, *Request_Int64_Int64_Bool) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relisshared(context.Context, *Request_Int64_Int64_Bool) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relkind(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relminmxid(context.Context, *Request_Int64_Int64_Int32) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relname(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relnamespace(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relnatts(context.Context, *Request_Int64_Int64_Int32) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Reloftype(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relowner(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relpages(context.Context, *Request_Int64_Int64_Int32) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relpersistence(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relreplident(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relrewrite(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Relrowsecurity(context.Context, *Request_Int64_Int64_Bool) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Reltablespace(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Reltoastrelid(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Reltuples(context.Context, *Request_Int64_Int64_Float32) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_Reltype(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error)
	PostgresMigratePgClass_Update_VersionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	PostgresMigratePgClass_ReadFromCache(context.Context, *Request_Int64_Int64) (*Response, error)
	PostgresMigratePgClass_ReadObject(context.Context, *Request_Int64_Int64) (*Response, error)
	// PostgresMigratePgConstraint
	PostgresMigratePgConstraint_Read(context.Context, *Request_Int64_Int64) (*Response, error)
	PostgresMigratePgConstraint_Create(context.Context, *RequestModel) (*Response, error)
	PostgresMigratePgConstraint_Update(context.Context, *RequestModel) (*Response, error)
	PostgresMigratePgConstraint_Save(context.Context, *RequestModel) (*Response, error)
	PostgresMigratePgConstraint_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Condeferrable(context.Context, *Request_Int64_Int64_Bool) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Condeferred(context.Context, *Request_Int64_Int64_Bool) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Conexclop(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Confdeltype(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Conffeqop(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Confkey(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Confmatchtype(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Confrelid(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Confupdtype(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Conindid(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Coninhcount(context.Context, *Request_Int64_Int64_Int32) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Conislocal(context.Context, *Request_Int64_Int64_Bool) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Conkey(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Conname(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Connamespace(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Connoinherit(context.Context, *Request_Int64_Int64_Bool) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Conparentid(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Conpfeqop(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Conppeqop(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Conrelid(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Contype(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Contypid(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Convalidated(context.Context, *Request_Int64_Int64_Bool) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_Oid(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_Update_VersionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	PostgresMigratePgConstraint_ReadFromCache(context.Context, *Request_Int64_Int64) (*Response, error)
	PostgresMigratePgConstraint_ReadObject(context.Context, *Request_Int64_Int64) (*Response, error)
	// PostgresMigratePgDescription
	PostgresMigratePgDescription_Read(context.Context, *Request_Int64_Int64_Int32_Int64) (*Response, error)
	PostgresMigratePgDescription_Create(context.Context, *RequestModel) (*Response, error)
	PostgresMigratePgDescription_Update(context.Context, *RequestModel) (*Response, error)
	PostgresMigratePgDescription_Save(context.Context, *RequestModel) (*Response, error)
	PostgresMigratePgDescription_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	PostgresMigratePgDescription_Update_Classoid(context.Context, *Request_Int64_Int64_Int32_Int64) (*ResponseEmpty, error)
	PostgresMigratePgDescription_Update_Description(context.Context, *Request_Int64_Int64_Int32_Int64_String) (*ResponseEmpty, error)
	PostgresMigratePgDescription_Update_Objoid(context.Context, *Request_Int64_Int64_Int32_Int64) (*ResponseEmpty, error)
	PostgresMigratePgDescription_Update_Objsubid(context.Context, *Request_Int64_Int64_Int32_Int64) (*ResponseEmpty, error)
	PostgresMigratePgDescription_Update_VersionID(context.Context, *Request_Int64_Int64_Int32_Int64) (*ResponseEmpty, error)
	PostgresMigratePgDescription_ReadFromCache(context.Context, *Request_Int64_Int64_Int32_Int64) (*Response, error)
	PostgresMigratePgDescription_ReadObject(context.Context, *Request_Int64_Int64_Int32_Int64) (*Response, error)
	// PostgresMigratePgIndex
	PostgresMigratePgIndex_Read(context.Context, *Request_Int64_Int64_Int64) (*Response, error)
	PostgresMigratePgIndex_Create(context.Context, *RequestModel) (*Response, error)
	PostgresMigratePgIndex_Update(context.Context, *RequestModel) (*Response, error)
	PostgresMigratePgIndex_Save(context.Context, *RequestModel) (*Response, error)
	PostgresMigratePgIndex_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indcheckxmin(context.Context, *Request_Int64_Int64_Int64_Bool) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indclass(context.Context, *Request_Int64_Int64_Int64_String) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indcollation(context.Context, *Request_Int64_Int64_Int64_String) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indexprs(context.Context, *Request_Int64_Int64_Int64_String) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indexrelid(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indimmediate(context.Context, *Request_Int64_Int64_Int64_Bool) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indisclustered(context.Context, *Request_Int64_Int64_Int64_Bool) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indisexclusion(context.Context, *Request_Int64_Int64_Int64_Bool) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indislive(context.Context, *Request_Int64_Int64_Int64_Bool) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indisprimary(context.Context, *Request_Int64_Int64_Int64_Bool) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indisready(context.Context, *Request_Int64_Int64_Int64_Bool) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indisreplident(context.Context, *Request_Int64_Int64_Int64_Bool) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indisunique(context.Context, *Request_Int64_Int64_Int64_Bool) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indisvalid(context.Context, *Request_Int64_Int64_Int64_Bool) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indkey(context.Context, *Request_Int64_Int64_Int64_String) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indnatts(context.Context, *Request_Int64_Int64_Int64_Int32) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indnkeyatts(context.Context, *Request_Int64_Int64_Int64_Int32) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indoption(context.Context, *Request_Int64_Int64_Int64_String) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indpred(context.Context, *Request_Int64_Int64_Int64_String) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_Indrelid(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error)
	PostgresMigratePgIndex_Update_VersionID(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error)
	PostgresMigratePgIndex_ReadFromCache(context.Context, *Request_Int64_Int64_Int64) (*Response, error)
	PostgresMigratePgIndex_ReadObject(context.Context, *Request_Int64_Int64_Int64) (*Response, error)
	// PostgresMigratePgNamespace
	PostgresMigratePgNamespace_Read(context.Context, *Request_Int64_Int64) (*Response, error)
	PostgresMigratePgNamespace_Create(context.Context, *RequestModel) (*Response, error)
	PostgresMigratePgNamespace_Update(context.Context, *RequestModel) (*Response, error)
	PostgresMigratePgNamespace_Save(context.Context, *RequestModel) (*Response, error)
	PostgresMigratePgNamespace_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	PostgresMigratePgNamespace_Update_Nspacl(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error)
	PostgresMigratePgNamespace_Update_Nspname(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error)
	PostgresMigratePgNamespace_Update_Nspowner(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error)
	PostgresMigratePgNamespace_Update_Oid(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	PostgresMigratePgNamespace_Update_VersionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	PostgresMigratePgNamespace_ReadFromCache(context.Context, *Request_Int64_Int64) (*Response, error)
	PostgresMigratePgNamespace_ReadObject(context.Context, *Request_Int64_Int64) (*Response, error)
	// PostgresMigrateVersion
	PostgresMigrateVersion_Read(context.Context, *Request_Int64) (*Response, error)
	PostgresMigrateVersion_Create(context.Context, *RequestModel) (*Response, error)
	PostgresMigrateVersion_Update(context.Context, *RequestModel) (*Response, error)
	PostgresMigrateVersion_Save(context.Context, *RequestModel) (*Response, error)
	PostgresMigrateVersion_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	PostgresMigrateVersion_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	PostgresMigrateVersion_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	PostgresMigrateVersion_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	PostgresMigrateVersion_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// AccountingArea
	AccountingArea_Read(context.Context, *Request_Int64) (*Response, error)
	AccountingArea_Create(context.Context, *RequestModel) (*Response, error)
	AccountingArea_Update(context.Context, *RequestModel) (*Response, error)
	AccountingArea_Save(context.Context, *RequestModel) (*Response, error)
	AccountingArea_FindByExtID(context.Context, *RequestExtID) (*Response, error)
	AccountingArea_Delete(context.Context, *Request_Int64) (*Response, error)
	AccountingArea_Restore(context.Context, *Request_Int64) (*Response, error)
	AccountingArea_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	AccountingArea_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	AccountingArea_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	AccountingArea_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	AccountingArea_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	AccountingArea_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	AccountingArea_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// AccrualType
	AccrualType_Read(context.Context, *Request_Int64) (*Response, error)
	AccrualType_Create(context.Context, *RequestModel) (*Response, error)
	AccrualType_Update(context.Context, *RequestModel) (*Response, error)
	AccrualType_Save(context.Context, *RequestModel) (*Response, error)
	AccrualType_Delete(context.Context, *Request_Int64) (*Response, error)
	AccrualType_Restore(context.Context, *Request_Int64) (*Response, error)
	AccrualType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	AccrualType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	AccrualType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	AccrualType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	AccrualType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// Balance
	Balance_Read(context.Context, *Request_Int64) (*Response, error)
	Balance_Create(context.Context, *RequestModel) (*Response, error)
	Balance_Update(context.Context, *RequestModel) (*Response, error)
	Balance_Save(context.Context, *RequestModel) (*Response, error)
	Balance_FindByExtID(context.Context, *RequestExtID) (*Response, error)
	Balance_Delete(context.Context, *Request_Int64) (*Response, error)
	Balance_Restore(context.Context, *Request_Int64) (*Response, error)
	Balance_Update_BillingMonth(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Balance_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Balance_Update_ContractID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Balance_Update_DebtTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Balance_Update_DocumentAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Balance_Update_DocumentInvoiceID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Balance_Update_DocumentPaymentID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Balance_Update_Sum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	Balance_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	Balance_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	Balance_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// BankAccountOrganization
	BankAccountOrganization_Read(context.Context, *Request_Int64) (*Response, error)
	BankAccountOrganization_Create(context.Context, *RequestModel) (*Response, error)
	BankAccountOrganization_Update(context.Context, *RequestModel) (*Response, error)
	BankAccountOrganization_Save(context.Context, *RequestModel) (*Response, error)
	BankAccountOrganization_FindByExtID(context.Context, *RequestExtID) (*Response, error)
	BankAccountOrganization_Delete(context.Context, *Request_Int64) (*Response, error)
	BankAccountOrganization_Restore(context.Context, *Request_Int64) (*Response, error)
	BankAccountOrganization_Update_AccountNumber(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	BankAccountOrganization_Update_BankID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	BankAccountOrganization_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	BankAccountOrganization_Update_OrganizationID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	BankAccountOrganization_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	BankAccountOrganization_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	BankAccountOrganization_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// Bank
	Bank_Read(context.Context, *Request_Int64) (*Response, error)
	Bank_Create(context.Context, *RequestModel) (*Response, error)
	Bank_Update(context.Context, *RequestModel) (*Response, error)
	Bank_Save(context.Context, *RequestModel) (*Response, error)
	Bank_FindByExtID(context.Context, *RequestExtID) (*Response, error)
	Bank_Delete(context.Context, *Request_Int64) (*Response, error)
	Bank_Restore(context.Context, *Request_Int64) (*Response, error)
	Bank_Update_BIK(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Bank_Update_City(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Bank_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Bank_Update_CorrespondentAccount(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Bank_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Bank_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Bank_Update_OrganizationID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Bank_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	Bank_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	Bank_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// BeforeTimeType
	BeforeTimeType_Read(context.Context, *Request_Int64) (*Response, error)
	BeforeTimeType_Create(context.Context, *RequestModel) (*Response, error)
	BeforeTimeType_Update(context.Context, *RequestModel) (*Response, error)
	BeforeTimeType_Save(context.Context, *RequestModel) (*Response, error)
	BeforeTimeType_Delete(context.Context, *Request_Int64) (*Response, error)
	BeforeTimeType_Restore(context.Context, *Request_Int64) (*Response, error)
	BeforeTimeType_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	BeforeTimeType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	BeforeTimeType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	BeforeTimeType_Update_Value(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	BeforeTimeType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	BeforeTimeType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	BeforeTimeType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// BillKindType
	BillKindType_Read(context.Context, *Request_Int64) (*Response, error)
	BillKindType_Create(context.Context, *RequestModel) (*Response, error)
	BillKindType_Update(context.Context, *RequestModel) (*Response, error)
	BillKindType_Save(context.Context, *RequestModel) (*Response, error)
	BillKindType_Delete(context.Context, *Request_Int64) (*Response, error)
	BillKindType_Restore(context.Context, *Request_Int64) (*Response, error)
	BillKindType_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	BillKindType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	BillKindType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	BillKindType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	BillKindType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	BillKindType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// Branch
	Branch_Read(context.Context, *Request_Int64) (*Response, error)
	Branch_Create(context.Context, *RequestModel) (*Response, error)
	Branch_Update(context.Context, *RequestModel) (*Response, error)
	Branch_Save(context.Context, *RequestModel) (*Response, error)
	Branch_Delete(context.Context, *Request_Int64) (*Response, error)
	Branch_Restore(context.Context, *Request_Int64) (*Response, error)
	Branch_Update_Code(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Branch_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Branch_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Branch_Update_OrganizationID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Branch_Update_PersonalAreaLink(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Branch_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	Branch_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	Branch_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// Briefcase
	Briefcase_Read(context.Context, *Request_Int64) (*Response, error)
	Briefcase_Create(context.Context, *RequestModel) (*Response, error)
	Briefcase_Update(context.Context, *RequestModel) (*Response, error)
	Briefcase_Save(context.Context, *RequestModel) (*Response, error)
	Briefcase_Delete(context.Context, *Request_Int64) (*Response, error)
	Briefcase_Restore(context.Context, *Request_Int64) (*Response, error)
	Briefcase_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	Briefcase_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	Briefcase_Update_LawerID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Briefcase_Update_BranchID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Briefcase_Update_Number(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Briefcase_Update_StatusID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Briefcase_SetLawer_ChangeItems(context.Context, *Request_Model_Int64) (*ResponseEmpty, error)
	Briefcase_FindEmployeeBy_LawerID(context.Context, *Request_Int64_Int64) (*Response, error)
	Briefcase_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// BriefcaseComment
	BriefcaseComment_Read(context.Context, *Request_Int64) (*Response, error)
	BriefcaseComment_Create(context.Context, *RequestModel) (*Response, error)
	BriefcaseComment_Update(context.Context, *RequestModel) (*Response, error)
	BriefcaseComment_Save(context.Context, *RequestModel) (*Response, error)
	BriefcaseComment_Delete(context.Context, *Request_Int64) (*Response, error)
	BriefcaseComment_Restore(context.Context, *Request_Int64) (*Response, error)
	BriefcaseComment_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	BriefcaseComment_Update_BriefcaseID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	BriefcaseComment_Update_CommentTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	BriefcaseComment_Update_EmployeeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	BriefcaseComment_Update_Message(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	BriefcaseComment_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	BriefcaseComment_ReadObject(context.Context, *Request_Int64) (*Response, error)
	BriefcaseComment_FindMassBy_BriefcaseID_CommentTypeID(context.Context, *Request_Int64_Int64) (*ResponseMass, error)
	// BriefcasesFile
	BriefcasesFile_Read(context.Context, *Request_Int64_Int64) (*Response, error)
	BriefcasesFile_Create(context.Context, *RequestModel) (*Response, error)
	BriefcasesFile_Update(context.Context, *RequestModel) (*Response, error)
	BriefcasesFile_Save(context.Context, *RequestModel) (*Response, error)
	BriefcasesFile_Delete(context.Context, *Request_Int64_Int64) (*Response, error)
	BriefcasesFile_Restore(context.Context, *Request_Int64_Int64) (*Response, error)
	BriefcasesFile_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	BriefcasesFile_Update_BriefcaseID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	BriefcasesFile_Update_FileID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	BriefcasesFile_ReadFromCache(context.Context, *Request_Int64_Int64) (*Response, error)
	BriefcasesFile_ReadObject(context.Context, *Request_Int64_Int64) (*Response, error)
	BriefcasesFile_FindMassBy_BriefcaseID(context.Context, *Request_Int64) (*ResponseMass, error)
	BriefcasesFile_FindMassObjectBy_BriefcaseID(context.Context, *Request_Int64) (*ResponseMass, error)
	// BriefcasesHashtag
	BriefcasesHashtag_Read(context.Context, *Request_Int64_Int64) (*Response, error)
	BriefcasesHashtag_Create(context.Context, *RequestModel) (*Response, error)
	BriefcasesHashtag_Update(context.Context, *RequestModel) (*Response, error)
	BriefcasesHashtag_Save(context.Context, *RequestModel) (*Response, error)
	BriefcasesHashtag_Delete(context.Context, *Request_Int64_Int64) (*Response, error)
	BriefcasesHashtag_Restore(context.Context, *Request_Int64_Int64) (*Response, error)
	BriefcasesHashtag_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	BriefcasesHashtag_Update_BriefcaseID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	BriefcasesHashtag_Update_HashtagID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	BriefcasesHashtag_ReadFromCache(context.Context, *Request_Int64_Int64) (*Response, error)
	BriefcasesHashtag_FindMassBy_BriefcaseID(context.Context, *Request_Int64) (*ResponseMass, error)
	BriefcasesHashtag_ReadObject(context.Context, *Request_Int64_Int64) (*Response, error)
	// BriefcasesLawsuit
	BriefcasesLawsuit_Read(context.Context, *Request_Int64_Int64) (*Response, error)
	BriefcasesLawsuit_Create(context.Context, *RequestModel) (*Response, error)
	BriefcasesLawsuit_Update(context.Context, *RequestModel) (*Response, error)
	BriefcasesLawsuit_Save(context.Context, *RequestModel) (*Response, error)
	BriefcasesLawsuit_Delete(context.Context, *Request_Int64_Int64) (*Response, error)
	BriefcasesLawsuit_Restore(context.Context, *Request_Int64_Int64) (*Response, error)
	BriefcasesLawsuit_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	BriefcasesLawsuit_Update_BriefcaseID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	BriefcasesLawsuit_Update_LawsuitID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	BriefcasesLawsuit_ReadFromCache(context.Context, *Request_Int64_Int64) (*Response, error)
	BriefcasesLawsuit_ReadObject(context.Context, *Request_Int64_Int64) (*Response, error)
	// BriefcaseStatusState
	BriefcaseStatusState_Read(context.Context, *Request_Int64) (*Response, error)
	BriefcaseStatusState_Create(context.Context, *RequestModel) (*Response, error)
	BriefcaseStatusState_Update(context.Context, *RequestModel) (*Response, error)
	BriefcaseStatusState_Save(context.Context, *RequestModel) (*Response, error)
	BriefcaseStatusState_Delete(context.Context, *Request_Int64) (*Response, error)
	BriefcaseStatusState_Restore(context.Context, *Request_Int64) (*Response, error)
	BriefcaseStatusState_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	BriefcaseStatusState_Update_BriefcaseDebtSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	BriefcaseStatusState_Update_BriefcaseID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	BriefcaseStatusState_Update_BriefcaseInvoiceSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	BriefcaseStatusState_Update_BriefcasePaySum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	BriefcaseStatusState_Update_ContractBillsTotalSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	BriefcaseStatusState_Update_ContractDebtSumAllTypes(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	BriefcaseStatusState_Update_ContractMainSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	BriefcaseStatusState_Update_ContractPennySum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	BriefcaseStatusState_Update_ContractRestrictSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	BriefcaseStatusState_Update_ContractStateDutySum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	BriefcaseStatusState_Update_StatusAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	BriefcaseStatusState_Update_StatusID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	BriefcaseStatusState_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	BriefcaseStatusState_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// Calendar
	Calendar_Read(context.Context, *Request_Int64) (*Response, error)
	Calendar_Create(context.Context, *RequestModel) (*Response, error)
	Calendar_Update(context.Context, *RequestModel) (*Response, error)
	Calendar_Save(context.Context, *RequestModel) (*Response, error)
	Calendar_Delete(context.Context, *Request_Int64) (*Response, error)
	Calendar_Restore(context.Context, *Request_Int64) (*Response, error)
	Calendar_Update_Comment(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Calendar_Update_Date(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Calendar_Update_DayTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Calendar_Update_Days(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	Calendar_Update_Hours(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	Calendar_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	Calendar_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	Calendar_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// ChangeItem
	ChangeItem_Read(context.Context, *Request_Int64) (*Response, error)
	ChangeItem_Create(context.Context, *RequestModel) (*Response, error)
	ChangeItem_Update(context.Context, *RequestModel) (*Response, error)
	ChangeItem_Save(context.Context, *RequestModel) (*Response, error)
	ChangeItem_Delete(context.Context, *Request_Int64) (*Response, error)
	ChangeItem_Restore(context.Context, *Request_Int64) (*Response, error)
	ChangeItem_Update_Key(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	ChangeItem_Update_Prev(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	ChangeItem_Update_Value(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	ChangeItem_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	ChangeItem_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	ChangeItem_Update_TableNameID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	ChangeItem_Update_TableRowID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	ChangeItem_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// ChannelType
	ChannelType_Read(context.Context, *Request_Int64) (*Response, error)
	ChannelType_Create(context.Context, *RequestModel) (*Response, error)
	ChannelType_Update(context.Context, *RequestModel) (*Response, error)
	ChannelType_Save(context.Context, *RequestModel) (*Response, error)
	ChannelType_Delete(context.Context, *Request_Int64) (*Response, error)
	ChannelType_Restore(context.Context, *Request_Int64) (*Response, error)
	ChannelType_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	ChannelType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	ChannelType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	ChannelType_Update_NotifierID(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	ChannelType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	ChannelType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	ChannelType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// ClaimType
	ClaimType_Read(context.Context, *Request_Int64) (*Response, error)
	ClaimType_Create(context.Context, *RequestModel) (*Response, error)
	ClaimType_Update(context.Context, *RequestModel) (*Response, error)
	ClaimType_Save(context.Context, *RequestModel) (*Response, error)
	ClaimType_Delete(context.Context, *Request_Int64) (*Response, error)
	ClaimType_Restore(context.Context, *Request_Int64) (*Response, error)
	ClaimType_Update_Code(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	ClaimType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	ClaimType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	ClaimType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	ClaimType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	ClaimType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// ColorType
	ColorType_Read(context.Context, *Request_Int64) (*Response, error)
	ColorType_Create(context.Context, *RequestModel) (*Response, error)
	ColorType_Update(context.Context, *RequestModel) (*Response, error)
	ColorType_Save(context.Context, *RequestModel) (*Response, error)
	ColorType_Delete(context.Context, *Request_Int64) (*Response, error)
	ColorType_Restore(context.Context, *Request_Int64) (*Response, error)
	ColorType_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	ColorType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	ColorType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	ColorType_Update_Value(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	ColorType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	ColorType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	ColorType_Update_Blue(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	ColorType_Update_Green(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	ColorType_Update_Red(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	ColorType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// CommentType
	CommentType_Read(context.Context, *Request_Int64) (*Response, error)
	CommentType_Create(context.Context, *RequestModel) (*Response, error)
	CommentType_Update(context.Context, *RequestModel) (*Response, error)
	CommentType_Save(context.Context, *RequestModel) (*Response, error)
	CommentType_Delete(context.Context, *Request_Int64) (*Response, error)
	CommentType_Restore(context.Context, *Request_Int64) (*Response, error)
	CommentType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	CommentType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	CommentType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	CommentType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	CommentType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// CompletedMonth
	CompletedMonth_Read(context.Context, *Request_Int64) (*Response, error)
	CompletedMonth_Create(context.Context, *RequestModel) (*Response, error)
	CompletedMonth_Update(context.Context, *RequestModel) (*Response, error)
	CompletedMonth_Save(context.Context, *RequestModel) (*Response, error)
	CompletedMonth_FindByExtID(context.Context, *RequestExtID) (*Response, error)
	CompletedMonth_Delete(context.Context, *Request_Int64) (*Response, error)
	CompletedMonth_Restore(context.Context, *Request_Int64) (*Response, error)
	CompletedMonth_Update_AccountingAreaID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	CompletedMonth_Update_BillingMonth(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	CompletedMonth_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	CompletedMonth_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	CompletedMonth_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	CompletedMonth_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// Connection
	Connection_Read(context.Context, *Request_Int64) (*Response, error)
	Connection_Create(context.Context, *RequestModel) (*Response, error)
	Connection_Update(context.Context, *RequestModel) (*Response, error)
	Connection_Save(context.Context, *RequestModel) (*Response, error)
	Connection_Update_BranchID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Connection_Update_DbName(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Connection_Update_DbScheme(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Connection_Update_IsLegal(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	Connection_Update_Login(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Connection_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Connection_Update_Password(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Connection_Update_Port(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Connection_Update_Server(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Connection_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	Connection_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	Connection_FindBy_BranchID_IsLegal(context.Context, *Request_Int64_Bool) (*Response, error)
	Connection_FindMassBy_BranchID(context.Context, *Request_Int64) (*ResponseMass, error)
	Connection_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// ContractBlackItem
	ContractBlackItem_Read(context.Context, *Request_Int64) (*Response, error)
	ContractBlackItem_Create(context.Context, *RequestModel) (*Response, error)
	ContractBlackItem_Update(context.Context, *RequestModel) (*Response, error)
	ContractBlackItem_Save(context.Context, *RequestModel) (*Response, error)
	ContractBlackItem_Delete(context.Context, *Request_Int64) (*Response, error)
	ContractBlackItem_Restore(context.Context, *Request_Int64) (*Response, error)
	ContractBlackItem_Update_ContractID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	ContractBlackItem_Update_ContractNumber(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	ContractBlackItem_Update_CreatedByID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	ContractBlackItem_Update_DateFrom(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	ContractBlackItem_Update_DateTo(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	ContractBlackItem_Update_EDMSLink(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	ContractBlackItem_Update_ModifiedByID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	ContractBlackItem_Update_Note(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	ContractBlackItem_Update_Reason(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	ContractBlackItem_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	ContractBlackItem_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	ContractBlackItem_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// ContractCategoryType
	ContractCategoryType_Read(context.Context, *Request_Int64) (*Response, error)
	ContractCategoryType_Create(context.Context, *RequestModel) (*Response, error)
	ContractCategoryType_Update(context.Context, *RequestModel) (*Response, error)
	ContractCategoryType_Save(context.Context, *RequestModel) (*Response, error)
	ContractCategoryType_FindByExtID(context.Context, *RequestExtID) (*Response, error)
	ContractCategoryType_Delete(context.Context, *Request_Int64) (*Response, error)
	ContractCategoryType_Restore(context.Context, *Request_Int64) (*Response, error)
	ContractCategoryType_Update_Code(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	ContractCategoryType_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	ContractCategoryType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	ContractCategoryType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	ContractCategoryType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	ContractCategoryType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	ContractCategoryType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// ContractType
	ContractType_Read(context.Context, *Request_Int64) (*Response, error)
	ContractType_Create(context.Context, *RequestModel) (*Response, error)
	ContractType_Update(context.Context, *RequestModel) (*Response, error)
	ContractType_Save(context.Context, *RequestModel) (*Response, error)
	ContractType_Delete(context.Context, *Request_Int64) (*Response, error)
	ContractType_Restore(context.Context, *Request_Int64) (*Response, error)
	ContractType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	ContractType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	ContractType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	ContractType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	ContractType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// ContractWhiteItem
	ContractWhiteItem_Read(context.Context, *Request_Int64) (*Response, error)
	ContractWhiteItem_Create(context.Context, *RequestModel) (*Response, error)
	ContractWhiteItem_Update(context.Context, *RequestModel) (*Response, error)
	ContractWhiteItem_Save(context.Context, *RequestModel) (*Response, error)
	ContractWhiteItem_Delete(context.Context, *Request_Int64) (*Response, error)
	ContractWhiteItem_Restore(context.Context, *Request_Int64) (*Response, error)
	ContractWhiteItem_Update_ContractID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	ContractWhiteItem_Update_ContractNumber(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	ContractWhiteItem_Update_CreatedByID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	ContractWhiteItem_Update_DateFrom(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	ContractWhiteItem_Update_DateTo(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	ContractWhiteItem_Update_EDMSLink(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	ContractWhiteItem_Update_ModifiedByID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	ContractWhiteItem_Update_Note(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	ContractWhiteItem_Update_Reason(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	ContractWhiteItem_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	ContractWhiteItem_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	ContractWhiteItem_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// Contract
	Contract_Read(context.Context, *Request_Int64) (*Response, error)
	Contract_Create(context.Context, *RequestModel) (*Response, error)
	Contract_Update(context.Context, *RequestModel) (*Response, error)
	Contract_Save(context.Context, *RequestModel) (*Response, error)
	Contract_FindByExtID(context.Context, *RequestExtID) (*Response, error)
	Contract_Delete(context.Context, *Request_Int64) (*Response, error)
	Contract_Restore(context.Context, *Request_Int64) (*Response, error)
	Contract_FindBy_Number(context.Context, *RequestString) (*Response, error)
	Contract_Update_BeginAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Contract_Update_BranchID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Contract_Update_CategoryID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Contract_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Contract_Update_CuratorClaimID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Contract_Update_CuratorContractID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Contract_Update_CuratorLegalID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Contract_Update_CuratorPaymentID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Contract_Update_CuratorTechAuditID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Contract_Update_DaysToResolveClaim(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	Contract_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Contract_Update_Email(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Contract_Update_EndAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Contract_Update_ErrorFromStackAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Contract_Update_IndividualID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Contract_Update_IsErrorFromStack(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	Contract_Update_IsIndOrganization(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	Contract_Update_IsOrganization(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	Contract_Update_IsValidEmail(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	Contract_Update_Number(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Contract_Update_OrganizationConsigneeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Contract_Update_OrganizationCustomerID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Contract_Update_OrganizationPayerID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Contract_Update_PostAddress(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Contract_Update_SignAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Contract_Update_Status(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Contract_Update_TerminateAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Contract_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	Contract_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	Contract_Update_IsBelongsRosatom(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	Contract_Update_DepartmentID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Contract_Update_Note(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Contract_Update_SectorID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Contract_Update_TypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Contract_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// ContractsTotalSum
	ContractsTotalSum_Read(context.Context, *Request_Int64) (*Response, error)
	ContractsTotalSum_Create(context.Context, *RequestModel) (*Response, error)
	ContractsTotalSum_Update(context.Context, *RequestModel) (*Response, error)
	ContractsTotalSum_Save(context.Context, *RequestModel) (*Response, error)
	ContractsTotalSum_Delete(context.Context, *Request_Int64) (*Response, error)
	ContractsTotalSum_Restore(context.Context, *Request_Int64) (*Response, error)
	ContractsTotalSum_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	ContractsTotalSum_Update_ContractID(context.Context, *Request_Int64) (*ResponseEmpty, error)
	ContractsTotalSum_Update_MainSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	ContractsTotalSum_Update_PennySum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	ContractsTotalSum_Update_RestrictSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	ContractsTotalSum_Update_StateDutySum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	ContractsTotalSum_Update_TotalSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	ContractsTotalSum_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	ContractsTotalSum_Update_BillsSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	ContractsTotalSum_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// ContractIndividual
	ContractIndividual_Read(context.Context, *Request_Int64_Int64) (*Response, error)
	ContractIndividual_Create(context.Context, *RequestModel) (*Response, error)
	ContractIndividual_Update(context.Context, *RequestModel) (*Response, error)
	ContractIndividual_Save(context.Context, *RequestModel) (*Response, error)
	ContractIndividual_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	ContractIndividual_Update_ContractID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	ContractIndividual_Update_IndividualID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	ContractIndividual_ReadFromCache(context.Context, *Request_Int64_Int64) (*Response, error)
	ContractIndividual_ReadObject(context.Context, *Request_Int64_Int64) (*Response, error)
	// ContractOrganization
	ContractOrganization_Read(context.Context, *Request_Int64_Int64) (*Response, error)
	ContractOrganization_Create(context.Context, *RequestModel) (*Response, error)
	ContractOrganization_Update(context.Context, *RequestModel) (*Response, error)
	ContractOrganization_Save(context.Context, *RequestModel) (*Response, error)
	ContractOrganization_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	ContractOrganization_Update_ContractID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	ContractOrganization_Update_OrganizationID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	ContractOrganization_ReadFromCache(context.Context, *Request_Int64_Int64) (*Response, error)
	ContractOrganization_ReadObject(context.Context, *Request_Int64_Int64) (*Response, error)
	// CourtSuit
	CourtSuit_Read(context.Context, *Request_Int64) (*Response, error)
	CourtSuit_Create(context.Context, *RequestModel) (*Response, error)
	CourtSuit_Update(context.Context, *RequestModel) (*Response, error)
	CourtSuit_Save(context.Context, *RequestModel) (*Response, error)
	CourtSuit_Delete(context.Context, *Request_Int64) (*Response, error)
	CourtSuit_Restore(context.Context, *Request_Int64) (*Response, error)
	CourtSuit_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	CourtSuit_Update_BriefcaseID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	CourtSuit_Update_CourtID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	CourtSuit_Update_LawerID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	CourtSuit_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	CourtSuit_Update_LitigationTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	CourtSuit_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// CourtSuitsFile
	CourtSuitsFile_Read(context.Context, *Request_Int64_Int64) (*Response, error)
	CourtSuitsFile_Create(context.Context, *RequestModel) (*Response, error)
	CourtSuitsFile_Update(context.Context, *RequestModel) (*Response, error)
	CourtSuitsFile_Save(context.Context, *RequestModel) (*Response, error)
	CourtSuitsFile_Delete(context.Context, *Request_Int64_Int64) (*Response, error)
	CourtSuitsFile_Restore(context.Context, *Request_Int64_Int64) (*Response, error)
	CourtSuitsFile_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	CourtSuitsFile_Update_CourtSuitID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	CourtSuitsFile_Update_FileID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	CourtSuitsFile_ReadFromCache(context.Context, *Request_Int64_Int64) (*Response, error)
	CourtSuitsFile_ReadObject(context.Context, *Request_Int64_Int64) (*Response, error)
	CourtSuitsFile_FindMassBy_CourtSuitID(context.Context, *Request_Int64) (*ResponseMass, error)
	CourtSuitsFile_FindMassObjectBy_CourtSuitID(context.Context, *Request_Int64) (*ResponseMass, error)
	// Court
	Court_Read(context.Context, *Request_Int64) (*Response, error)
	Court_Create(context.Context, *RequestModel) (*Response, error)
	Court_Update(context.Context, *RequestModel) (*Response, error)
	Court_Save(context.Context, *RequestModel) (*Response, error)
	Court_Delete(context.Context, *Request_Int64) (*Response, error)
	Court_Restore(context.Context, *Request_Int64) (*Response, error)
	Court_Update_City(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Court_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Court_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Court_Update_OrganizationID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Court_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	Court_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	Court_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// CourtSuitComment
	CourtSuitComment_Read(context.Context, *Request_Int64) (*Response, error)
	CourtSuitComment_Create(context.Context, *RequestModel) (*Response, error)
	CourtSuitComment_Update(context.Context, *RequestModel) (*Response, error)
	CourtSuitComment_Save(context.Context, *RequestModel) (*Response, error)
	CourtSuitComment_Delete(context.Context, *Request_Int64) (*Response, error)
	CourtSuitComment_Restore(context.Context, *Request_Int64) (*Response, error)
	CourtSuitComment_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	CourtSuitComment_Update_CommentTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	CourtSuitComment_Update_CourtSuitID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	CourtSuitComment_Update_EmployeeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	CourtSuitComment_Update_Message(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	CourtSuitComment_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	CourtSuitComment_FindMassBy_CourtSuitID_CommentTypeID(context.Context, *Request_Int64_Int64) (*ResponseMass, error)
	CourtSuitComment_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// DayType
	DayType_Read(context.Context, *Request_Int64) (*Response, error)
	DayType_Create(context.Context, *RequestModel) (*Response, error)
	DayType_Update(context.Context, *RequestModel) (*Response, error)
	DayType_Save(context.Context, *RequestModel) (*Response, error)
	DayType_Delete(context.Context, *Request_Int64) (*Response, error)
	DayType_Restore(context.Context, *Request_Int64) (*Response, error)
	DayType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	DayType_Update_IsWorkDay(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	DayType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	DayType_Update_ShortName(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	DayType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	DayType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	DayType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// DebtType
	DebtType_Read(context.Context, *Request_Int64) (*Response, error)
	DebtType_Create(context.Context, *RequestModel) (*Response, error)
	DebtType_Update(context.Context, *RequestModel) (*Response, error)
	DebtType_Save(context.Context, *RequestModel) (*Response, error)
	DebtType_FindByExtID(context.Context, *RequestExtID) (*Response, error)
	DebtType_Delete(context.Context, *Request_Int64) (*Response, error)
	DebtType_Restore(context.Context, *Request_Int64) (*Response, error)
	DebtType_Update_CodeNSI(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	DebtType_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	DebtType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	DebtType_Update_ExtCode(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	DebtType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	DebtType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	DebtType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	DebtType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// DirectionType
	DirectionType_Read(context.Context, *Request_Int64) (*Response, error)
	DirectionType_Create(context.Context, *RequestModel) (*Response, error)
	DirectionType_Update(context.Context, *RequestModel) (*Response, error)
	DirectionType_Save(context.Context, *RequestModel) (*Response, error)
	DirectionType_Delete(context.Context, *Request_Int64) (*Response, error)
	DirectionType_Restore(context.Context, *Request_Int64) (*Response, error)
	DirectionType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	DirectionType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	DirectionType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	DirectionType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	DirectionType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// DocumentLinkType
	DocumentLinkType_Read(context.Context, *Request_Int64) (*Response, error)
	DocumentLinkType_Create(context.Context, *RequestModel) (*Response, error)
	DocumentLinkType_Update(context.Context, *RequestModel) (*Response, error)
	DocumentLinkType_Save(context.Context, *RequestModel) (*Response, error)
	DocumentLinkType_Delete(context.Context, *Request_Int64) (*Response, error)
	DocumentLinkType_Restore(context.Context, *Request_Int64) (*Response, error)
	DocumentLinkType_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	DocumentLinkType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	DocumentLinkType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	DocumentLinkType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	DocumentLinkType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	DocumentLinkType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// DocumentLink
	DocumentLink_Read(context.Context, *Request_Int64) (*Response, error)
	DocumentLink_Create(context.Context, *RequestModel) (*Response, error)
	DocumentLink_Update(context.Context, *RequestModel) (*Response, error)
	DocumentLink_Save(context.Context, *RequestModel) (*Response, error)
	DocumentLink_FindByExtID(context.Context, *RequestExtID) (*Response, error)
	DocumentLink_Delete(context.Context, *Request_Int64) (*Response, error)
	DocumentLink_Restore(context.Context, *Request_Int64) (*Response, error)
	DocumentLink_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	DocumentLink_Update_ContractID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	DocumentLink_Update_CorrectionSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	DocumentLink_Update_Document1ID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	DocumentLink_Update_Document2ID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	DocumentLink_Update_LinkTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	DocumentLink_Update_DateFrom(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	DocumentLink_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	DocumentLink_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	DocumentLink_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// DocumentLinksRapira
	DocumentLinksRapira_Read(context.Context, *Request_Int64) (*Response, error)
	DocumentLinksRapira_Create(context.Context, *RequestModel) (*Response, error)
	DocumentLinksRapira_Update(context.Context, *RequestModel) (*Response, error)
	DocumentLinksRapira_Save(context.Context, *RequestModel) (*Response, error)
	DocumentLinksRapira_Delete(context.Context, *Request_Int64) (*Response, error)
	DocumentLinksRapira_Restore(context.Context, *Request_Int64) (*Response, error)
	DocumentLinksRapira_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	DocumentLinksRapira_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	DocumentLinksRapira_Update_ContractID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	DocumentLinksRapira_Update_CorrectionSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	DocumentLinksRapira_Update_DateFrom(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	DocumentLinksRapira_Update_Document1ID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	DocumentLinksRapira_Update_Document2ID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	DocumentLinksRapira_Update_LinkTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	DocumentLinksRapira_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	DocumentLinksRapira_ReadObject(context.Context, *Request_Int64) (*Response, error)
	DocumentLinksRapira_Update_ModifiedAtStack(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	DocumentLinksRapira_Update_CreatedAtStack(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	DocumentLinksRapira_FindByExtID(context.Context, *RequestExtIDString) (*Response, error)
	// DocumentRequired
	DocumentRequired_Read(context.Context, *Request_Int64) (*Response, error)
	DocumentRequired_Create(context.Context, *RequestModel) (*Response, error)
	DocumentRequired_Update(context.Context, *RequestModel) (*Response, error)
	DocumentRequired_Save(context.Context, *RequestModel) (*Response, error)
	DocumentRequired_Delete(context.Context, *Request_Int64) (*Response, error)
	DocumentRequired_Restore(context.Context, *Request_Int64) (*Response, error)
	DocumentRequired_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	DocumentRequired_Update_Code(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	DocumentRequired_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	DocumentRequired_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	DocumentRequired_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// DocumentReturnReason
	DocumentReturnReason_Read(context.Context, *Request_Int64) (*Response, error)
	DocumentReturnReason_Create(context.Context, *RequestModel) (*Response, error)
	DocumentReturnReason_Update(context.Context, *RequestModel) (*Response, error)
	DocumentReturnReason_Save(context.Context, *RequestModel) (*Response, error)
	DocumentReturnReason_Delete(context.Context, *Request_Int64) (*Response, error)
	DocumentReturnReason_Restore(context.Context, *Request_Int64) (*Response, error)
	DocumentReturnReason_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	DocumentReturnReason_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	DocumentReturnReason_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	DocumentReturnReason_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	DocumentReturnReason_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// DocumentStatus
	DocumentStatus_Read(context.Context, *Request_Int64) (*Response, error)
	DocumentStatus_Create(context.Context, *RequestModel) (*Response, error)
	DocumentStatus_Update(context.Context, *RequestModel) (*Response, error)
	DocumentStatus_Save(context.Context, *RequestModel) (*Response, error)
	DocumentStatus_Delete(context.Context, *Request_Int64) (*Response, error)
	DocumentStatus_Restore(context.Context, *Request_Int64) (*Response, error)
	DocumentStatus_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	DocumentStatus_Update_Code(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	DocumentStatus_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	DocumentStatus_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	DocumentStatus_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// DocumentType
	DocumentType_Read(context.Context, *Request_Int64) (*Response, error)
	DocumentType_Create(context.Context, *RequestModel) (*Response, error)
	DocumentType_Update(context.Context, *RequestModel) (*Response, error)
	DocumentType_Save(context.Context, *RequestModel) (*Response, error)
	DocumentType_FindByExtID(context.Context, *RequestExtID) (*Response, error)
	DocumentType_Delete(context.Context, *Request_Int64) (*Response, error)
	DocumentType_Restore(context.Context, *Request_Int64) (*Response, error)
	DocumentType_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	DocumentType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	DocumentType_Update_IncomeExpense(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	DocumentType_Update_IsService(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	DocumentType_Update_IsVisible(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	DocumentType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	DocumentType_Update_ShortName(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	DocumentType_Update_Type(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	DocumentType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	DocumentType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	DocumentType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// Document
	Document_Read(context.Context, *Request_Int64) (*Response, error)
	Document_Create(context.Context, *RequestModel) (*Response, error)
	Document_Update(context.Context, *RequestModel) (*Response, error)
	Document_Save(context.Context, *RequestModel) (*Response, error)
	Document_FindByExtID(context.Context, *RequestExtID) (*Response, error)
	Document_Delete(context.Context, *Request_Int64) (*Response, error)
	Document_Restore(context.Context, *Request_Int64) (*Response, error)
	Document_Update_Analytics(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Document_Update_Balance(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	Document_Update_BillKindID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Document_Update_BillingMonth(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Document_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Document_Update_ContractID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Document_Update_Count(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Document_Update_DebtSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	Document_Update_DocumentAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Document_Update_DocumentSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	Document_Update_DocumentTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Document_Update_Note(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Document_Update_Number(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Document_Update_NumberFull(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Document_Update_PayDeadline(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Document_Update_PayFrom(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Document_Update_PayTo(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Document_Update_Payment(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	Document_Update_Reason(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Document_Update_ReversalID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Document_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	Document_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	Document_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// Employee
	Employee_Read(context.Context, *Request_Int64) (*Response, error)
	Employee_Create(context.Context, *RequestModel) (*Response, error)
	Employee_Update(context.Context, *RequestModel) (*Response, error)
	Employee_Save(context.Context, *RequestModel) (*Response, error)
	Employee_Delete(context.Context, *Request_Int64) (*Response, error)
	Employee_Restore(context.Context, *Request_Int64) (*Response, error)
	Employee_FindByExtId(context.Context, *RequestExtID) (*Response, error)
	Employee_FindByLogin(context.Context, *RequestString) (*Response, error)
	Employee_FindByEMail(context.Context, *RequestString) (*Response, error)
	Employee_FindByFIO(context.Context, *RequestString3) (*Response, error)
	Employee_FindByExtID(context.Context, *RequestExtID) (*Response, error)
	Employee_Update_BranchID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Employee_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Employee_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Employee_Update_Email(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Employee_Update_IsActive(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	Employee_Update_Login(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Employee_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Employee_Update_ParentName(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Employee_Update_Phone(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Employee_Update_Photo(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Employee_Update_Position(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Employee_Update_SecondName(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Employee_Update_Tag(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Employee_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	Employee_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	Employee_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// EmployeesHashtag
	EmployeesHashtag_Read(context.Context, *Request_Int64_Int64) (*Response, error)
	EmployeesHashtag_Create(context.Context, *RequestModel) (*Response, error)
	EmployeesHashtag_Update(context.Context, *RequestModel) (*Response, error)
	EmployeesHashtag_Save(context.Context, *RequestModel) (*Response, error)
	EmployeesHashtag_Delete(context.Context, *Request_Int64_Int64) (*Response, error)
	EmployeesHashtag_Restore(context.Context, *Request_Int64_Int64) (*Response, error)
	EmployeesHashtag_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	EmployeesHashtag_Update_EmployeeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	EmployeesHashtag_Update_HashtagID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	EmployeesHashtag_ReadFromCache(context.Context, *Request_Int64_Int64) (*Response, error)
	EmployeesHashtag_FindMassBy_EmployeeID(context.Context, *Request_Int64) (*ResponseMass, error)
	EmployeesHashtag_ReadObject(context.Context, *Request_Int64_Int64) (*Response, error)
	// EventType
	EventType_Read(context.Context, *Request_Int64) (*Response, error)
	EventType_Create(context.Context, *RequestModel) (*Response, error)
	EventType_Update(context.Context, *RequestModel) (*Response, error)
	EventType_Save(context.Context, *RequestModel) (*Response, error)
	EventType_Delete(context.Context, *Request_Int64) (*Response, error)
	EventType_Restore(context.Context, *Request_Int64) (*Response, error)
	EventType_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	EventType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	EventType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	EventType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	EventType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	EventType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// Event
	Event_Read(context.Context, *Request_Int64) (*Response, error)
	Event_Create(context.Context, *RequestModel) (*Response, error)
	Event_Update(context.Context, *RequestModel) (*Response, error)
	Event_Save(context.Context, *RequestModel) (*Response, error)
	Event_Delete(context.Context, *Request_Int64) (*Response, error)
	Event_Restore(context.Context, *Request_Int64) (*Response, error)
	Event_Update_ColorTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Event_Update_CreatedByID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Event_Update_DeletedByID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Event_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Event_Update_EventTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Event_Update_FinishAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Event_Update_IsAllDay(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	Event_Update_ModifiedByID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Event_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Event_Update_NotificationID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Event_Update_PerformerID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Event_Update_PriorityTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Event_Update_RepeatTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Event_Update_StartAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Event_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	Event_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	Event_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// Facsimile
	Facsimile_Read(context.Context, *Request_Int64) (*Response, error)
	Facsimile_Create(context.Context, *RequestModel) (*Response, error)
	Facsimile_Update(context.Context, *RequestModel) (*Response, error)
	Facsimile_Save(context.Context, *RequestModel) (*Response, error)
	Facsimile_Delete(context.Context, *Request_Int64) (*Response, error)
	Facsimile_Restore(context.Context, *Request_Int64) (*Response, error)
	Facsimile_Update_Branch(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Facsimile_Update_Contract(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Facsimile_Update_Department(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Facsimile_Update_Post(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Facsimile_Update_Responsible(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Facsimile_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	Facsimile_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	Facsimile_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// File
	File_Read(context.Context, *Request_Int64) (*Response, error)
	File_Create(context.Context, *RequestModel) (*Response, error)
	File_Update(context.Context, *RequestModel) (*Response, error)
	File_Save(context.Context, *RequestModel) (*Response, error)
	File_Delete(context.Context, *Request_Int64) (*Response, error)
	File_Restore(context.Context, *Request_Int64) (*Response, error)
	File_FindByFileID(context.Context, *RequestString) (*Response, error)
	File_FindByFullName(context.Context, *RequestString) (*Response, error)
	File_FindMassBy_TableNameID_TableRowID(context.Context, *Request_Int64_Int64) (*ResponseMass, error)
	File_FindMassBy_TableNameID_TableRowID_FileTypeID(context.Context, *Request_Int64_Int64_Int64) (*ResponseMass, error)
	File_Update_BranchID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	File_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	File_Update_EmployeeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	File_Update_Extension(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	File_Update_FileID(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	File_Update_FileName(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	File_Update_FileTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	File_Update_FullName(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	File_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	File_Update_Size(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	File_Update_TemplateID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	File_Update_Version(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	File_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	File_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	File_Save_SaveLink_SaveChangeItems(context.Context, *Request_Model_Int64_Int64) (*ResponseInt64, error)
	File_SaveLinkDeleted_SaveChangeItems(context.Context, *Request_Model_Int64_Int64_Int64) (*ResponseEmpty, error)
	File_Update_TableNameID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	File_Update_TableRowID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	File_Update_BucketName(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	File_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// FileChange
	FileChange_Read(context.Context, *Request_Int64) (*Response, error)
	FileChange_Create(context.Context, *RequestModel) (*Response, error)
	FileChange_Update(context.Context, *RequestModel) (*Response, error)
	FileChange_Save(context.Context, *RequestModel) (*Response, error)
	FileChange_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	FileChange_Update_EmployeeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	FileChange_Update_FileID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	FileChange_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	FileChange_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	FileChange_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// FileTemplate
	FileTemplate_Read(context.Context, *Request_Int64) (*Response, error)
	FileTemplate_Create(context.Context, *RequestModel) (*Response, error)
	FileTemplate_Update(context.Context, *RequestModel) (*Response, error)
	FileTemplate_Save(context.Context, *RequestModel) (*Response, error)
	FileTemplate_Delete(context.Context, *Request_Int64) (*Response, error)
	FileTemplate_Restore(context.Context, *Request_Int64) (*Response, error)
	FileTemplate_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	FileTemplate_Update_FileID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	FileTemplate_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	FileTemplate_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	FileTemplate_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	FileTemplate_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// FilesClaim
	FilesClaim_Read(context.Context, *Request_Int64) (*Response, error)
	FilesClaim_Create(context.Context, *RequestModel) (*Response, error)
	FilesClaim_Update(context.Context, *RequestModel) (*Response, error)
	FilesClaim_Save(context.Context, *RequestModel) (*Response, error)
	FilesClaim_Delete(context.Context, *Request_Int64) (*Response, error)
	FilesClaim_Restore(context.Context, *Request_Int64) (*Response, error)
	FilesClaim_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	FilesClaim_Update_CheckOfClaim(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	FilesClaim_Update_Code(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	FilesClaim_Update_ConsumerSignature(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	FilesClaim_Update_DateOfDocument(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	FilesClaim_Update_DateOfDownload(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	FilesClaim_Update_FilePath(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	FilesClaim_Update_Invoice(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	FilesClaim_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	FilesClaim_Update_Number(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	FilesClaim_Update_OriginalDocument(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	FilesClaim_Update_Period(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	FilesClaim_Update_PersonDownloadID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	FilesClaim_Update_SignOfObligation(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	FilesClaim_Update_StatusOfDocument(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	FilesClaim_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	// FileType
	FileType_Read(context.Context, *Request_Int64) (*Response, error)
	FileType_Create(context.Context, *RequestModel) (*Response, error)
	FileType_Update(context.Context, *RequestModel) (*Response, error)
	FileType_Save(context.Context, *RequestModel) (*Response, error)
	FileType_Delete(context.Context, *Request_Int64) (*Response, error)
	FileType_Restore(context.Context, *Request_Int64) (*Response, error)
	FileType_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	FileType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	FileType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	FileType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	FileType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	FileType_Update_CanBeSynced(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	FileType_Update_MimeType(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	FileType_Update_RequireUpload(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	FileType_ReadAll(context.Context, *Request_Empty) (*ResponseMass, error)
	FileType_Update_TableNameID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	FileType_FindBy_Code(context.Context, *Request_Int32) (*Response, error)
	FileType_Update_ExistsBankMark(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	FileType_Update_ExistsSignature(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	FileType_Update_FilenameTemplate(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	FileType_Update_MultipleLoad(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	FileType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// GenderType
	GenderType_Read(context.Context, *Request_Int64) (*Response, error)
	GenderType_Create(context.Context, *RequestModel) (*Response, error)
	GenderType_Update(context.Context, *RequestModel) (*Response, error)
	GenderType_Save(context.Context, *RequestModel) (*Response, error)
	GenderType_Delete(context.Context, *Request_Int64) (*Response, error)
	GenderType_Restore(context.Context, *Request_Int64) (*Response, error)
	GenderType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	GenderType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	GenderType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	GenderType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// Hashtag
	Hashtag_Read(context.Context, *Request_Int64) (*Response, error)
	Hashtag_Create(context.Context, *RequestModel) (*Response, error)
	Hashtag_Update(context.Context, *RequestModel) (*Response, error)
	Hashtag_Save(context.Context, *RequestModel) (*Response, error)
	Hashtag_Delete(context.Context, *Request_Int64) (*Response, error)
	Hashtag_Restore(context.Context, *Request_Int64) (*Response, error)
	Hashtag_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Hashtag_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Hashtag_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	Hashtag_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	Hashtag_ReadAll(context.Context, *Request_Empty) (*ResponseMass, error)
	Hashtag_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// Individual
	Individual_Read(context.Context, *Request_Int64) (*Response, error)
	Individual_Create(context.Context, *RequestModel) (*Response, error)
	Individual_Update(context.Context, *RequestModel) (*Response, error)
	Individual_Save(context.Context, *RequestModel) (*Response, error)
	Individual_FindByExtID(context.Context, *RequestExtID) (*Response, error)
	Individual_Delete(context.Context, *Request_Int64) (*Response, error)
	Individual_Restore(context.Context, *Request_Int64) (*Response, error)
	Individual_Update_BirthDate(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Individual_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Individual_Update_DeathDate(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Individual_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Individual_Update_Email(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Individual_Update_GenderID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Individual_Update_INN(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Individual_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Individual_Update_ParentName(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Individual_Update_Phone(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Individual_Update_SecondName(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Individual_Update_Snils(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Individual_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	Individual_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	Individual_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// InnerNotifyMessage
	InnerNotifyMessage_Read(context.Context, *Request_Int64) (*Response, error)
	InnerNotifyMessage_Create(context.Context, *RequestModel) (*Response, error)
	InnerNotifyMessage_Update(context.Context, *RequestModel) (*Response, error)
	InnerNotifyMessage_Save(context.Context, *RequestModel) (*Response, error)
	InnerNotifyMessage_Delete(context.Context, *Request_Int64) (*Response, error)
	InnerNotifyMessage_Restore(context.Context, *Request_Int64) (*Response, error)
	InnerNotifyMessage_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	InnerNotifyMessage_Update_Body(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	InnerNotifyMessage_Update_ContractID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	InnerNotifyMessage_Update_MessageType(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	InnerNotifyMessage_Update_RecipientEmail(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	InnerNotifyMessage_Update_SendResult(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	InnerNotifyMessage_Update_SenderEmail(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	InnerNotifyMessage_Update_Subject(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	InnerNotifyMessage_Update_Title(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	InnerNotifyMessage_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	InnerNotifyMessage_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// InvoiceDebtTypeStat
	InvoiceDebtTypeStat_Read(context.Context, *Request_Int64) (*Response, error)
	InvoiceDebtTypeStat_Create(context.Context, *RequestModel) (*Response, error)
	InvoiceDebtTypeStat_Update(context.Context, *RequestModel) (*Response, error)
	InvoiceDebtTypeStat_Save(context.Context, *RequestModel) (*Response, error)
	InvoiceDebtTypeStat_Delete(context.Context, *Request_Int64) (*Response, error)
	InvoiceDebtTypeStat_Restore(context.Context, *Request_Int64) (*Response, error)
	InvoiceDebtTypeStat_Update_DebtTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	InvoiceDebtTypeStat_Update_InvoiceID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	InvoiceDebtTypeStat_Update_StateAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	InvoiceDebtTypeStat_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	InvoiceDebtTypeStat_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	InvoiceDebtTypeStat_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// Lawsuit
	Lawsuit_Read(context.Context, *Request_Int64) (*Response, error)
	Lawsuit_Create(context.Context, *RequestModel) (*Response, error)
	Lawsuit_Update(context.Context, *RequestModel) (*Response, error)
	Lawsuit_Save(context.Context, *RequestModel) (*Response, error)
	Lawsuit_Delete(context.Context, *Request_Int64) (*Response, error)
	Lawsuit_Restore(context.Context, *Request_Int64) (*Response, error)
	Lawsuit_FindByExtID(context.Context, *RequestExtID) (*Response, error)
	Lawsuit_FindBy_Number(context.Context, *RequestString) (*Response, error)
	Lawsuit_FindBy_NumberClaim(context.Context, *RequestString) (*Response, error)
	Lawsuit_Update_BranchID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Lawsuit_Update_Chance(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Lawsuit_Update_ClaimAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Lawsuit_Update_ClaimPeriodStr(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Lawsuit_Update_ClaimTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Lawsuit_Update_ClosedAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Lawsuit_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Lawsuit_Update_ContractID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Lawsuit_Update_ControlledAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Lawsuit_Update_CourtID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Lawsuit_Update_CuratorClaimID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Lawsuit_Update_CuratorContractID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Lawsuit_Update_CuratorLegalID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Lawsuit_Update_CuratorPaymentID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Lawsuit_Update_CuratorTechAuditID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Lawsuit_Update_DateFrom(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Lawsuit_Update_DateTo(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Lawsuit_Update_DebtSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	Lawsuit_Update_DebtSumAllTypes(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	Lawsuit_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Lawsuit_Update_ErrorText(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Lawsuit_Update_InvoiceSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	Lawsuit_Update_IsClosed(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	Lawsuit_Update_MainSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	Lawsuit_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Lawsuit_Update_NotifyClaimAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Lawsuit_Update_NotifyClaimChannel(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	Lawsuit_Update_NotifyClaimCode(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	Lawsuit_Update_NotifyClaimDone(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	Lawsuit_Update_NotifyClaimMailingCode(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Lawsuit_Update_NotifyPretrialAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Lawsuit_Update_NotifyPretrialChannel(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	Lawsuit_Update_NotifyPretrialCode(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	Lawsuit_Update_NotifyPretrialDone(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	Lawsuit_Update_NotifyPretrialMailingCode(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Lawsuit_Update_Number(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Lawsuit_Update_NumberClaim(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Lawsuit_Update_NumberTrial(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Lawsuit_Update_PaySum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	Lawsuit_Update_Penalty(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	Lawsuit_Update_Penny(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	Lawsuit_Update_Percent317(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	Lawsuit_Update_Percent395(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	Lawsuit_Update_PretrialAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Lawsuit_Update_ProcessKey(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Lawsuit_Update_ProcessStartedAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Lawsuit_Update_ReasonID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Lawsuit_Update_RestrictSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	Lawsuit_Update_StageAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Lawsuit_Update_StageID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Lawsuit_Update_StateDuty(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	Lawsuit_Update_StatusAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Lawsuit_Update_StatusID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Lawsuit_Update_Tag(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Lawsuit_Update_TypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Lawsuit_Update_UnknownPayments(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	Lawsuit_Update_TrialAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Lawsuit_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	Lawsuit_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	Lawsuit_Update_NotifyPostBarcode(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Lawsuit_Update_NotifyPostReq(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Lawsuit_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// LawsuitComment
	LawsuitComment_Read(context.Context, *Request_Int64) (*Response, error)
	LawsuitComment_Create(context.Context, *RequestModel) (*Response, error)
	LawsuitComment_Update(context.Context, *RequestModel) (*Response, error)
	LawsuitComment_Save(context.Context, *RequestModel) (*Response, error)
	LawsuitComment_Delete(context.Context, *Request_Int64) (*Response, error)
	LawsuitComment_Restore(context.Context, *Request_Int64) (*Response, error)
	LawsuitComment_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	LawsuitComment_Update_CommentTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	LawsuitComment_Update_EmployeeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	LawsuitComment_Update_LawsuitID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	LawsuitComment_Update_Message(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	LawsuitComment_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	LawsuitComment_ReadObject(context.Context, *Request_Int64) (*Response, error)
	LawsuitComment_FindMassBy_LawsuitID_CommentTypeID(context.Context, *Request_Int64_Int64) (*ResponseMass, error)
	// LawsuitsFile
	LawsuitsFile_Read(context.Context, *Request_Int64_Int64) (*Response, error)
	LawsuitsFile_Create(context.Context, *RequestModel) (*Response, error)
	LawsuitsFile_Update(context.Context, *RequestModel) (*Response, error)
	LawsuitsFile_Save(context.Context, *RequestModel) (*Response, error)
	LawsuitsFile_Delete(context.Context, *Request_Int64_Int64) (*Response, error)
	LawsuitsFile_Restore(context.Context, *Request_Int64_Int64) (*Response, error)
	LawsuitsFile_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	LawsuitsFile_Update_FileID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	LawsuitsFile_Update_LawsuitID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	LawsuitsFile_ReadFromCache(context.Context, *Request_Int64_Int64) (*Response, error)
	LawsuitsFile_ReadObject(context.Context, *Request_Int64_Int64) (*Response, error)
	LawsuitsFile_FindMassBy_LawsuitID(context.Context, *Request_Int64) (*ResponseMass, error)
	LawsuitsFile_FindMassObjectBy_LawsuitID(context.Context, *Request_Int64) (*ResponseMass, error)
	// LawsuitInvoiceCorrection
	LawsuitInvoiceCorrection_Read(context.Context, *Request_Int64) (*Response, error)
	LawsuitInvoiceCorrection_Create(context.Context, *RequestModel) (*Response, error)
	LawsuitInvoiceCorrection_Update(context.Context, *RequestModel) (*Response, error)
	LawsuitInvoiceCorrection_Save(context.Context, *RequestModel) (*Response, error)
	LawsuitInvoiceCorrection_Delete(context.Context, *Request_Int64) (*Response, error)
	LawsuitInvoiceCorrection_Restore(context.Context, *Request_Int64) (*Response, error)
	LawsuitInvoiceCorrection_Update_CorrectionDocumentID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	LawsuitInvoiceCorrection_Update_CorrectionDocumentSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	LawsuitInvoiceCorrection_Update_InvoiceDocumentID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	LawsuitInvoiceCorrection_Update_LawsuitID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	LawsuitInvoiceCorrection_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	LawsuitInvoiceCorrection_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	LawsuitInvoiceCorrection_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// LawsuitInvoice
	LawsuitInvoice_Read(context.Context, *Request_Int64) (*Response, error)
	LawsuitInvoice_Create(context.Context, *RequestModel) (*Response, error)
	LawsuitInvoice_Update(context.Context, *RequestModel) (*Response, error)
	LawsuitInvoice_Save(context.Context, *RequestModel) (*Response, error)
	LawsuitInvoice_Delete(context.Context, *Request_Int64) (*Response, error)
	LawsuitInvoice_Restore(context.Context, *Request_Int64) (*Response, error)
	LawsuitInvoice_Update_ClosedAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	LawsuitInvoice_Update_ClosedSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	LawsuitInvoice_Update_Count(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	LawsuitInvoice_Update_DocumentID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	LawsuitInvoice_Update_DocumentSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	LawsuitInvoice_Update_IsClosed(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	LawsuitInvoice_Update_IsCorrective(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	LawsuitInvoice_Update_LawsuitID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	LawsuitInvoice_Update_Sum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	LawsuitInvoice_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	LawsuitInvoice_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	LawsuitInvoice_Update_BriefcaseID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	LawsuitInvoice_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// LawsuitPaymentCorrection
	LawsuitPaymentCorrection_Read(context.Context, *Request_Int64) (*Response, error)
	LawsuitPaymentCorrection_Create(context.Context, *RequestModel) (*Response, error)
	LawsuitPaymentCorrection_Update(context.Context, *RequestModel) (*Response, error)
	LawsuitPaymentCorrection_Save(context.Context, *RequestModel) (*Response, error)
	LawsuitPaymentCorrection_Delete(context.Context, *Request_Int64) (*Response, error)
	LawsuitPaymentCorrection_Restore(context.Context, *Request_Int64) (*Response, error)
	LawsuitPaymentCorrection_Update_CorrectionDocumentID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	LawsuitPaymentCorrection_Update_CorrectionDocumentSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	LawsuitPaymentCorrection_Update_LawsuitID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	LawsuitPaymentCorrection_Update_PaymentDocumentID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	LawsuitPaymentCorrection_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	LawsuitPaymentCorrection_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	LawsuitPaymentCorrection_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// LawsuitPayment
	LawsuitPayment_Read(context.Context, *Request_Int64) (*Response, error)
	LawsuitPayment_Create(context.Context, *RequestModel) (*Response, error)
	LawsuitPayment_Update(context.Context, *RequestModel) (*Response, error)
	LawsuitPayment_Save(context.Context, *RequestModel) (*Response, error)
	LawsuitPayment_Delete(context.Context, *Request_Int64) (*Response, error)
	LawsuitPayment_Restore(context.Context, *Request_Int64) (*Response, error)
	LawsuitPayment_Update_DocumentID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	LawsuitPayment_Update_DocumentSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	LawsuitPayment_Update_InvoiceID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	LawsuitPayment_Update_IsCorrective(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	LawsuitPayment_Update_LawsuitID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	LawsuitPayment_Update_Sum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	LawsuitPayment_Update_LinkedAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	LawsuitPayment_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	LawsuitPayment_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	LawsuitPayment_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// LawsuitReasonType
	LawsuitReasonType_Read(context.Context, *Request_Int64) (*Response, error)
	LawsuitReasonType_Create(context.Context, *RequestModel) (*Response, error)
	LawsuitReasonType_Update(context.Context, *RequestModel) (*Response, error)
	LawsuitReasonType_Save(context.Context, *RequestModel) (*Response, error)
	LawsuitReasonType_Delete(context.Context, *Request_Int64) (*Response, error)
	LawsuitReasonType_Restore(context.Context, *Request_Int64) (*Response, error)
	LawsuitReasonType_Update_Code(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	LawsuitReasonType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	LawsuitReasonType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	LawsuitReasonType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	LawsuitReasonType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	LawsuitReasonType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// LawsuitStageType
	LawsuitStageType_Read(context.Context, *Request_Int64) (*Response, error)
	LawsuitStageType_Create(context.Context, *RequestModel) (*Response, error)
	LawsuitStageType_Update(context.Context, *RequestModel) (*Response, error)
	LawsuitStageType_Save(context.Context, *RequestModel) (*Response, error)
	LawsuitStageType_Delete(context.Context, *Request_Int64) (*Response, error)
	LawsuitStageType_Restore(context.Context, *Request_Int64) (*Response, error)
	LawsuitStageType_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	LawsuitStageType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	LawsuitStageType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	LawsuitStageType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	LawsuitStageType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	LawsuitStageType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// LawsuitStatusState
	LawsuitStatusState_Read(context.Context, *Request_Int64) (*Response, error)
	LawsuitStatusState_Create(context.Context, *RequestModel) (*Response, error)
	LawsuitStatusState_Update(context.Context, *RequestModel) (*Response, error)
	LawsuitStatusState_Save(context.Context, *RequestModel) (*Response, error)
	LawsuitStatusState_Delete(context.Context, *Request_Int64) (*Response, error)
	LawsuitStatusState_Restore(context.Context, *Request_Int64) (*Response, error)
	LawsuitStatusState_FillFromLawsuit(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	LawsuitStatusState_FindDebtSum(context.Context, *Request_Int64_Int64) (*ResponseFloat64, error)
	LawsuitStatusState_FindPreviousStatus(context.Context, *Request_Int64_Int64) (*ResponseInt64, error)
	LawsuitStatusState_Update_CommentID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	LawsuitStatusState_Update_InvoiceSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	LawsuitStatusState_Update_LawsuitID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	LawsuitStatusState_Update_MainSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	LawsuitStatusState_Update_PaySum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	LawsuitStatusState_Update_PenaltySum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	LawsuitStatusState_Update_PennySum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	LawsuitStatusState_Update_RestrictSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	LawsuitStatusState_Update_StateDutySum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	LawsuitStatusState_Update_StatusAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	LawsuitStatusState_Update_StatusID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	LawsuitStatusState_Update_Tag(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	LawsuitStatusState_Update_TotalDebt(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	LawsuitStatusState_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	LawsuitStatusState_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	LawsuitStatusState_Update_ContractDebtSumAllTypes(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	LawsuitStatusState_Update_BillsTotalSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	LawsuitStatusState_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// LawsuitStatusType
	LawsuitStatusType_Read(context.Context, *Request_Int64) (*Response, error)
	LawsuitStatusType_Create(context.Context, *RequestModel) (*Response, error)
	LawsuitStatusType_Update(context.Context, *RequestModel) (*Response, error)
	LawsuitStatusType_Save(context.Context, *RequestModel) (*Response, error)
	LawsuitStatusType_Delete(context.Context, *Request_Int64) (*Response, error)
	LawsuitStatusType_Restore(context.Context, *Request_Int64) (*Response, error)
	LawsuitStatusType_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	LawsuitStatusType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	LawsuitStatusType_Update_IsClosed(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	LawsuitStatusType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	LawsuitStatusType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	LawsuitStatusType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	LawsuitStatusType_Update_ColorID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	LawsuitStatusType_Update_IsError(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	LawsuitStatusType_Update_IsTech(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	LawsuitStatusType_Update_ViewSort(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	LawsuitStatusType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// LawsuitType
	LawsuitType_Read(context.Context, *Request_Int64) (*Response, error)
	LawsuitType_Create(context.Context, *RequestModel) (*Response, error)
	LawsuitType_Update(context.Context, *RequestModel) (*Response, error)
	LawsuitType_Save(context.Context, *RequestModel) (*Response, error)
	LawsuitType_Delete(context.Context, *Request_Int64) (*Response, error)
	LawsuitType_Restore(context.Context, *Request_Int64) (*Response, error)
	LawsuitType_Update_Code(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	LawsuitType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	LawsuitType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	LawsuitType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	LawsuitType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	LawsuitType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// LegalType
	LegalType_Read(context.Context, *Request_Int64) (*Response, error)
	LegalType_Create(context.Context, *RequestModel) (*Response, error)
	LegalType_Update(context.Context, *RequestModel) (*Response, error)
	LegalType_Save(context.Context, *RequestModel) (*Response, error)
	LegalType_Delete(context.Context, *Request_Int64) (*Response, error)
	LegalType_Restore(context.Context, *Request_Int64) (*Response, error)
	LegalType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	LegalType_Update_IsIndividual(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	LegalType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	LegalType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	LegalType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	LegalType_ReadAll(context.Context, *Request_Empty) (*ResponseMass, error)
	LegalType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// LitigationType
	LitigationType_Read(context.Context, *Request_Int64) (*Response, error)
	LitigationType_Create(context.Context, *RequestModel) (*Response, error)
	LitigationType_Update(context.Context, *RequestModel) (*Response, error)
	LitigationType_Save(context.Context, *RequestModel) (*Response, error)
	LitigationType_Delete(context.Context, *Request_Int64) (*Response, error)
	LitigationType_Restore(context.Context, *Request_Int64) (*Response, error)
	LitigationType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	LitigationType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	LitigationType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	LitigationType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	LitigationType_ReadAll(context.Context, *Request_Empty) (*ResponseMass, error)
	LitigationType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// MessageAttachement
	MessageAttachement_Read(context.Context, *Request_Int64) (*Response, error)
	MessageAttachement_Create(context.Context, *RequestModel) (*Response, error)
	MessageAttachement_Update(context.Context, *RequestModel) (*Response, error)
	MessageAttachement_Save(context.Context, *RequestModel) (*Response, error)
	MessageAttachement_Delete(context.Context, *Request_Int64) (*Response, error)
	MessageAttachement_Restore(context.Context, *Request_Int64) (*Response, error)
	MessageAttachement_Update_FilesID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	MessageAttachement_Update_MessagesID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	MessageAttachement_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	MessageAttachement_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	MessageAttachement_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// MessageSendStatus
	MessageSendStatus_Read(context.Context, *Request_Int64) (*Response, error)
	MessageSendStatus_Create(context.Context, *RequestModel) (*Response, error)
	MessageSendStatus_Update(context.Context, *RequestModel) (*Response, error)
	MessageSendStatus_Save(context.Context, *RequestModel) (*Response, error)
	MessageSendStatus_Delete(context.Context, *Request_Int64) (*Response, error)
	MessageSendStatus_Restore(context.Context, *Request_Int64) (*Response, error)
	MessageSendStatus_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	MessageSendStatus_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	MessageSendStatus_Update_FormalName(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	MessageSendStatus_Update_IsDelivered(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	MessageSendStatus_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	MessageSendStatus_Update_NotifierID(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	MessageSendStatus_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	MessageSendStatus_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	MessageSendStatus_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// MessageType
	MessageType_Read(context.Context, *Request_Int64) (*Response, error)
	MessageType_Create(context.Context, *RequestModel) (*Response, error)
	MessageType_Update(context.Context, *RequestModel) (*Response, error)
	MessageType_Save(context.Context, *RequestModel) (*Response, error)
	MessageType_Delete(context.Context, *Request_Int64) (*Response, error)
	MessageType_Restore(context.Context, *Request_Int64) (*Response, error)
	MessageType_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	MessageType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	MessageType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	MessageType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	MessageType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	MessageType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// Message
	Message_Read(context.Context, *Request_Int64) (*Response, error)
	Message_Create(context.Context, *RequestModel) (*Response, error)
	Message_Update(context.Context, *RequestModel) (*Response, error)
	Message_Save(context.Context, *RequestModel) (*Response, error)
	Message_Delete(context.Context, *Request_Int64) (*Response, error)
	Message_Restore(context.Context, *Request_Int64) (*Response, error)
	Message_FindBy_LawsuitID_MessageTypeID(context.Context, *Request_Int64_Int64) (*Response, error)
	Message_Update_ChannelTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Message_Update_ContactFrom(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Message_Update_ContactTo(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Message_Update_DirectionTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Message_Update_EmployeeIdFrom(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Message_Update_EmployeeIdTo(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Message_Update_ExtCode(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Message_Update_LawsuitID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Message_Update_MailingCode(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Message_Update_MessageFileID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Message_Update_MessageTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Message_Update_ReceiveResult(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Message_Update_ReceiveStatusID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Message_Update_ReceivedAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Message_Update_SendResult(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Message_Update_SendStatusID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Message_Update_SentAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Message_Update_Topic(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Message_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	Message_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	Message_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// NotificationType
	NotificationType_Read(context.Context, *Request_Int64) (*Response, error)
	NotificationType_Create(context.Context, *RequestModel) (*Response, error)
	NotificationType_Update(context.Context, *RequestModel) (*Response, error)
	NotificationType_Save(context.Context, *RequestModel) (*Response, error)
	NotificationType_Delete(context.Context, *Request_Int64) (*Response, error)
	NotificationType_Restore(context.Context, *Request_Int64) (*Response, error)
	NotificationType_Update_BeforeTimeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	NotificationType_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	NotificationType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	NotificationType_Update_InTime(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	NotificationType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	NotificationType_Update_Value(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	NotificationType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	NotificationType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	NotificationType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// Organization
	Organization_Read(context.Context, *Request_Int64) (*Response, error)
	Organization_Create(context.Context, *RequestModel) (*Response, error)
	Organization_Update(context.Context, *RequestModel) (*Response, error)
	Organization_Save(context.Context, *RequestModel) (*Response, error)
	Organization_Delete(context.Context, *Request_Int64) (*Response, error)
	Organization_Restore(context.Context, *Request_Int64) (*Response, error)
	Organization_FindByInnKpp(context.Context, *RequestInnKpp) (*Response, error)
	Organization_FindBy_InnKppLegaltype(context.Context, *Request_String_String_Int64) (*Response, error)
	Organization_FindByExtId(context.Context, *RequestExtID) (*Response, error)
	Organization_FindByExtID(context.Context, *RequestExtID) (*Response, error)
	Organization_Update_BankruptAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Organization_Update_BookkeeperName(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Organization_Update_CategoryID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Organization_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Organization_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Organization_Update_Email(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Organization_Update_FullName(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Organization_Update_INN(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Organization_Update_IsActive(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	Organization_Update_IsBankrupt(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	Organization_Update_IsLiquidated(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	Organization_Update_KPP(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Organization_Update_LegalAddress(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Organization_Update_LegalEmail(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Organization_Update_LegalTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Organization_Update_LiquidateAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Organization_Update_ManagerName(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Organization_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Organization_Update_NSIFlat(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Organization_Update_NSIFlatID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Organization_Update_NSIID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Organization_Update_OGRN(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Organization_Update_OKATO(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Organization_Update_OKPO(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Organization_Update_Phone(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Organization_Update_PostAddress(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Organization_Update_PostAddressID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Organization_Update_RegistrationAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	Organization_Update_StateCode(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Organization_Update_StateID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	Organization_Update_WWW(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Organization_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	Organization_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	Organization_Update_LegalAddressStack(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	Organization_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// OrganizationsFile
	OrganizationsFile_Read(context.Context, *Request_Int64_Int64) (*Response, error)
	OrganizationsFile_Create(context.Context, *RequestModel) (*Response, error)
	OrganizationsFile_Update(context.Context, *RequestModel) (*Response, error)
	OrganizationsFile_Save(context.Context, *RequestModel) (*Response, error)
	OrganizationsFile_Delete(context.Context, *Request_Int64_Int64) (*Response, error)
	OrganizationsFile_Restore(context.Context, *Request_Int64_Int64) (*Response, error)
	OrganizationsFile_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	OrganizationsFile_Update_FileID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	OrganizationsFile_Update_OrganizationID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	OrganizationsFile_ReadFromCache(context.Context, *Request_Int64_Int64) (*Response, error)
	OrganizationsFile_ReadObject(context.Context, *Request_Int64_Int64) (*Response, error)
	// OrganizationCasebook
	OrganizationCasebook_Read(context.Context, *Request_Int64) (*Response, error)
	OrganizationCasebook_Create(context.Context, *RequestModel) (*Response, error)
	OrganizationCasebook_Update(context.Context, *RequestModel) (*Response, error)
	OrganizationCasebook_Save(context.Context, *RequestModel) (*Response, error)
	OrganizationCasebook_Delete(context.Context, *Request_Int64) (*Response, error)
	OrganizationCasebook_Restore(context.Context, *Request_Int64) (*Response, error)
	OrganizationCasebook_FindByInnKpp(context.Context, *RequestInnKpp) (*Response, error)
	OrganizationCasebook_FindByInn(context.Context, *RequestString) (*Response, error)
	OrganizationCasebook_FindByOrganizationId(context.Context, *Request_Int64) (*Response, error)
	OrganizationCasebook_Update_INN(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	OrganizationCasebook_Update_JSONFileID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	OrganizationCasebook_Update_JSONUpdatedAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	OrganizationCasebook_Update_OrganizationID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	OrganizationCasebook_Update_PDFFileID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	OrganizationCasebook_Update_PDFUpdatedAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	OrganizationCasebook_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	OrganizationCasebook_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	OrganizationCasebook_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// OrganizationCategoryType
	OrganizationCategoryType_Read(context.Context, *Request_Int64) (*Response, error)
	OrganizationCategoryType_Create(context.Context, *RequestModel) (*Response, error)
	OrganizationCategoryType_Update(context.Context, *RequestModel) (*Response, error)
	OrganizationCategoryType_Save(context.Context, *RequestModel) (*Response, error)
	OrganizationCategoryType_FindByExtID(context.Context, *RequestExtID) (*Response, error)
	OrganizationCategoryType_Delete(context.Context, *Request_Int64) (*Response, error)
	OrganizationCategoryType_Restore(context.Context, *Request_Int64) (*Response, error)
	OrganizationCategoryType_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	OrganizationCategoryType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	OrganizationCategoryType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	OrganizationCategoryType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	OrganizationCategoryType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	OrganizationCategoryType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// OrganizationStateType
	OrganizationStateType_Read(context.Context, *Request_Int64) (*Response, error)
	OrganizationStateType_Create(context.Context, *RequestModel) (*Response, error)
	OrganizationStateType_Update(context.Context, *RequestModel) (*Response, error)
	OrganizationStateType_Save(context.Context, *RequestModel) (*Response, error)
	OrganizationStateType_Delete(context.Context, *Request_Int64) (*Response, error)
	OrganizationStateType_Restore(context.Context, *Request_Int64) (*Response, error)
	OrganizationStateType_Update_ActionIndividual(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	OrganizationStateType_Update_ActionOrganization(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	OrganizationStateType_Update_Code(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	OrganizationStateType_Update_Color(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	OrganizationStateType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	OrganizationStateType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	OrganizationStateType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	OrganizationStateType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	OrganizationStateType_Update_IsBankrupt(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	OrganizationStateType_Update_IsLiquidated(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error)
	OrganizationStateType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// PaymentDay
	PaymentDay_Read(context.Context, *Request_Int64) (*Response, error)
	PaymentDay_Create(context.Context, *RequestModel) (*Response, error)
	PaymentDay_Update(context.Context, *RequestModel) (*Response, error)
	PaymentDay_Save(context.Context, *RequestModel) (*Response, error)
	PaymentDay_FindByExtID(context.Context, *RequestExtID) (*Response, error)
	PaymentDay_Delete(context.Context, *Request_Int64) (*Response, error)
	PaymentDay_Restore(context.Context, *Request_Int64) (*Response, error)
	PaymentDay_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	PaymentDay_Update_ContractID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	PaymentDay_Update_DateFrom(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	PaymentDay_Update_DateTo(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	PaymentDay_Update_Day(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	PaymentDay_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	PaymentDay_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	PaymentDay_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// PaymentSchedule
	PaymentSchedule_Read(context.Context, *Request_Int64) (*Response, error)
	PaymentSchedule_Create(context.Context, *RequestModel) (*Response, error)
	PaymentSchedule_Update(context.Context, *RequestModel) (*Response, error)
	PaymentSchedule_Save(context.Context, *RequestModel) (*Response, error)
	PaymentSchedule_FindByExtID(context.Context, *RequestExtID) (*Response, error)
	PaymentSchedule_Delete(context.Context, *Request_Int64) (*Response, error)
	PaymentSchedule_Restore(context.Context, *Request_Int64) (*Response, error)
	PaymentSchedule_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	PaymentSchedule_Update_ContractID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	PaymentSchedule_Update_DateFrom(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	PaymentSchedule_Update_DateTo(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	PaymentSchedule_Update_Day(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	PaymentSchedule_Update_Percent(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	PaymentSchedule_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	PaymentSchedule_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	PaymentSchedule_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// PenaltyCalculationItem
	PenaltyCalculationItem_Read(context.Context, *Request_Int64) (*Response, error)
	PenaltyCalculationItem_Create(context.Context, *RequestModel) (*Response, error)
	PenaltyCalculationItem_Update(context.Context, *RequestModel) (*Response, error)
	PenaltyCalculationItem_Save(context.Context, *RequestModel) (*Response, error)
	PenaltyCalculationItem_FindByExtID(context.Context, *RequestExtID) (*Response, error)
	PenaltyCalculationItem_Delete(context.Context, *Request_Int64) (*Response, error)
	PenaltyCalculationItem_Restore(context.Context, *Request_Int64) (*Response, error)
	PenaltyCalculationItem_Update_BillingMonth(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	PenaltyCalculationItem_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	PenaltyCalculationItem_Update_ContractID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	PenaltyCalculationItem_Update_DateFrom(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	PenaltyCalculationItem_Update_DateTo(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	PenaltyCalculationItem_Update_DaysCount(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	PenaltyCalculationItem_Update_DebtSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	PenaltyCalculationItem_Update_DebtorCategoryID(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	PenaltyCalculationItem_Update_Dividend(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	PenaltyCalculationItem_Update_Divider(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	PenaltyCalculationItem_Update_DocumentInvoiceID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	PenaltyCalculationItem_Update_Flags(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	PenaltyCalculationItem_Update_PaymentDueAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	PenaltyCalculationItem_Update_PenaltyCalculationItemsTypeID(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	PenaltyCalculationItem_Update_Percent(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	PenaltyCalculationItem_Update_Sum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	PenaltyCalculationItem_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	PenaltyCalculationItem_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	PenaltyCalculationItem_Update_DebtCollectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	PenaltyCalculationItem_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// PenaltyCalculationItemsType
	PenaltyCalculationItemsType_Read(context.Context, *Request_Int64) (*Response, error)
	PenaltyCalculationItemsType_Create(context.Context, *RequestModel) (*Response, error)
	PenaltyCalculationItemsType_Update(context.Context, *RequestModel) (*Response, error)
	PenaltyCalculationItemsType_Save(context.Context, *RequestModel) (*Response, error)
	PenaltyCalculationItemsType_Delete(context.Context, *Request_Int64) (*Response, error)
	PenaltyCalculationItemsType_Restore(context.Context, *Request_Int64) (*Response, error)
	PenaltyCalculationItemsType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	PenaltyCalculationItemsType_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	PenaltyCalculationItemsType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	PenaltyCalculationItemsType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	PenaltyCalculationItemsType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	PenaltyCalculationItemsType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// PriorityType
	PriorityType_Read(context.Context, *Request_Int64) (*Response, error)
	PriorityType_Create(context.Context, *RequestModel) (*Response, error)
	PriorityType_Update(context.Context, *RequestModel) (*Response, error)
	PriorityType_Save(context.Context, *RequestModel) (*Response, error)
	PriorityType_Delete(context.Context, *Request_Int64) (*Response, error)
	PriorityType_Restore(context.Context, *Request_Int64) (*Response, error)
	PriorityType_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	PriorityType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	PriorityType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	PriorityType_Update_Value(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	PriorityType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	PriorityType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	PriorityType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// RepeatType
	RepeatType_Read(context.Context, *Request_Int64) (*Response, error)
	RepeatType_Create(context.Context, *RequestModel) (*Response, error)
	RepeatType_Update(context.Context, *RequestModel) (*Response, error)
	RepeatType_Save(context.Context, *RequestModel) (*Response, error)
	RepeatType_Delete(context.Context, *Request_Int64) (*Response, error)
	RepeatType_Restore(context.Context, *Request_Int64) (*Response, error)
	RepeatType_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	RepeatType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	RepeatType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	RepeatType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	RepeatType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	RepeatType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// ServiceProvider
	ServiceProvider_Read(context.Context, *Request_Int64) (*Response, error)
	ServiceProvider_Create(context.Context, *RequestModel) (*Response, error)
	ServiceProvider_Update(context.Context, *RequestModel) (*Response, error)
	ServiceProvider_Save(context.Context, *RequestModel) (*Response, error)
	ServiceProvider_FindByExtID(context.Context, *RequestExtID) (*Response, error)
	ServiceProvider_Delete(context.Context, *Request_Int64) (*Response, error)
	ServiceProvider_Restore(context.Context, *Request_Int64) (*Response, error)
	ServiceProvider_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	ServiceProvider_Update_DateFrom(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	ServiceProvider_Update_DateTo(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	ServiceProvider_Update_OrganizationID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	ServiceProvider_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	ServiceProvider_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	ServiceProvider_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// ServiceType
	ServiceType_Read(context.Context, *Request_Int64) (*Response, error)
	ServiceType_Create(context.Context, *RequestModel) (*Response, error)
	ServiceType_Update(context.Context, *RequestModel) (*Response, error)
	ServiceType_Save(context.Context, *RequestModel) (*Response, error)
	ServiceType_FindByExtID(context.Context, *RequestExtID) (*Response, error)
	ServiceType_Delete(context.Context, *Request_Int64) (*Response, error)
	ServiceType_Restore(context.Context, *Request_Int64) (*Response, error)
	ServiceType_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	ServiceType_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	ServiceType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	ServiceType_Update_FullName(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	ServiceType_Update_Measure(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	ServiceType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	ServiceType_Update_ServiceProviderID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	ServiceType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	ServiceType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	ServiceType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// StateDuty
	StateDuty_Read(context.Context, *Request_Int64) (*Response, error)
	StateDuty_Create(context.Context, *RequestModel) (*Response, error)
	StateDuty_Update(context.Context, *RequestModel) (*Response, error)
	StateDuty_Save(context.Context, *RequestModel) (*Response, error)
	StateDuty_Delete(context.Context, *Request_Int64) (*Response, error)
	StateDuty_Restore(context.Context, *Request_Int64) (*Response, error)
	StateDuty_Update_CourtID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	StateDuty_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	StateDuty_Update_LawsuitID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	StateDuty_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	StateDuty_Update_RequestDate(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	StateDuty_Update_RequestNumber(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	StateDuty_Update_Sum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	StateDuty_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	StateDuty_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	StateDuty_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// StateDutyConsumption
	StateDutyConsumption_Read(context.Context, *Request_Int64) (*Response, error)
	StateDutyConsumption_Create(context.Context, *RequestModel) (*Response, error)
	StateDutyConsumption_Update(context.Context, *RequestModel) (*Response, error)
	StateDutyConsumption_Save(context.Context, *RequestModel) (*Response, error)
	StateDutyConsumption_Delete(context.Context, *Request_Int64) (*Response, error)
	StateDutyConsumption_Restore(context.Context, *Request_Int64) (*Response, error)
	StateDutyConsumption_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	StateDutyConsumption_Update_CourtSuitID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	StateDutyConsumption_Update_StateDutyPaymentsPaymentID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	StateDutyConsumption_Update_StateDutyPaymentsReturnID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	StateDutyConsumption_Update_StateDutyRegistryID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	StateDutyConsumption_Update_StateDutySum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	StateDutyConsumption_Update_StatusID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	StateDutyConsumption_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	StateDutyConsumption_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// StateDutyConsumptionsFile
	StateDutyConsumptionsFile_Read(context.Context, *Request_Int64_Int64) (*Response, error)
	StateDutyConsumptionsFile_Create(context.Context, *RequestModel) (*Response, error)
	StateDutyConsumptionsFile_Update(context.Context, *RequestModel) (*Response, error)
	StateDutyConsumptionsFile_Save(context.Context, *RequestModel) (*Response, error)
	StateDutyConsumptionsFile_Delete(context.Context, *Request_Int64_Int64) (*Response, error)
	StateDutyConsumptionsFile_Restore(context.Context, *Request_Int64_Int64) (*Response, error)
	StateDutyConsumptionsFile_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	StateDutyConsumptionsFile_Update_ConsumptionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	StateDutyConsumptionsFile_Update_FileID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	StateDutyConsumptionsFile_ReadFromCache(context.Context, *Request_Int64_Int64) (*Response, error)
	StateDutyConsumptionsFile_ReadObject(context.Context, *Request_Int64_Int64) (*Response, error)
	// StateDutyPaymentType
	StateDutyPaymentType_Read(context.Context, *Request_Int64) (*Response, error)
	StateDutyPaymentType_Create(context.Context, *RequestModel) (*Response, error)
	StateDutyPaymentType_Update(context.Context, *RequestModel) (*Response, error)
	StateDutyPaymentType_Save(context.Context, *RequestModel) (*Response, error)
	StateDutyPaymentType_Delete(context.Context, *Request_Int64) (*Response, error)
	StateDutyPaymentType_Restore(context.Context, *Request_Int64) (*Response, error)
	StateDutyPaymentType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	StateDutyPaymentType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	StateDutyPaymentType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	StateDutyPaymentType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	StateDutyPaymentType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// StateDutyPayment
	StateDutyPayment_Read(context.Context, *Request_Int64) (*Response, error)
	StateDutyPayment_Create(context.Context, *RequestModel) (*Response, error)
	StateDutyPayment_Update(context.Context, *RequestModel) (*Response, error)
	StateDutyPayment_Save(context.Context, *RequestModel) (*Response, error)
	StateDutyPayment_Delete(context.Context, *Request_Int64) (*Response, error)
	StateDutyPayment_Restore(context.Context, *Request_Int64) (*Response, error)
	StateDutyPayment_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	StateDutyPayment_Update_BranchID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	StateDutyPayment_Update_CourtID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	StateDutyPayment_Update_DocumentSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error)
	StateDutyPayment_Update_FileID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	StateDutyPayment_Update_Number(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	StateDutyPayment_Update_PaymentDate(context.Context, *Request_Int64_Date) (*ResponseEmpty, error)
	StateDutyPayment_Update_StateDutyPaymentTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	StateDutyPayment_Update_TaxOfficeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	StateDutyPayment_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	StateDutyPayment_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// StateDutyRegistry
	StateDutyRegistry_Read(context.Context, *Request_Int64) (*Response, error)
	StateDutyRegistry_Create(context.Context, *RequestModel) (*Response, error)
	StateDutyRegistry_Update(context.Context, *RequestModel) (*Response, error)
	StateDutyRegistry_Save(context.Context, *RequestModel) (*Response, error)
	StateDutyRegistry_Delete(context.Context, *Request_Int64) (*Response, error)
	StateDutyRegistry_Restore(context.Context, *Request_Int64) (*Response, error)
	StateDutyRegistry_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	StateDutyRegistry_Update_BranchID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	StateDutyRegistry_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	StateDutyRegistry_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// StateDutyStatus
	StateDutyStatus_Read(context.Context, *Request_Int64) (*Response, error)
	StateDutyStatus_Create(context.Context, *RequestModel) (*Response, error)
	StateDutyStatus_Update(context.Context, *RequestModel) (*Response, error)
	StateDutyStatus_Save(context.Context, *RequestModel) (*Response, error)
	StateDutyStatus_Delete(context.Context, *Request_Int64) (*Response, error)
	StateDutyStatus_Restore(context.Context, *Request_Int64) (*Response, error)
	StateDutyStatus_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	StateDutyStatus_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	StateDutyStatus_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	StateDutyStatus_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	StateDutyStatus_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// TableName
	TableName_Read(context.Context, *Request_Int64) (*Response, error)
	TableName_Create(context.Context, *RequestModel) (*Response, error)
	TableName_Update(context.Context, *RequestModel) (*Response, error)
	TableName_Save(context.Context, *RequestModel) (*Response, error)
	TableName_Delete(context.Context, *Request_Int64) (*Response, error)
	TableName_Restore(context.Context, *Request_Int64) (*Response, error)
	TableName_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	TableName_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	TableName_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	TableName_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	TableName_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// TaxOffice
	TaxOffice_Read(context.Context, *Request_Int64) (*Response, error)
	TaxOffice_Create(context.Context, *RequestModel) (*Response, error)
	TaxOffice_Update(context.Context, *RequestModel) (*Response, error)
	TaxOffice_Save(context.Context, *RequestModel) (*Response, error)
	TaxOffice_Delete(context.Context, *Request_Int64) (*Response, error)
	TaxOffice_Restore(context.Context, *Request_Int64) (*Response, error)
	TaxOffice_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	TaxOffice_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	TaxOffice_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	TaxOffice_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	TaxOffice_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// UserRole
	UserRole_Read(context.Context, *Request_Int64) (*Response, error)
	UserRole_Create(context.Context, *RequestModel) (*Response, error)
	UserRole_Update(context.Context, *RequestModel) (*Response, error)
	UserRole_Save(context.Context, *RequestModel) (*Response, error)
	UserRole_Delete(context.Context, *Request_Int64) (*Response, error)
	UserRole_Restore(context.Context, *Request_Int64) (*Response, error)
	UserRole_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	UserRole_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	UserRole_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	UserRole_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	UserRole_ReadAll(context.Context, *Request_Empty) (*ResponseMass, error)
	UserRole_ReadObject(context.Context, *Request_Int64) (*Response, error)
	// UserRolesMembership
	UserRolesMembership_Read(context.Context, *Request_Int64_Int64) (*Response, error)
	UserRolesMembership_Create(context.Context, *RequestModel) (*Response, error)
	UserRolesMembership_Update(context.Context, *RequestModel) (*Response, error)
	UserRolesMembership_Save(context.Context, *RequestModel) (*Response, error)
	UserRolesMembership_Delete(context.Context, *Request_Int64_Int64) (*Response, error)
	UserRolesMembership_Restore(context.Context, *Request_Int64_Int64) (*Response, error)
	UserRolesMembership_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	UserRolesMembership_Update_EmployeeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	UserRolesMembership_Update_UserRoleID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error)
	UserRolesMembership_ReadFromCache(context.Context, *Request_Int64_Int64) (*Response, error)
	UserRolesMembership_FindMassBy_EmployeeID(context.Context, *Request_Int64) (*ResponseMass, error)
	UserRolesMembership_FindMassBy_UserRoleID(context.Context, *Request_Int64) (*ResponseMass, error)
	UserRolesMembership_ReadObject(context.Context, *Request_Int64_Int64) (*Response, error)
	// WhiteListReasonType
	WhiteListReasonType_Read(context.Context, *Request_Int64) (*Response, error)
	WhiteListReasonType_Create(context.Context, *RequestModel) (*Response, error)
	WhiteListReasonType_Update(context.Context, *RequestModel) (*Response, error)
	WhiteListReasonType_Save(context.Context, *RequestModel) (*Response, error)
	WhiteListReasonType_Delete(context.Context, *Request_Int64) (*Response, error)
	WhiteListReasonType_Restore(context.Context, *Request_Int64) (*Response, error)
	WhiteListReasonType_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error)
	WhiteListReasonType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	WhiteListReasonType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error)
	WhiteListReasonType_ReadFromCache(context.Context, *Request_Int64) (*Response, error)
	WhiteListReasonType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error)
	WhiteListReasonType_ReadObject(context.Context, *Request_Int64) (*Response, error)
	mustEmbedUnimplementedPostgresMigrateServer()
}

// UnimplementedPostgresMigrateServer must be embedded to have forward compatible implementations.
type UnimplementedPostgresMigrateServer struct {
}

func (UnimplementedPostgresMigrateServer) PostgresMigratePgAttribute_Read(context.Context, *Request_String_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgAttribute_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgAttribute_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgAttribute_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgAttribute_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgAttribute_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgAttribute_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgAttribute_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgAttribute_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgAttribute_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgAttribute_Update_Attalign(context.Context, *Request_String_Int64_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgAttribute_Update_Attalign not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgAttribute_Update_Attbyval(context.Context, *Request_String_Int64_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgAttribute_Update_Attbyval not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgAttribute_Update_Attcacheoff(context.Context, *Request_String_Int64_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgAttribute_Update_Attcacheoff not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgAttribute_Update_Attcollation(context.Context, *Request_String_Int64_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgAttribute_Update_Attcollation not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgAttribute_Update_Attgenerated(context.Context, *Request_String_Int64_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgAttribute_Update_Attgenerated not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgAttribute_Update_Atthasdef(context.Context, *Request_String_Int64_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgAttribute_Update_Atthasdef not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgAttribute_Update_Atthasmissing(context.Context, *Request_String_Int64_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgAttribute_Update_Atthasmissing not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgAttribute_Update_Attidentity(context.Context, *Request_String_Int64_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgAttribute_Update_Attidentity not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgAttribute_Update_Attinhcount(context.Context, *Request_String_Int64_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgAttribute_Update_Attinhcount not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgAttribute_Update_Attisdropped(context.Context, *Request_String_Int64_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgAttribute_Update_Attisdropped not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgAttribute_Update_Attislocal(context.Context, *Request_String_Int64_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgAttribute_Update_Attislocal not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgAttribute_Update_Attlen(context.Context, *Request_String_Int64_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgAttribute_Update_Attlen not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgAttribute_Update_Attname(context.Context, *Request_String_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgAttribute_Update_Attname not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgAttribute_Update_Attndims(context.Context, *Request_String_Int64_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgAttribute_Update_Attndims not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgAttribute_Update_Attnotnull(context.Context, *Request_String_Int64_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgAttribute_Update_Attnotnull not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgAttribute_Update_Attnum(context.Context, *Request_String_Int64_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgAttribute_Update_Attnum not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgAttribute_Update_Attrelid(context.Context, *Request_String_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgAttribute_Update_Attrelid not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgAttribute_Update_Attstattarget(context.Context, *Request_String_Int64_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgAttribute_Update_Attstattarget not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgAttribute_Update_Attstorage(context.Context, *Request_String_Int64_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgAttribute_Update_Attstorage not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgAttribute_Update_Atttypid(context.Context, *Request_String_Int64_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgAttribute_Update_Atttypid not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgAttribute_Update_Atttypmod(context.Context, *Request_String_Int64_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgAttribute_Update_Atttypmod not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgAttribute_Update_VersionID(context.Context, *Request_String_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgAttribute_Update_VersionID not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgAttribute_ReadFromCache(context.Context, *Request_String_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgAttribute_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgAttribute_ReadObject(context.Context, *Request_String_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgAttribute_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Read(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Update_Oid(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Update_Oid not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Update_Relallvisible(context.Context, *Request_Int64_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Update_Relallvisible not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Update_Relam(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Update_Relam not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Update_Relchecks(context.Context, *Request_Int64_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Update_Relchecks not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Update_Relfilenode(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Update_Relfilenode not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Update_Relforcerowsecurity(context.Context, *Request_Int64_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Update_Relforcerowsecurity not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Update_Relfrozenxid(context.Context, *Request_Int64_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Update_Relfrozenxid not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Update_Relhasindex(context.Context, *Request_Int64_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Update_Relhasindex not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Update_Relhasrules(context.Context, *Request_Int64_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Update_Relhasrules not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Update_Relhassubclass(context.Context, *Request_Int64_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Update_Relhassubclass not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Update_Relhastriggers(context.Context, *Request_Int64_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Update_Relhastriggers not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Update_Relispartition(context.Context, *Request_Int64_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Update_Relispartition not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Update_Relispopulated(context.Context, *Request_Int64_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Update_Relispopulated not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Update_Relisshared(context.Context, *Request_Int64_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Update_Relisshared not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Update_Relkind(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Update_Relkind not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Update_Relminmxid(context.Context, *Request_Int64_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Update_Relminmxid not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Update_Relname(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Update_Relname not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Update_Relnamespace(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Update_Relnamespace not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Update_Relnatts(context.Context, *Request_Int64_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Update_Relnatts not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Update_Reloftype(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Update_Reloftype not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Update_Relowner(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Update_Relowner not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Update_Relpages(context.Context, *Request_Int64_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Update_Relpages not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Update_Relpersistence(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Update_Relpersistence not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Update_Relreplident(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Update_Relreplident not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Update_Relrewrite(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Update_Relrewrite not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Update_Relrowsecurity(context.Context, *Request_Int64_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Update_Relrowsecurity not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Update_Reltablespace(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Update_Reltablespace not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Update_Reltoastrelid(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Update_Reltoastrelid not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Update_Reltuples(context.Context, *Request_Int64_Int64_Float32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Update_Reltuples not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Update_Reltype(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Update_Reltype not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_Update_VersionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_Update_VersionID not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_ReadFromCache(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgClass_ReadObject(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgClass_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgConstraint_Read(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgConstraint_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgConstraint_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgConstraint_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgConstraint_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgConstraint_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgConstraint_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgConstraint_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgConstraint_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgConstraint_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgConstraint_Update_Condeferrable(context.Context, *Request_Int64_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgConstraint_Update_Condeferrable not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgConstraint_Update_Condeferred(context.Context, *Request_Int64_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgConstraint_Update_Condeferred not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgConstraint_Update_Conexclop(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgConstraint_Update_Conexclop not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgConstraint_Update_Confdeltype(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgConstraint_Update_Confdeltype not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgConstraint_Update_Conffeqop(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgConstraint_Update_Conffeqop not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgConstraint_Update_Confkey(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgConstraint_Update_Confkey not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgConstraint_Update_Confmatchtype(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgConstraint_Update_Confmatchtype not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgConstraint_Update_Confrelid(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgConstraint_Update_Confrelid not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgConstraint_Update_Confupdtype(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgConstraint_Update_Confupdtype not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgConstraint_Update_Conindid(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgConstraint_Update_Conindid not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgConstraint_Update_Coninhcount(context.Context, *Request_Int64_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgConstraint_Update_Coninhcount not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgConstraint_Update_Conislocal(context.Context, *Request_Int64_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgConstraint_Update_Conislocal not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgConstraint_Update_Conkey(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgConstraint_Update_Conkey not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgConstraint_Update_Conname(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgConstraint_Update_Conname not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgConstraint_Update_Connamespace(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgConstraint_Update_Connamespace not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgConstraint_Update_Connoinherit(context.Context, *Request_Int64_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgConstraint_Update_Connoinherit not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgConstraint_Update_Conparentid(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgConstraint_Update_Conparentid not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgConstraint_Update_Conpfeqop(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgConstraint_Update_Conpfeqop not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgConstraint_Update_Conppeqop(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgConstraint_Update_Conppeqop not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgConstraint_Update_Conrelid(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgConstraint_Update_Conrelid not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgConstraint_Update_Contype(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgConstraint_Update_Contype not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgConstraint_Update_Contypid(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgConstraint_Update_Contypid not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgConstraint_Update_Convalidated(context.Context, *Request_Int64_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgConstraint_Update_Convalidated not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgConstraint_Update_Oid(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgConstraint_Update_Oid not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgConstraint_Update_VersionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgConstraint_Update_VersionID not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgConstraint_ReadFromCache(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgConstraint_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgConstraint_ReadObject(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgConstraint_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgDescription_Read(context.Context, *Request_Int64_Int64_Int32_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgDescription_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgDescription_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgDescription_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgDescription_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgDescription_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgDescription_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgDescription_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgDescription_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgDescription_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgDescription_Update_Classoid(context.Context, *Request_Int64_Int64_Int32_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgDescription_Update_Classoid not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgDescription_Update_Description(context.Context, *Request_Int64_Int64_Int32_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgDescription_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgDescription_Update_Objoid(context.Context, *Request_Int64_Int64_Int32_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgDescription_Update_Objoid not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgDescription_Update_Objsubid(context.Context, *Request_Int64_Int64_Int32_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgDescription_Update_Objsubid not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgDescription_Update_VersionID(context.Context, *Request_Int64_Int64_Int32_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgDescription_Update_VersionID not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgDescription_ReadFromCache(context.Context, *Request_Int64_Int64_Int32_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgDescription_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgDescription_ReadObject(context.Context, *Request_Int64_Int64_Int32_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgDescription_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgIndex_Read(context.Context, *Request_Int64_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgIndex_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgIndex_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgIndex_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgIndex_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgIndex_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgIndex_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgIndex_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgIndex_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgIndex_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgIndex_Update_Indcheckxmin(context.Context, *Request_Int64_Int64_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgIndex_Update_Indcheckxmin not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgIndex_Update_Indclass(context.Context, *Request_Int64_Int64_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgIndex_Update_Indclass not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgIndex_Update_Indcollation(context.Context, *Request_Int64_Int64_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgIndex_Update_Indcollation not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgIndex_Update_Indexprs(context.Context, *Request_Int64_Int64_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgIndex_Update_Indexprs not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgIndex_Update_Indexrelid(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgIndex_Update_Indexrelid not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgIndex_Update_Indimmediate(context.Context, *Request_Int64_Int64_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgIndex_Update_Indimmediate not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgIndex_Update_Indisclustered(context.Context, *Request_Int64_Int64_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgIndex_Update_Indisclustered not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgIndex_Update_Indisexclusion(context.Context, *Request_Int64_Int64_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgIndex_Update_Indisexclusion not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgIndex_Update_Indislive(context.Context, *Request_Int64_Int64_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgIndex_Update_Indislive not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgIndex_Update_Indisprimary(context.Context, *Request_Int64_Int64_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgIndex_Update_Indisprimary not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgIndex_Update_Indisready(context.Context, *Request_Int64_Int64_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgIndex_Update_Indisready not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgIndex_Update_Indisreplident(context.Context, *Request_Int64_Int64_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgIndex_Update_Indisreplident not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgIndex_Update_Indisunique(context.Context, *Request_Int64_Int64_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgIndex_Update_Indisunique not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgIndex_Update_Indisvalid(context.Context, *Request_Int64_Int64_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgIndex_Update_Indisvalid not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgIndex_Update_Indkey(context.Context, *Request_Int64_Int64_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgIndex_Update_Indkey not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgIndex_Update_Indnatts(context.Context, *Request_Int64_Int64_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgIndex_Update_Indnatts not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgIndex_Update_Indnkeyatts(context.Context, *Request_Int64_Int64_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgIndex_Update_Indnkeyatts not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgIndex_Update_Indoption(context.Context, *Request_Int64_Int64_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgIndex_Update_Indoption not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgIndex_Update_Indpred(context.Context, *Request_Int64_Int64_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgIndex_Update_Indpred not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgIndex_Update_Indrelid(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgIndex_Update_Indrelid not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgIndex_Update_VersionID(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgIndex_Update_VersionID not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgIndex_ReadFromCache(context.Context, *Request_Int64_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgIndex_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgIndex_ReadObject(context.Context, *Request_Int64_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgIndex_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgNamespace_Read(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgNamespace_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgNamespace_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgNamespace_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgNamespace_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgNamespace_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgNamespace_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgNamespace_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgNamespace_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgNamespace_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgNamespace_Update_Nspacl(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgNamespace_Update_Nspacl not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgNamespace_Update_Nspname(context.Context, *Request_Int64_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgNamespace_Update_Nspname not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgNamespace_Update_Nspowner(context.Context, *Request_Int64_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgNamespace_Update_Nspowner not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgNamespace_Update_Oid(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgNamespace_Update_Oid not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgNamespace_Update_VersionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgNamespace_Update_VersionID not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgNamespace_ReadFromCache(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgNamespace_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigratePgNamespace_ReadObject(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigratePgNamespace_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigrateVersion_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigrateVersion_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigrateVersion_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigrateVersion_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigrateVersion_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigrateVersion_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigrateVersion_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigrateVersion_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigrateVersion_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigrateVersion_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigrateVersion_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigrateVersion_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigrateVersion_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigrateVersion_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigrateVersion_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigrateVersion_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) PostgresMigrateVersion_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostgresMigrateVersion_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) AccountingArea_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountingArea_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) AccountingArea_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountingArea_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) AccountingArea_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountingArea_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) AccountingArea_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountingArea_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) AccountingArea_FindByExtID(context.Context, *RequestExtID) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountingArea_FindByExtID not implemented")
}
func (UnimplementedPostgresMigrateServer) AccountingArea_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountingArea_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) AccountingArea_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountingArea_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) AccountingArea_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountingArea_Update_Code not implemented")
}
func (UnimplementedPostgresMigrateServer) AccountingArea_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountingArea_Update_ConnectionID not implemented")
}
func (UnimplementedPostgresMigrateServer) AccountingArea_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountingArea_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) AccountingArea_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountingArea_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) AccountingArea_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountingArea_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) AccountingArea_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountingArea_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) AccountingArea_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountingArea_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) AccrualType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccrualType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) AccrualType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccrualType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) AccrualType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccrualType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) AccrualType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccrualType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) AccrualType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccrualType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) AccrualType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccrualType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) AccrualType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccrualType_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) AccrualType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccrualType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) AccrualType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccrualType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) AccrualType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccrualType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) AccrualType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccrualType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) Balance_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Balance_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) Balance_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Balance_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) Balance_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Balance_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) Balance_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Balance_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) Balance_FindByExtID(context.Context, *RequestExtID) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Balance_FindByExtID not implemented")
}
func (UnimplementedPostgresMigrateServer) Balance_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Balance_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) Balance_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Balance_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) Balance_Update_BillingMonth(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Balance_Update_BillingMonth not implemented")
}
func (UnimplementedPostgresMigrateServer) Balance_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Balance_Update_ConnectionID not implemented")
}
func (UnimplementedPostgresMigrateServer) Balance_Update_ContractID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Balance_Update_ContractID not implemented")
}
func (UnimplementedPostgresMigrateServer) Balance_Update_DebtTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Balance_Update_DebtTypeID not implemented")
}
func (UnimplementedPostgresMigrateServer) Balance_Update_DocumentAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Balance_Update_DocumentAt not implemented")
}
func (UnimplementedPostgresMigrateServer) Balance_Update_DocumentInvoiceID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Balance_Update_DocumentInvoiceID not implemented")
}
func (UnimplementedPostgresMigrateServer) Balance_Update_DocumentPaymentID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Balance_Update_DocumentPaymentID not implemented")
}
func (UnimplementedPostgresMigrateServer) Balance_Update_Sum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Balance_Update_Sum not implemented")
}
func (UnimplementedPostgresMigrateServer) Balance_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Balance_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) Balance_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Balance_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) Balance_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Balance_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) BankAccountOrganization_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BankAccountOrganization_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) BankAccountOrganization_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BankAccountOrganization_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) BankAccountOrganization_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BankAccountOrganization_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) BankAccountOrganization_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BankAccountOrganization_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) BankAccountOrganization_FindByExtID(context.Context, *RequestExtID) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BankAccountOrganization_FindByExtID not implemented")
}
func (UnimplementedPostgresMigrateServer) BankAccountOrganization_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BankAccountOrganization_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) BankAccountOrganization_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BankAccountOrganization_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) BankAccountOrganization_Update_AccountNumber(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BankAccountOrganization_Update_AccountNumber not implemented")
}
func (UnimplementedPostgresMigrateServer) BankAccountOrganization_Update_BankID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BankAccountOrganization_Update_BankID not implemented")
}
func (UnimplementedPostgresMigrateServer) BankAccountOrganization_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BankAccountOrganization_Update_ConnectionID not implemented")
}
func (UnimplementedPostgresMigrateServer) BankAccountOrganization_Update_OrganizationID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BankAccountOrganization_Update_OrganizationID not implemented")
}
func (UnimplementedPostgresMigrateServer) BankAccountOrganization_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BankAccountOrganization_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) BankAccountOrganization_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BankAccountOrganization_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) BankAccountOrganization_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BankAccountOrganization_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) Bank_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Bank_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) Bank_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Bank_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) Bank_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Bank_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) Bank_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Bank_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) Bank_FindByExtID(context.Context, *RequestExtID) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Bank_FindByExtID not implemented")
}
func (UnimplementedPostgresMigrateServer) Bank_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Bank_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) Bank_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Bank_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) Bank_Update_BIK(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Bank_Update_BIK not implemented")
}
func (UnimplementedPostgresMigrateServer) Bank_Update_City(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Bank_Update_City not implemented")
}
func (UnimplementedPostgresMigrateServer) Bank_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Bank_Update_ConnectionID not implemented")
}
func (UnimplementedPostgresMigrateServer) Bank_Update_CorrespondentAccount(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Bank_Update_CorrespondentAccount not implemented")
}
func (UnimplementedPostgresMigrateServer) Bank_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Bank_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) Bank_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Bank_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) Bank_Update_OrganizationID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Bank_Update_OrganizationID not implemented")
}
func (UnimplementedPostgresMigrateServer) Bank_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Bank_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) Bank_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Bank_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) Bank_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Bank_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) BeforeTimeType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BeforeTimeType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) BeforeTimeType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BeforeTimeType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) BeforeTimeType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BeforeTimeType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) BeforeTimeType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BeforeTimeType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) BeforeTimeType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BeforeTimeType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) BeforeTimeType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BeforeTimeType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) BeforeTimeType_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BeforeTimeType_Update_Code not implemented")
}
func (UnimplementedPostgresMigrateServer) BeforeTimeType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BeforeTimeType_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) BeforeTimeType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BeforeTimeType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) BeforeTimeType_Update_Value(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BeforeTimeType_Update_Value not implemented")
}
func (UnimplementedPostgresMigrateServer) BeforeTimeType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BeforeTimeType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) BeforeTimeType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BeforeTimeType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) BeforeTimeType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BeforeTimeType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) BillKindType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BillKindType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) BillKindType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BillKindType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) BillKindType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BillKindType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) BillKindType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BillKindType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) BillKindType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BillKindType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) BillKindType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BillKindType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) BillKindType_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BillKindType_Update_Code not implemented")
}
func (UnimplementedPostgresMigrateServer) BillKindType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BillKindType_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) BillKindType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BillKindType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) BillKindType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BillKindType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) BillKindType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BillKindType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) BillKindType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BillKindType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) Branch_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Branch_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) Branch_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Branch_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) Branch_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Branch_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) Branch_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Branch_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) Branch_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Branch_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) Branch_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Branch_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) Branch_Update_Code(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Branch_Update_Code not implemented")
}
func (UnimplementedPostgresMigrateServer) Branch_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Branch_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) Branch_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Branch_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) Branch_Update_OrganizationID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Branch_Update_OrganizationID not implemented")
}
func (UnimplementedPostgresMigrateServer) Branch_Update_PersonalAreaLink(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Branch_Update_PersonalAreaLink not implemented")
}
func (UnimplementedPostgresMigrateServer) Branch_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Branch_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) Branch_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Branch_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) Branch_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Branch_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) Briefcase_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Briefcase_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) Briefcase_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Briefcase_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) Briefcase_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Briefcase_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) Briefcase_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Briefcase_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) Briefcase_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Briefcase_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) Briefcase_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Briefcase_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) Briefcase_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Briefcase_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) Briefcase_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Briefcase_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) Briefcase_Update_LawerID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Briefcase_Update_LawerID not implemented")
}
func (UnimplementedPostgresMigrateServer) Briefcase_Update_BranchID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Briefcase_Update_BranchID not implemented")
}
func (UnimplementedPostgresMigrateServer) Briefcase_Update_Number(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Briefcase_Update_Number not implemented")
}
func (UnimplementedPostgresMigrateServer) Briefcase_Update_StatusID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Briefcase_Update_StatusID not implemented")
}
func (UnimplementedPostgresMigrateServer) Briefcase_SetLawer_ChangeItems(context.Context, *Request_Model_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Briefcase_SetLawer_ChangeItems not implemented")
}
func (UnimplementedPostgresMigrateServer) Briefcase_FindEmployeeBy_LawerID(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Briefcase_FindEmployeeBy_LawerID not implemented")
}
func (UnimplementedPostgresMigrateServer) Briefcase_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Briefcase_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseComment_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseComment_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseComment_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseComment_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseComment_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseComment_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseComment_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseComment_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseComment_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseComment_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseComment_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseComment_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseComment_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseComment_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseComment_Update_BriefcaseID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseComment_Update_BriefcaseID not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseComment_Update_CommentTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseComment_Update_CommentTypeID not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseComment_Update_EmployeeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseComment_Update_EmployeeID not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseComment_Update_Message(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseComment_Update_Message not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseComment_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseComment_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseComment_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseComment_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseComment_FindMassBy_BriefcaseID_CommentTypeID(context.Context, *Request_Int64_Int64) (*ResponseMass, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseComment_FindMassBy_BriefcaseID_CommentTypeID not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesFile_Read(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesFile_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesFile_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesFile_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesFile_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesFile_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesFile_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesFile_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesFile_Delete(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesFile_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesFile_Restore(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesFile_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesFile_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesFile_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesFile_Update_BriefcaseID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesFile_Update_BriefcaseID not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesFile_Update_FileID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesFile_Update_FileID not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesFile_ReadFromCache(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesFile_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesFile_ReadObject(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesFile_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesFile_FindMassBy_BriefcaseID(context.Context, *Request_Int64) (*ResponseMass, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesFile_FindMassBy_BriefcaseID not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesFile_FindMassObjectBy_BriefcaseID(context.Context, *Request_Int64) (*ResponseMass, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesFile_FindMassObjectBy_BriefcaseID not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesHashtag_Read(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesHashtag_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesHashtag_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesHashtag_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesHashtag_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesHashtag_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesHashtag_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesHashtag_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesHashtag_Delete(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesHashtag_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesHashtag_Restore(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesHashtag_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesHashtag_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesHashtag_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesHashtag_Update_BriefcaseID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesHashtag_Update_BriefcaseID not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesHashtag_Update_HashtagID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesHashtag_Update_HashtagID not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesHashtag_ReadFromCache(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesHashtag_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesHashtag_FindMassBy_BriefcaseID(context.Context, *Request_Int64) (*ResponseMass, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesHashtag_FindMassBy_BriefcaseID not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesHashtag_ReadObject(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesHashtag_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesLawsuit_Read(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesLawsuit_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesLawsuit_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesLawsuit_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesLawsuit_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesLawsuit_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesLawsuit_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesLawsuit_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesLawsuit_Delete(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesLawsuit_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesLawsuit_Restore(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesLawsuit_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesLawsuit_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesLawsuit_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesLawsuit_Update_BriefcaseID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesLawsuit_Update_BriefcaseID not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesLawsuit_Update_LawsuitID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesLawsuit_Update_LawsuitID not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesLawsuit_ReadFromCache(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesLawsuit_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcasesLawsuit_ReadObject(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcasesLawsuit_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseStatusState_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseStatusState_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseStatusState_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseStatusState_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseStatusState_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseStatusState_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseStatusState_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseStatusState_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseStatusState_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseStatusState_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseStatusState_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseStatusState_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseStatusState_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseStatusState_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseStatusState_Update_BriefcaseDebtSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseStatusState_Update_BriefcaseDebtSum not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseStatusState_Update_BriefcaseID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseStatusState_Update_BriefcaseID not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseStatusState_Update_BriefcaseInvoiceSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseStatusState_Update_BriefcaseInvoiceSum not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseStatusState_Update_BriefcasePaySum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseStatusState_Update_BriefcasePaySum not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseStatusState_Update_ContractBillsTotalSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseStatusState_Update_ContractBillsTotalSum not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseStatusState_Update_ContractDebtSumAllTypes(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseStatusState_Update_ContractDebtSumAllTypes not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseStatusState_Update_ContractMainSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseStatusState_Update_ContractMainSum not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseStatusState_Update_ContractPennySum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseStatusState_Update_ContractPennySum not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseStatusState_Update_ContractRestrictSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseStatusState_Update_ContractRestrictSum not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseStatusState_Update_ContractStateDutySum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseStatusState_Update_ContractStateDutySum not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseStatusState_Update_StatusAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseStatusState_Update_StatusAt not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseStatusState_Update_StatusID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseStatusState_Update_StatusID not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseStatusState_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseStatusState_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) BriefcaseStatusState_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BriefcaseStatusState_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) Calendar_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Calendar_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) Calendar_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Calendar_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) Calendar_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Calendar_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) Calendar_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Calendar_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) Calendar_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Calendar_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) Calendar_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Calendar_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) Calendar_Update_Comment(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Calendar_Update_Comment not implemented")
}
func (UnimplementedPostgresMigrateServer) Calendar_Update_Date(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Calendar_Update_Date not implemented")
}
func (UnimplementedPostgresMigrateServer) Calendar_Update_DayTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Calendar_Update_DayTypeID not implemented")
}
func (UnimplementedPostgresMigrateServer) Calendar_Update_Days(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Calendar_Update_Days not implemented")
}
func (UnimplementedPostgresMigrateServer) Calendar_Update_Hours(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Calendar_Update_Hours not implemented")
}
func (UnimplementedPostgresMigrateServer) Calendar_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Calendar_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) Calendar_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Calendar_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) Calendar_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Calendar_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) ChangeItem_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeItem_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) ChangeItem_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeItem_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) ChangeItem_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeItem_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) ChangeItem_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeItem_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) ChangeItem_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeItem_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) ChangeItem_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeItem_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) ChangeItem_Update_Key(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeItem_Update_Key not implemented")
}
func (UnimplementedPostgresMigrateServer) ChangeItem_Update_Prev(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeItem_Update_Prev not implemented")
}
func (UnimplementedPostgresMigrateServer) ChangeItem_Update_Value(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeItem_Update_Value not implemented")
}
func (UnimplementedPostgresMigrateServer) ChangeItem_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeItem_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) ChangeItem_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeItem_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) ChangeItem_Update_TableNameID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeItem_Update_TableNameID not implemented")
}
func (UnimplementedPostgresMigrateServer) ChangeItem_Update_TableRowID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeItem_Update_TableRowID not implemented")
}
func (UnimplementedPostgresMigrateServer) ChangeItem_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeItem_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) ChannelType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) ChannelType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) ChannelType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) ChannelType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) ChannelType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) ChannelType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) ChannelType_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelType_Update_Code not implemented")
}
func (UnimplementedPostgresMigrateServer) ChannelType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelType_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) ChannelType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) ChannelType_Update_NotifierID(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelType_Update_NotifierID not implemented")
}
func (UnimplementedPostgresMigrateServer) ChannelType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) ChannelType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) ChannelType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) ClaimType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClaimType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) ClaimType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClaimType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) ClaimType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClaimType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) ClaimType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClaimType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) ClaimType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClaimType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) ClaimType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClaimType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) ClaimType_Update_Code(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClaimType_Update_Code not implemented")
}
func (UnimplementedPostgresMigrateServer) ClaimType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClaimType_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) ClaimType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClaimType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) ClaimType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClaimType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) ClaimType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClaimType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) ClaimType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClaimType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) ColorType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ColorType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) ColorType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ColorType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) ColorType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ColorType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) ColorType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ColorType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) ColorType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ColorType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) ColorType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ColorType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) ColorType_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ColorType_Update_Code not implemented")
}
func (UnimplementedPostgresMigrateServer) ColorType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ColorType_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) ColorType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ColorType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) ColorType_Update_Value(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ColorType_Update_Value not implemented")
}
func (UnimplementedPostgresMigrateServer) ColorType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ColorType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) ColorType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ColorType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) ColorType_Update_Blue(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ColorType_Update_Blue not implemented")
}
func (UnimplementedPostgresMigrateServer) ColorType_Update_Green(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ColorType_Update_Green not implemented")
}
func (UnimplementedPostgresMigrateServer) ColorType_Update_Red(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ColorType_Update_Red not implemented")
}
func (UnimplementedPostgresMigrateServer) ColorType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ColorType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) CommentType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CommentType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) CommentType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CommentType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) CommentType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CommentType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) CommentType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CommentType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) CommentType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CommentType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) CommentType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CommentType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) CommentType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CommentType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) CommentType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CommentType_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) CommentType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CommentType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) CommentType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CommentType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) CommentType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CommentType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) CompletedMonth_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompletedMonth_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) CompletedMonth_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompletedMonth_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) CompletedMonth_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompletedMonth_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) CompletedMonth_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompletedMonth_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) CompletedMonth_FindByExtID(context.Context, *RequestExtID) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompletedMonth_FindByExtID not implemented")
}
func (UnimplementedPostgresMigrateServer) CompletedMonth_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompletedMonth_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) CompletedMonth_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompletedMonth_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) CompletedMonth_Update_AccountingAreaID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompletedMonth_Update_AccountingAreaID not implemented")
}
func (UnimplementedPostgresMigrateServer) CompletedMonth_Update_BillingMonth(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompletedMonth_Update_BillingMonth not implemented")
}
func (UnimplementedPostgresMigrateServer) CompletedMonth_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompletedMonth_Update_ConnectionID not implemented")
}
func (UnimplementedPostgresMigrateServer) CompletedMonth_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompletedMonth_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) CompletedMonth_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompletedMonth_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) CompletedMonth_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompletedMonth_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) Connection_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connection_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) Connection_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connection_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) Connection_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connection_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) Connection_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connection_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) Connection_Update_BranchID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connection_Update_BranchID not implemented")
}
func (UnimplementedPostgresMigrateServer) Connection_Update_DbName(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connection_Update_DbName not implemented")
}
func (UnimplementedPostgresMigrateServer) Connection_Update_DbScheme(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connection_Update_DbScheme not implemented")
}
func (UnimplementedPostgresMigrateServer) Connection_Update_IsLegal(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connection_Update_IsLegal not implemented")
}
func (UnimplementedPostgresMigrateServer) Connection_Update_Login(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connection_Update_Login not implemented")
}
func (UnimplementedPostgresMigrateServer) Connection_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connection_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) Connection_Update_Password(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connection_Update_Password not implemented")
}
func (UnimplementedPostgresMigrateServer) Connection_Update_Port(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connection_Update_Port not implemented")
}
func (UnimplementedPostgresMigrateServer) Connection_Update_Server(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connection_Update_Server not implemented")
}
func (UnimplementedPostgresMigrateServer) Connection_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connection_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) Connection_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connection_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) Connection_FindBy_BranchID_IsLegal(context.Context, *Request_Int64_Bool) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connection_FindBy_BranchID_IsLegal not implemented")
}
func (UnimplementedPostgresMigrateServer) Connection_FindMassBy_BranchID(context.Context, *Request_Int64) (*ResponseMass, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connection_FindMassBy_BranchID not implemented")
}
func (UnimplementedPostgresMigrateServer) Connection_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connection_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractBlackItem_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractBlackItem_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractBlackItem_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractBlackItem_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractBlackItem_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractBlackItem_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractBlackItem_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractBlackItem_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractBlackItem_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractBlackItem_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractBlackItem_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractBlackItem_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractBlackItem_Update_ContractID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractBlackItem_Update_ContractID not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractBlackItem_Update_ContractNumber(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractBlackItem_Update_ContractNumber not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractBlackItem_Update_CreatedByID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractBlackItem_Update_CreatedByID not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractBlackItem_Update_DateFrom(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractBlackItem_Update_DateFrom not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractBlackItem_Update_DateTo(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractBlackItem_Update_DateTo not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractBlackItem_Update_EDMSLink(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractBlackItem_Update_EDMSLink not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractBlackItem_Update_ModifiedByID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractBlackItem_Update_ModifiedByID not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractBlackItem_Update_Note(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractBlackItem_Update_Note not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractBlackItem_Update_Reason(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractBlackItem_Update_Reason not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractBlackItem_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractBlackItem_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractBlackItem_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractBlackItem_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractBlackItem_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractBlackItem_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractCategoryType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractCategoryType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractCategoryType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractCategoryType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractCategoryType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractCategoryType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractCategoryType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractCategoryType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractCategoryType_FindByExtID(context.Context, *RequestExtID) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractCategoryType_FindByExtID not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractCategoryType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractCategoryType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractCategoryType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractCategoryType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractCategoryType_Update_Code(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractCategoryType_Update_Code not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractCategoryType_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractCategoryType_Update_ConnectionID not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractCategoryType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractCategoryType_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractCategoryType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractCategoryType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractCategoryType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractCategoryType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractCategoryType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractCategoryType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractCategoryType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractCategoryType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractType_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractWhiteItem_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractWhiteItem_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractWhiteItem_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractWhiteItem_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractWhiteItem_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractWhiteItem_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractWhiteItem_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractWhiteItem_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractWhiteItem_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractWhiteItem_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractWhiteItem_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractWhiteItem_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractWhiteItem_Update_ContractID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractWhiteItem_Update_ContractID not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractWhiteItem_Update_ContractNumber(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractWhiteItem_Update_ContractNumber not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractWhiteItem_Update_CreatedByID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractWhiteItem_Update_CreatedByID not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractWhiteItem_Update_DateFrom(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractWhiteItem_Update_DateFrom not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractWhiteItem_Update_DateTo(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractWhiteItem_Update_DateTo not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractWhiteItem_Update_EDMSLink(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractWhiteItem_Update_EDMSLink not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractWhiteItem_Update_ModifiedByID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractWhiteItem_Update_ModifiedByID not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractWhiteItem_Update_Note(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractWhiteItem_Update_Note not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractWhiteItem_Update_Reason(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractWhiteItem_Update_Reason not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractWhiteItem_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractWhiteItem_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractWhiteItem_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractWhiteItem_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractWhiteItem_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractWhiteItem_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_FindByExtID(context.Context, *RequestExtID) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_FindByExtID not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_FindBy_Number(context.Context, *RequestString) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_FindBy_Number not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update_BeginAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update_BeginAt not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update_BranchID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update_BranchID not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update_CategoryID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update_CategoryID not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update_ConnectionID not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update_CuratorClaimID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update_CuratorClaimID not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update_CuratorContractID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update_CuratorContractID not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update_CuratorLegalID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update_CuratorLegalID not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update_CuratorPaymentID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update_CuratorPaymentID not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update_CuratorTechAuditID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update_CuratorTechAuditID not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update_DaysToResolveClaim(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update_DaysToResolveClaim not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update_Email(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update_Email not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update_EndAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update_EndAt not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update_ErrorFromStackAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update_ErrorFromStackAt not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update_IndividualID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update_IndividualID not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update_IsErrorFromStack(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update_IsErrorFromStack not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update_IsIndOrganization(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update_IsIndOrganization not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update_IsOrganization(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update_IsOrganization not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update_IsValidEmail(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update_IsValidEmail not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update_Number(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update_Number not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update_OrganizationConsigneeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update_OrganizationConsigneeID not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update_OrganizationCustomerID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update_OrganizationCustomerID not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update_OrganizationPayerID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update_OrganizationPayerID not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update_PostAddress(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update_PostAddress not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update_SignAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update_SignAt not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update_Status(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update_Status not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update_TerminateAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update_TerminateAt not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update_IsBelongsRosatom(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update_IsBelongsRosatom not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update_DepartmentID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update_DepartmentID not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update_Note(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update_Note not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update_SectorID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update_SectorID not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_Update_TypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update_TypeID not implemented")
}
func (UnimplementedPostgresMigrateServer) Contract_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractsTotalSum_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractsTotalSum_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractsTotalSum_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractsTotalSum_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractsTotalSum_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractsTotalSum_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractsTotalSum_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractsTotalSum_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractsTotalSum_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractsTotalSum_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractsTotalSum_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractsTotalSum_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractsTotalSum_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractsTotalSum_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractsTotalSum_Update_ContractID(context.Context, *Request_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractsTotalSum_Update_ContractID not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractsTotalSum_Update_MainSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractsTotalSum_Update_MainSum not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractsTotalSum_Update_PennySum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractsTotalSum_Update_PennySum not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractsTotalSum_Update_RestrictSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractsTotalSum_Update_RestrictSum not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractsTotalSum_Update_StateDutySum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractsTotalSum_Update_StateDutySum not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractsTotalSum_Update_TotalSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractsTotalSum_Update_TotalSum not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractsTotalSum_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractsTotalSum_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractsTotalSum_Update_BillsSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractsTotalSum_Update_BillsSum not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractsTotalSum_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractsTotalSum_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractIndividual_Read(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractIndividual_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractIndividual_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractIndividual_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractIndividual_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractIndividual_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractIndividual_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractIndividual_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractIndividual_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractIndividual_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractIndividual_Update_ContractID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractIndividual_Update_ContractID not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractIndividual_Update_IndividualID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractIndividual_Update_IndividualID not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractIndividual_ReadFromCache(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractIndividual_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractIndividual_ReadObject(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractIndividual_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractOrganization_Read(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractOrganization_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractOrganization_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractOrganization_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractOrganization_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractOrganization_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractOrganization_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractOrganization_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractOrganization_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractOrganization_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractOrganization_Update_ContractID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractOrganization_Update_ContractID not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractOrganization_Update_OrganizationID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractOrganization_Update_OrganizationID not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractOrganization_ReadFromCache(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractOrganization_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) ContractOrganization_ReadObject(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractOrganization_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuit_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuit_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuit_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuit_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuit_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuit_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuit_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuit_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuit_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuit_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuit_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuit_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuit_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuit_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuit_Update_BriefcaseID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuit_Update_BriefcaseID not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuit_Update_CourtID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuit_Update_CourtID not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuit_Update_LawerID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuit_Update_LawerID not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuit_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuit_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuit_Update_LitigationTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuit_Update_LitigationTypeID not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuit_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuit_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuitsFile_Read(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuitsFile_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuitsFile_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuitsFile_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuitsFile_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuitsFile_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuitsFile_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuitsFile_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuitsFile_Delete(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuitsFile_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuitsFile_Restore(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuitsFile_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuitsFile_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuitsFile_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuitsFile_Update_CourtSuitID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuitsFile_Update_CourtSuitID not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuitsFile_Update_FileID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuitsFile_Update_FileID not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuitsFile_ReadFromCache(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuitsFile_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuitsFile_ReadObject(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuitsFile_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuitsFile_FindMassBy_CourtSuitID(context.Context, *Request_Int64) (*ResponseMass, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuitsFile_FindMassBy_CourtSuitID not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuitsFile_FindMassObjectBy_CourtSuitID(context.Context, *Request_Int64) (*ResponseMass, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuitsFile_FindMassObjectBy_CourtSuitID not implemented")
}
func (UnimplementedPostgresMigrateServer) Court_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Court_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) Court_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Court_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) Court_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Court_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) Court_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Court_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) Court_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Court_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) Court_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Court_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) Court_Update_City(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Court_Update_City not implemented")
}
func (UnimplementedPostgresMigrateServer) Court_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Court_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) Court_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Court_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) Court_Update_OrganizationID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Court_Update_OrganizationID not implemented")
}
func (UnimplementedPostgresMigrateServer) Court_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Court_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) Court_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Court_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) Court_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Court_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuitComment_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuitComment_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuitComment_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuitComment_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuitComment_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuitComment_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuitComment_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuitComment_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuitComment_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuitComment_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuitComment_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuitComment_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuitComment_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuitComment_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuitComment_Update_CommentTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuitComment_Update_CommentTypeID not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuitComment_Update_CourtSuitID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuitComment_Update_CourtSuitID not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuitComment_Update_EmployeeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuitComment_Update_EmployeeID not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuitComment_Update_Message(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuitComment_Update_Message not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuitComment_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuitComment_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuitComment_FindMassBy_CourtSuitID_CommentTypeID(context.Context, *Request_Int64_Int64) (*ResponseMass, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuitComment_FindMassBy_CourtSuitID_CommentTypeID not implemented")
}
func (UnimplementedPostgresMigrateServer) CourtSuitComment_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourtSuitComment_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) DayType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DayType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) DayType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DayType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) DayType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DayType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) DayType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DayType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) DayType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DayType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) DayType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DayType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) DayType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DayType_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) DayType_Update_IsWorkDay(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DayType_Update_IsWorkDay not implemented")
}
func (UnimplementedPostgresMigrateServer) DayType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DayType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) DayType_Update_ShortName(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DayType_Update_ShortName not implemented")
}
func (UnimplementedPostgresMigrateServer) DayType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DayType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) DayType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DayType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) DayType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DayType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) DebtType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DebtType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) DebtType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DebtType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) DebtType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DebtType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) DebtType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DebtType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) DebtType_FindByExtID(context.Context, *RequestExtID) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DebtType_FindByExtID not implemented")
}
func (UnimplementedPostgresMigrateServer) DebtType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DebtType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) DebtType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DebtType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) DebtType_Update_CodeNSI(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DebtType_Update_CodeNSI not implemented")
}
func (UnimplementedPostgresMigrateServer) DebtType_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DebtType_Update_ConnectionID not implemented")
}
func (UnimplementedPostgresMigrateServer) DebtType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DebtType_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) DebtType_Update_ExtCode(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DebtType_Update_ExtCode not implemented")
}
func (UnimplementedPostgresMigrateServer) DebtType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DebtType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) DebtType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DebtType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) DebtType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DebtType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) DebtType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DebtType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) DirectionType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DirectionType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) DirectionType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DirectionType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) DirectionType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DirectionType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) DirectionType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DirectionType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) DirectionType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DirectionType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) DirectionType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DirectionType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) DirectionType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DirectionType_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) DirectionType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DirectionType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) DirectionType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DirectionType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) DirectionType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DirectionType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) DirectionType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DirectionType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLinkType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinkType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLinkType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinkType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLinkType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinkType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLinkType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinkType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLinkType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinkType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLinkType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinkType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLinkType_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinkType_Update_Code not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLinkType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinkType_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLinkType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinkType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLinkType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinkType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLinkType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinkType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLinkType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinkType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLink_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLink_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLink_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLink_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLink_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLink_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLink_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLink_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLink_FindByExtID(context.Context, *RequestExtID) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLink_FindByExtID not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLink_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLink_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLink_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLink_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLink_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLink_Update_ConnectionID not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLink_Update_ContractID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLink_Update_ContractID not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLink_Update_CorrectionSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLink_Update_CorrectionSum not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLink_Update_Document1ID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLink_Update_Document1ID not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLink_Update_Document2ID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLink_Update_Document2ID not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLink_Update_LinkTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLink_Update_LinkTypeID not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLink_Update_DateFrom(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLink_Update_DateFrom not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLink_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLink_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLink_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLink_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLink_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLink_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLinksRapira_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinksRapira_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLinksRapira_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinksRapira_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLinksRapira_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinksRapira_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLinksRapira_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinksRapira_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLinksRapira_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinksRapira_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLinksRapira_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinksRapira_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLinksRapira_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinksRapira_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLinksRapira_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinksRapira_Update_ConnectionID not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLinksRapira_Update_ContractID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinksRapira_Update_ContractID not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLinksRapira_Update_CorrectionSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinksRapira_Update_CorrectionSum not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLinksRapira_Update_DateFrom(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinksRapira_Update_DateFrom not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLinksRapira_Update_Document1ID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinksRapira_Update_Document1ID not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLinksRapira_Update_Document2ID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinksRapira_Update_Document2ID not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLinksRapira_Update_LinkTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinksRapira_Update_LinkTypeID not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLinksRapira_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinksRapira_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLinksRapira_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinksRapira_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLinksRapira_Update_ModifiedAtStack(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinksRapira_Update_ModifiedAtStack not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLinksRapira_Update_CreatedAtStack(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinksRapira_Update_CreatedAtStack not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentLinksRapira_FindByExtID(context.Context, *RequestExtIDString) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinksRapira_FindByExtID not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentRequired_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentRequired_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentRequired_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentRequired_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentRequired_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentRequired_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentRequired_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentRequired_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentRequired_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentRequired_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentRequired_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentRequired_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentRequired_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentRequired_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentRequired_Update_Code(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentRequired_Update_Code not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentRequired_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentRequired_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentRequired_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentRequired_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentRequired_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentRequired_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentReturnReason_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentReturnReason_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentReturnReason_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentReturnReason_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentReturnReason_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentReturnReason_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentReturnReason_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentReturnReason_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentReturnReason_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentReturnReason_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentReturnReason_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentReturnReason_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentReturnReason_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentReturnReason_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentReturnReason_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentReturnReason_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentReturnReason_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentReturnReason_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentReturnReason_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentReturnReason_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentReturnReason_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentReturnReason_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentStatus_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentStatus_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentStatus_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentStatus_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentStatus_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentStatus_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentStatus_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentStatus_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentStatus_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentStatus_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentStatus_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentStatus_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentStatus_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentStatus_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentStatus_Update_Code(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentStatus_Update_Code not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentStatus_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentStatus_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentStatus_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentStatus_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentStatus_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentStatus_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentType_FindByExtID(context.Context, *RequestExtID) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentType_FindByExtID not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentType_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentType_Update_ConnectionID not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentType_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentType_Update_IncomeExpense(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentType_Update_IncomeExpense not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentType_Update_IsService(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentType_Update_IsService not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentType_Update_IsVisible(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentType_Update_IsVisible not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentType_Update_ShortName(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentType_Update_ShortName not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentType_Update_Type(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentType_Update_Type not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) DocumentType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) Document_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) Document_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) Document_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) Document_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) Document_FindByExtID(context.Context, *RequestExtID) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_FindByExtID not implemented")
}
func (UnimplementedPostgresMigrateServer) Document_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) Document_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) Document_Update_Analytics(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_Update_Analytics not implemented")
}
func (UnimplementedPostgresMigrateServer) Document_Update_Balance(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_Update_Balance not implemented")
}
func (UnimplementedPostgresMigrateServer) Document_Update_BillKindID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_Update_BillKindID not implemented")
}
func (UnimplementedPostgresMigrateServer) Document_Update_BillingMonth(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_Update_BillingMonth not implemented")
}
func (UnimplementedPostgresMigrateServer) Document_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_Update_ConnectionID not implemented")
}
func (UnimplementedPostgresMigrateServer) Document_Update_ContractID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_Update_ContractID not implemented")
}
func (UnimplementedPostgresMigrateServer) Document_Update_Count(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_Update_Count not implemented")
}
func (UnimplementedPostgresMigrateServer) Document_Update_DebtSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_Update_DebtSum not implemented")
}
func (UnimplementedPostgresMigrateServer) Document_Update_DocumentAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_Update_DocumentAt not implemented")
}
func (UnimplementedPostgresMigrateServer) Document_Update_DocumentSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_Update_DocumentSum not implemented")
}
func (UnimplementedPostgresMigrateServer) Document_Update_DocumentTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_Update_DocumentTypeID not implemented")
}
func (UnimplementedPostgresMigrateServer) Document_Update_Note(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_Update_Note not implemented")
}
func (UnimplementedPostgresMigrateServer) Document_Update_Number(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_Update_Number not implemented")
}
func (UnimplementedPostgresMigrateServer) Document_Update_NumberFull(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_Update_NumberFull not implemented")
}
func (UnimplementedPostgresMigrateServer) Document_Update_PayDeadline(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_Update_PayDeadline not implemented")
}
func (UnimplementedPostgresMigrateServer) Document_Update_PayFrom(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_Update_PayFrom not implemented")
}
func (UnimplementedPostgresMigrateServer) Document_Update_PayTo(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_Update_PayTo not implemented")
}
func (UnimplementedPostgresMigrateServer) Document_Update_Payment(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_Update_Payment not implemented")
}
func (UnimplementedPostgresMigrateServer) Document_Update_Reason(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_Update_Reason not implemented")
}
func (UnimplementedPostgresMigrateServer) Document_Update_ReversalID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_Update_ReversalID not implemented")
}
func (UnimplementedPostgresMigrateServer) Document_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) Document_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) Document_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) Employee_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) Employee_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) Employee_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) Employee_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) Employee_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) Employee_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) Employee_FindByExtId(context.Context, *RequestExtID) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_FindByExtId not implemented")
}
func (UnimplementedPostgresMigrateServer) Employee_FindByLogin(context.Context, *RequestString) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_FindByLogin not implemented")
}
func (UnimplementedPostgresMigrateServer) Employee_FindByEMail(context.Context, *RequestString) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_FindByEMail not implemented")
}
func (UnimplementedPostgresMigrateServer) Employee_FindByFIO(context.Context, *RequestString3) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_FindByFIO not implemented")
}
func (UnimplementedPostgresMigrateServer) Employee_FindByExtID(context.Context, *RequestExtID) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_FindByExtID not implemented")
}
func (UnimplementedPostgresMigrateServer) Employee_Update_BranchID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_Update_BranchID not implemented")
}
func (UnimplementedPostgresMigrateServer) Employee_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_Update_ConnectionID not implemented")
}
func (UnimplementedPostgresMigrateServer) Employee_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) Employee_Update_Email(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_Update_Email not implemented")
}
func (UnimplementedPostgresMigrateServer) Employee_Update_IsActive(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_Update_IsActive not implemented")
}
func (UnimplementedPostgresMigrateServer) Employee_Update_Login(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_Update_Login not implemented")
}
func (UnimplementedPostgresMigrateServer) Employee_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) Employee_Update_ParentName(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_Update_ParentName not implemented")
}
func (UnimplementedPostgresMigrateServer) Employee_Update_Phone(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_Update_Phone not implemented")
}
func (UnimplementedPostgresMigrateServer) Employee_Update_Photo(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_Update_Photo not implemented")
}
func (UnimplementedPostgresMigrateServer) Employee_Update_Position(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_Update_Position not implemented")
}
func (UnimplementedPostgresMigrateServer) Employee_Update_SecondName(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_Update_SecondName not implemented")
}
func (UnimplementedPostgresMigrateServer) Employee_Update_Tag(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_Update_Tag not implemented")
}
func (UnimplementedPostgresMigrateServer) Employee_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) Employee_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) Employee_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) EmployeesHashtag_Read(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EmployeesHashtag_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) EmployeesHashtag_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EmployeesHashtag_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) EmployeesHashtag_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EmployeesHashtag_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) EmployeesHashtag_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EmployeesHashtag_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) EmployeesHashtag_Delete(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EmployeesHashtag_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) EmployeesHashtag_Restore(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EmployeesHashtag_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) EmployeesHashtag_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EmployeesHashtag_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) EmployeesHashtag_Update_EmployeeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EmployeesHashtag_Update_EmployeeID not implemented")
}
func (UnimplementedPostgresMigrateServer) EmployeesHashtag_Update_HashtagID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EmployeesHashtag_Update_HashtagID not implemented")
}
func (UnimplementedPostgresMigrateServer) EmployeesHashtag_ReadFromCache(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EmployeesHashtag_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) EmployeesHashtag_FindMassBy_EmployeeID(context.Context, *Request_Int64) (*ResponseMass, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EmployeesHashtag_FindMassBy_EmployeeID not implemented")
}
func (UnimplementedPostgresMigrateServer) EmployeesHashtag_ReadObject(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EmployeesHashtag_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) EventType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EventType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) EventType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EventType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) EventType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EventType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) EventType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EventType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) EventType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EventType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) EventType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EventType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) EventType_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EventType_Update_Code not implemented")
}
func (UnimplementedPostgresMigrateServer) EventType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EventType_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) EventType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EventType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) EventType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EventType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) EventType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EventType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) EventType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EventType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) Event_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Event_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) Event_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Event_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) Event_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Event_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) Event_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Event_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) Event_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Event_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) Event_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Event_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) Event_Update_ColorTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Event_Update_ColorTypeID not implemented")
}
func (UnimplementedPostgresMigrateServer) Event_Update_CreatedByID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Event_Update_CreatedByID not implemented")
}
func (UnimplementedPostgresMigrateServer) Event_Update_DeletedByID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Event_Update_DeletedByID not implemented")
}
func (UnimplementedPostgresMigrateServer) Event_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Event_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) Event_Update_EventTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Event_Update_EventTypeID not implemented")
}
func (UnimplementedPostgresMigrateServer) Event_Update_FinishAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Event_Update_FinishAt not implemented")
}
func (UnimplementedPostgresMigrateServer) Event_Update_IsAllDay(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Event_Update_IsAllDay not implemented")
}
func (UnimplementedPostgresMigrateServer) Event_Update_ModifiedByID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Event_Update_ModifiedByID not implemented")
}
func (UnimplementedPostgresMigrateServer) Event_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Event_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) Event_Update_NotificationID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Event_Update_NotificationID not implemented")
}
func (UnimplementedPostgresMigrateServer) Event_Update_PerformerID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Event_Update_PerformerID not implemented")
}
func (UnimplementedPostgresMigrateServer) Event_Update_PriorityTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Event_Update_PriorityTypeID not implemented")
}
func (UnimplementedPostgresMigrateServer) Event_Update_RepeatTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Event_Update_RepeatTypeID not implemented")
}
func (UnimplementedPostgresMigrateServer) Event_Update_StartAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Event_Update_StartAt not implemented")
}
func (UnimplementedPostgresMigrateServer) Event_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Event_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) Event_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Event_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) Event_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Event_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) Facsimile_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Facsimile_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) Facsimile_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Facsimile_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) Facsimile_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Facsimile_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) Facsimile_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Facsimile_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) Facsimile_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Facsimile_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) Facsimile_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Facsimile_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) Facsimile_Update_Branch(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Facsimile_Update_Branch not implemented")
}
func (UnimplementedPostgresMigrateServer) Facsimile_Update_Contract(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Facsimile_Update_Contract not implemented")
}
func (UnimplementedPostgresMigrateServer) Facsimile_Update_Department(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Facsimile_Update_Department not implemented")
}
func (UnimplementedPostgresMigrateServer) Facsimile_Update_Post(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Facsimile_Update_Post not implemented")
}
func (UnimplementedPostgresMigrateServer) Facsimile_Update_Responsible(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Facsimile_Update_Responsible not implemented")
}
func (UnimplementedPostgresMigrateServer) Facsimile_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Facsimile_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) Facsimile_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Facsimile_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) Facsimile_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Facsimile_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) File_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) File_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) File_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) File_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) File_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) File_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) File_FindByFileID(context.Context, *RequestString) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_FindByFileID not implemented")
}
func (UnimplementedPostgresMigrateServer) File_FindByFullName(context.Context, *RequestString) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_FindByFullName not implemented")
}
func (UnimplementedPostgresMigrateServer) File_FindMassBy_TableNameID_TableRowID(context.Context, *Request_Int64_Int64) (*ResponseMass, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_FindMassBy_TableNameID_TableRowID not implemented")
}
func (UnimplementedPostgresMigrateServer) File_FindMassBy_TableNameID_TableRowID_FileTypeID(context.Context, *Request_Int64_Int64_Int64) (*ResponseMass, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_FindMassBy_TableNameID_TableRowID_FileTypeID not implemented")
}
func (UnimplementedPostgresMigrateServer) File_Update_BranchID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_Update_BranchID not implemented")
}
func (UnimplementedPostgresMigrateServer) File_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) File_Update_EmployeeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_Update_EmployeeID not implemented")
}
func (UnimplementedPostgresMigrateServer) File_Update_Extension(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_Update_Extension not implemented")
}
func (UnimplementedPostgresMigrateServer) File_Update_FileID(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_Update_FileID not implemented")
}
func (UnimplementedPostgresMigrateServer) File_Update_FileName(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_Update_FileName not implemented")
}
func (UnimplementedPostgresMigrateServer) File_Update_FileTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_Update_FileTypeID not implemented")
}
func (UnimplementedPostgresMigrateServer) File_Update_FullName(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_Update_FullName not implemented")
}
func (UnimplementedPostgresMigrateServer) File_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) File_Update_Size(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_Update_Size not implemented")
}
func (UnimplementedPostgresMigrateServer) File_Update_TemplateID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_Update_TemplateID not implemented")
}
func (UnimplementedPostgresMigrateServer) File_Update_Version(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_Update_Version not implemented")
}
func (UnimplementedPostgresMigrateServer) File_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) File_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) File_Save_SaveLink_SaveChangeItems(context.Context, *Request_Model_Int64_Int64) (*ResponseInt64, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_Save_SaveLink_SaveChangeItems not implemented")
}
func (UnimplementedPostgresMigrateServer) File_SaveLinkDeleted_SaveChangeItems(context.Context, *Request_Model_Int64_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_SaveLinkDeleted_SaveChangeItems not implemented")
}
func (UnimplementedPostgresMigrateServer) File_Update_TableNameID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_Update_TableNameID not implemented")
}
func (UnimplementedPostgresMigrateServer) File_Update_TableRowID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_Update_TableRowID not implemented")
}
func (UnimplementedPostgresMigrateServer) File_Update_BucketName(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_Update_BucketName not implemented")
}
func (UnimplementedPostgresMigrateServer) File_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) FileChange_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileChange_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) FileChange_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileChange_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) FileChange_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileChange_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) FileChange_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileChange_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) FileChange_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileChange_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) FileChange_Update_EmployeeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileChange_Update_EmployeeID not implemented")
}
func (UnimplementedPostgresMigrateServer) FileChange_Update_FileID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileChange_Update_FileID not implemented")
}
func (UnimplementedPostgresMigrateServer) FileChange_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileChange_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) FileChange_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileChange_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) FileChange_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileChange_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) FileTemplate_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileTemplate_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) FileTemplate_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileTemplate_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) FileTemplate_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileTemplate_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) FileTemplate_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileTemplate_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) FileTemplate_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileTemplate_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) FileTemplate_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileTemplate_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) FileTemplate_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileTemplate_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) FileTemplate_Update_FileID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileTemplate_Update_FileID not implemented")
}
func (UnimplementedPostgresMigrateServer) FileTemplate_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileTemplate_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) FileTemplate_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileTemplate_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) FileTemplate_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileTemplate_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) FileTemplate_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileTemplate_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) FilesClaim_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FilesClaim_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) FilesClaim_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FilesClaim_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) FilesClaim_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FilesClaim_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) FilesClaim_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FilesClaim_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) FilesClaim_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FilesClaim_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) FilesClaim_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FilesClaim_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) FilesClaim_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FilesClaim_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) FilesClaim_Update_CheckOfClaim(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FilesClaim_Update_CheckOfClaim not implemented")
}
func (UnimplementedPostgresMigrateServer) FilesClaim_Update_Code(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FilesClaim_Update_Code not implemented")
}
func (UnimplementedPostgresMigrateServer) FilesClaim_Update_ConsumerSignature(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FilesClaim_Update_ConsumerSignature not implemented")
}
func (UnimplementedPostgresMigrateServer) FilesClaim_Update_DateOfDocument(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FilesClaim_Update_DateOfDocument not implemented")
}
func (UnimplementedPostgresMigrateServer) FilesClaim_Update_DateOfDownload(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FilesClaim_Update_DateOfDownload not implemented")
}
func (UnimplementedPostgresMigrateServer) FilesClaim_Update_FilePath(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FilesClaim_Update_FilePath not implemented")
}
func (UnimplementedPostgresMigrateServer) FilesClaim_Update_Invoice(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FilesClaim_Update_Invoice not implemented")
}
func (UnimplementedPostgresMigrateServer) FilesClaim_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FilesClaim_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) FilesClaim_Update_Number(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FilesClaim_Update_Number not implemented")
}
func (UnimplementedPostgresMigrateServer) FilesClaim_Update_OriginalDocument(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FilesClaim_Update_OriginalDocument not implemented")
}
func (UnimplementedPostgresMigrateServer) FilesClaim_Update_Period(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FilesClaim_Update_Period not implemented")
}
func (UnimplementedPostgresMigrateServer) FilesClaim_Update_PersonDownloadID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FilesClaim_Update_PersonDownloadID not implemented")
}
func (UnimplementedPostgresMigrateServer) FilesClaim_Update_SignOfObligation(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FilesClaim_Update_SignOfObligation not implemented")
}
func (UnimplementedPostgresMigrateServer) FilesClaim_Update_StatusOfDocument(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FilesClaim_Update_StatusOfDocument not implemented")
}
func (UnimplementedPostgresMigrateServer) FilesClaim_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FilesClaim_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) FileType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) FileType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) FileType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) FileType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) FileType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) FileType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) FileType_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileType_Update_Code not implemented")
}
func (UnimplementedPostgresMigrateServer) FileType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileType_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) FileType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) FileType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) FileType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) FileType_Update_CanBeSynced(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileType_Update_CanBeSynced not implemented")
}
func (UnimplementedPostgresMigrateServer) FileType_Update_MimeType(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileType_Update_MimeType not implemented")
}
func (UnimplementedPostgresMigrateServer) FileType_Update_RequireUpload(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileType_Update_RequireUpload not implemented")
}
func (UnimplementedPostgresMigrateServer) FileType_ReadAll(context.Context, *Request_Empty) (*ResponseMass, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileType_ReadAll not implemented")
}
func (UnimplementedPostgresMigrateServer) FileType_Update_TableNameID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileType_Update_TableNameID not implemented")
}
func (UnimplementedPostgresMigrateServer) FileType_FindBy_Code(context.Context, *Request_Int32) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileType_FindBy_Code not implemented")
}
func (UnimplementedPostgresMigrateServer) FileType_Update_ExistsBankMark(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileType_Update_ExistsBankMark not implemented")
}
func (UnimplementedPostgresMigrateServer) FileType_Update_ExistsSignature(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileType_Update_ExistsSignature not implemented")
}
func (UnimplementedPostgresMigrateServer) FileType_Update_FilenameTemplate(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileType_Update_FilenameTemplate not implemented")
}
func (UnimplementedPostgresMigrateServer) FileType_Update_MultipleLoad(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileType_Update_MultipleLoad not implemented")
}
func (UnimplementedPostgresMigrateServer) FileType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) GenderType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenderType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) GenderType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenderType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) GenderType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenderType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) GenderType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenderType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) GenderType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenderType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) GenderType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenderType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) GenderType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenderType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) GenderType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenderType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) GenderType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenderType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) GenderType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenderType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) Hashtag_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hashtag_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) Hashtag_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hashtag_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) Hashtag_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hashtag_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) Hashtag_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hashtag_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) Hashtag_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hashtag_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) Hashtag_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hashtag_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) Hashtag_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hashtag_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) Hashtag_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hashtag_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) Hashtag_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hashtag_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) Hashtag_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hashtag_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) Hashtag_ReadAll(context.Context, *Request_Empty) (*ResponseMass, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hashtag_ReadAll not implemented")
}
func (UnimplementedPostgresMigrateServer) Hashtag_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hashtag_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) Individual_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Individual_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) Individual_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Individual_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) Individual_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Individual_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) Individual_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Individual_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) Individual_FindByExtID(context.Context, *RequestExtID) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Individual_FindByExtID not implemented")
}
func (UnimplementedPostgresMigrateServer) Individual_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Individual_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) Individual_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Individual_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) Individual_Update_BirthDate(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Individual_Update_BirthDate not implemented")
}
func (UnimplementedPostgresMigrateServer) Individual_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Individual_Update_ConnectionID not implemented")
}
func (UnimplementedPostgresMigrateServer) Individual_Update_DeathDate(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Individual_Update_DeathDate not implemented")
}
func (UnimplementedPostgresMigrateServer) Individual_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Individual_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) Individual_Update_Email(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Individual_Update_Email not implemented")
}
func (UnimplementedPostgresMigrateServer) Individual_Update_GenderID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Individual_Update_GenderID not implemented")
}
func (UnimplementedPostgresMigrateServer) Individual_Update_INN(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Individual_Update_INN not implemented")
}
func (UnimplementedPostgresMigrateServer) Individual_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Individual_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) Individual_Update_ParentName(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Individual_Update_ParentName not implemented")
}
func (UnimplementedPostgresMigrateServer) Individual_Update_Phone(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Individual_Update_Phone not implemented")
}
func (UnimplementedPostgresMigrateServer) Individual_Update_SecondName(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Individual_Update_SecondName not implemented")
}
func (UnimplementedPostgresMigrateServer) Individual_Update_Snils(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Individual_Update_Snils not implemented")
}
func (UnimplementedPostgresMigrateServer) Individual_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Individual_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) Individual_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Individual_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) Individual_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Individual_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) InnerNotifyMessage_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InnerNotifyMessage_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) InnerNotifyMessage_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InnerNotifyMessage_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) InnerNotifyMessage_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InnerNotifyMessage_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) InnerNotifyMessage_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InnerNotifyMessage_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) InnerNotifyMessage_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InnerNotifyMessage_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) InnerNotifyMessage_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InnerNotifyMessage_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) InnerNotifyMessage_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InnerNotifyMessage_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) InnerNotifyMessage_Update_Body(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InnerNotifyMessage_Update_Body not implemented")
}
func (UnimplementedPostgresMigrateServer) InnerNotifyMessage_Update_ContractID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InnerNotifyMessage_Update_ContractID not implemented")
}
func (UnimplementedPostgresMigrateServer) InnerNotifyMessage_Update_MessageType(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InnerNotifyMessage_Update_MessageType not implemented")
}
func (UnimplementedPostgresMigrateServer) InnerNotifyMessage_Update_RecipientEmail(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InnerNotifyMessage_Update_RecipientEmail not implemented")
}
func (UnimplementedPostgresMigrateServer) InnerNotifyMessage_Update_SendResult(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InnerNotifyMessage_Update_SendResult not implemented")
}
func (UnimplementedPostgresMigrateServer) InnerNotifyMessage_Update_SenderEmail(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InnerNotifyMessage_Update_SenderEmail not implemented")
}
func (UnimplementedPostgresMigrateServer) InnerNotifyMessage_Update_Subject(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InnerNotifyMessage_Update_Subject not implemented")
}
func (UnimplementedPostgresMigrateServer) InnerNotifyMessage_Update_Title(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InnerNotifyMessage_Update_Title not implemented")
}
func (UnimplementedPostgresMigrateServer) InnerNotifyMessage_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InnerNotifyMessage_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) InnerNotifyMessage_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InnerNotifyMessage_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) InvoiceDebtTypeStat_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvoiceDebtTypeStat_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) InvoiceDebtTypeStat_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvoiceDebtTypeStat_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) InvoiceDebtTypeStat_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvoiceDebtTypeStat_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) InvoiceDebtTypeStat_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvoiceDebtTypeStat_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) InvoiceDebtTypeStat_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvoiceDebtTypeStat_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) InvoiceDebtTypeStat_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvoiceDebtTypeStat_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) InvoiceDebtTypeStat_Update_DebtTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvoiceDebtTypeStat_Update_DebtTypeID not implemented")
}
func (UnimplementedPostgresMigrateServer) InvoiceDebtTypeStat_Update_InvoiceID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvoiceDebtTypeStat_Update_InvoiceID not implemented")
}
func (UnimplementedPostgresMigrateServer) InvoiceDebtTypeStat_Update_StateAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvoiceDebtTypeStat_Update_StateAt not implemented")
}
func (UnimplementedPostgresMigrateServer) InvoiceDebtTypeStat_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvoiceDebtTypeStat_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) InvoiceDebtTypeStat_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvoiceDebtTypeStat_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) InvoiceDebtTypeStat_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvoiceDebtTypeStat_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_FindByExtID(context.Context, *RequestExtID) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_FindByExtID not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_FindBy_Number(context.Context, *RequestString) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_FindBy_Number not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_FindBy_NumberClaim(context.Context, *RequestString) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_FindBy_NumberClaim not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_BranchID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_BranchID not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_Chance(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_Chance not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_ClaimAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_ClaimAt not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_ClaimPeriodStr(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_ClaimPeriodStr not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_ClaimTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_ClaimTypeID not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_ClosedAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_ClosedAt not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_ConnectionID not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_ContractID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_ContractID not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_ControlledAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_ControlledAt not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_CourtID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_CourtID not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_CuratorClaimID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_CuratorClaimID not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_CuratorContractID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_CuratorContractID not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_CuratorLegalID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_CuratorLegalID not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_CuratorPaymentID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_CuratorPaymentID not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_CuratorTechAuditID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_CuratorTechAuditID not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_DateFrom(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_DateFrom not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_DateTo(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_DateTo not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_DebtSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_DebtSum not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_DebtSumAllTypes(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_DebtSumAllTypes not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_ErrorText(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_ErrorText not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_InvoiceSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_InvoiceSum not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_IsClosed(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_IsClosed not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_MainSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_MainSum not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_NotifyClaimAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_NotifyClaimAt not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_NotifyClaimChannel(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_NotifyClaimChannel not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_NotifyClaimCode(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_NotifyClaimCode not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_NotifyClaimDone(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_NotifyClaimDone not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_NotifyClaimMailingCode(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_NotifyClaimMailingCode not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_NotifyPretrialAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_NotifyPretrialAt not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_NotifyPretrialChannel(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_NotifyPretrialChannel not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_NotifyPretrialCode(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_NotifyPretrialCode not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_NotifyPretrialDone(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_NotifyPretrialDone not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_NotifyPretrialMailingCode(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_NotifyPretrialMailingCode not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_Number(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_Number not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_NumberClaim(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_NumberClaim not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_NumberTrial(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_NumberTrial not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_PaySum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_PaySum not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_Penalty(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_Penalty not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_Penny(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_Penny not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_Percent317(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_Percent317 not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_Percent395(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_Percent395 not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_PretrialAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_PretrialAt not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_ProcessKey(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_ProcessKey not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_ProcessStartedAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_ProcessStartedAt not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_ReasonID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_ReasonID not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_RestrictSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_RestrictSum not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_StageAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_StageAt not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_StageID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_StageID not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_StateDuty(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_StateDuty not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_StatusAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_StatusAt not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_StatusID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_StatusID not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_Tag(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_Tag not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_TypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_TypeID not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_UnknownPayments(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_UnknownPayments not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_TrialAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_TrialAt not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_NotifyPostBarcode(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_NotifyPostBarcode not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_Update_NotifyPostReq(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update_NotifyPostReq not implemented")
}
func (UnimplementedPostgresMigrateServer) Lawsuit_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitComment_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitComment_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitComment_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitComment_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitComment_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitComment_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitComment_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitComment_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitComment_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitComment_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitComment_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitComment_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitComment_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitComment_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitComment_Update_CommentTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitComment_Update_CommentTypeID not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitComment_Update_EmployeeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitComment_Update_EmployeeID not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitComment_Update_LawsuitID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitComment_Update_LawsuitID not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitComment_Update_Message(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitComment_Update_Message not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitComment_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitComment_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitComment_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitComment_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitComment_FindMassBy_LawsuitID_CommentTypeID(context.Context, *Request_Int64_Int64) (*ResponseMass, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitComment_FindMassBy_LawsuitID_CommentTypeID not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitsFile_Read(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitsFile_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitsFile_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitsFile_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitsFile_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitsFile_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitsFile_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitsFile_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitsFile_Delete(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitsFile_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitsFile_Restore(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitsFile_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitsFile_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitsFile_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitsFile_Update_FileID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitsFile_Update_FileID not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitsFile_Update_LawsuitID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitsFile_Update_LawsuitID not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitsFile_ReadFromCache(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitsFile_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitsFile_ReadObject(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitsFile_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitsFile_FindMassBy_LawsuitID(context.Context, *Request_Int64) (*ResponseMass, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitsFile_FindMassBy_LawsuitID not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitsFile_FindMassObjectBy_LawsuitID(context.Context, *Request_Int64) (*ResponseMass, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitsFile_FindMassObjectBy_LawsuitID not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitInvoiceCorrection_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoiceCorrection_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitInvoiceCorrection_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoiceCorrection_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitInvoiceCorrection_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoiceCorrection_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitInvoiceCorrection_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoiceCorrection_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitInvoiceCorrection_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoiceCorrection_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitInvoiceCorrection_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoiceCorrection_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitInvoiceCorrection_Update_CorrectionDocumentID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoiceCorrection_Update_CorrectionDocumentID not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitInvoiceCorrection_Update_CorrectionDocumentSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoiceCorrection_Update_CorrectionDocumentSum not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitInvoiceCorrection_Update_InvoiceDocumentID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoiceCorrection_Update_InvoiceDocumentID not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitInvoiceCorrection_Update_LawsuitID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoiceCorrection_Update_LawsuitID not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitInvoiceCorrection_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoiceCorrection_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitInvoiceCorrection_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoiceCorrection_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitInvoiceCorrection_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoiceCorrection_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitInvoice_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoice_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitInvoice_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoice_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitInvoice_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoice_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitInvoice_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoice_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitInvoice_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoice_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitInvoice_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoice_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitInvoice_Update_ClosedAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoice_Update_ClosedAt not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitInvoice_Update_ClosedSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoice_Update_ClosedSum not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitInvoice_Update_Count(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoice_Update_Count not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitInvoice_Update_DocumentID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoice_Update_DocumentID not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitInvoice_Update_DocumentSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoice_Update_DocumentSum not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitInvoice_Update_IsClosed(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoice_Update_IsClosed not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitInvoice_Update_IsCorrective(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoice_Update_IsCorrective not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitInvoice_Update_LawsuitID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoice_Update_LawsuitID not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitInvoice_Update_Sum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoice_Update_Sum not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitInvoice_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoice_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitInvoice_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoice_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitInvoice_Update_BriefcaseID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoice_Update_BriefcaseID not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitInvoice_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoice_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitPaymentCorrection_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPaymentCorrection_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitPaymentCorrection_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPaymentCorrection_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitPaymentCorrection_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPaymentCorrection_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitPaymentCorrection_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPaymentCorrection_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitPaymentCorrection_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPaymentCorrection_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitPaymentCorrection_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPaymentCorrection_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitPaymentCorrection_Update_CorrectionDocumentID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPaymentCorrection_Update_CorrectionDocumentID not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitPaymentCorrection_Update_CorrectionDocumentSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPaymentCorrection_Update_CorrectionDocumentSum not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitPaymentCorrection_Update_LawsuitID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPaymentCorrection_Update_LawsuitID not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitPaymentCorrection_Update_PaymentDocumentID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPaymentCorrection_Update_PaymentDocumentID not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitPaymentCorrection_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPaymentCorrection_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitPaymentCorrection_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPaymentCorrection_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitPaymentCorrection_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPaymentCorrection_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitPayment_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPayment_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitPayment_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPayment_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitPayment_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPayment_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitPayment_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPayment_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitPayment_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPayment_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitPayment_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPayment_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitPayment_Update_DocumentID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPayment_Update_DocumentID not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitPayment_Update_DocumentSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPayment_Update_DocumentSum not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitPayment_Update_InvoiceID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPayment_Update_InvoiceID not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitPayment_Update_IsCorrective(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPayment_Update_IsCorrective not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitPayment_Update_LawsuitID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPayment_Update_LawsuitID not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitPayment_Update_Sum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPayment_Update_Sum not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitPayment_Update_LinkedAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPayment_Update_LinkedAt not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitPayment_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPayment_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitPayment_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPayment_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitPayment_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPayment_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitReasonType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitReasonType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitReasonType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitReasonType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitReasonType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitReasonType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitReasonType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitReasonType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitReasonType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitReasonType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitReasonType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitReasonType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitReasonType_Update_Code(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitReasonType_Update_Code not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitReasonType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitReasonType_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitReasonType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitReasonType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitReasonType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitReasonType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitReasonType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitReasonType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitReasonType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitReasonType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStageType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStageType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStageType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStageType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStageType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStageType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStageType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStageType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStageType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStageType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStageType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStageType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStageType_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStageType_Update_Code not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStageType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStageType_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStageType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStageType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStageType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStageType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStageType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStageType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStageType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStageType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusState_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusState_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusState_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusState_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusState_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusState_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusState_FillFromLawsuit(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_FillFromLawsuit not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusState_FindDebtSum(context.Context, *Request_Int64_Int64) (*ResponseFloat64, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_FindDebtSum not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusState_FindPreviousStatus(context.Context, *Request_Int64_Int64) (*ResponseInt64, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_FindPreviousStatus not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusState_Update_CommentID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_Update_CommentID not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusState_Update_InvoiceSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_Update_InvoiceSum not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusState_Update_LawsuitID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_Update_LawsuitID not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusState_Update_MainSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_Update_MainSum not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusState_Update_PaySum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_Update_PaySum not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusState_Update_PenaltySum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_Update_PenaltySum not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusState_Update_PennySum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_Update_PennySum not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusState_Update_RestrictSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_Update_RestrictSum not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusState_Update_StateDutySum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_Update_StateDutySum not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusState_Update_StatusAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_Update_StatusAt not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusState_Update_StatusID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_Update_StatusID not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusState_Update_Tag(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_Update_Tag not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusState_Update_TotalDebt(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_Update_TotalDebt not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusState_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusState_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusState_Update_ContractDebtSumAllTypes(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_Update_ContractDebtSumAllTypes not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusState_Update_BillsTotalSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_Update_BillsTotalSum not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusState_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusType_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusType_Update_Code not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusType_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusType_Update_IsClosed(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusType_Update_IsClosed not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusType_Update_ColorID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusType_Update_ColorID not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusType_Update_IsError(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusType_Update_IsError not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusType_Update_IsTech(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusType_Update_IsTech not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusType_Update_ViewSort(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusType_Update_ViewSort not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitStatusType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitType_Update_Code(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitType_Update_Code not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitType_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) LawsuitType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) LegalType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LegalType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) LegalType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LegalType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) LegalType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LegalType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) LegalType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LegalType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) LegalType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LegalType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) LegalType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LegalType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) LegalType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LegalType_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) LegalType_Update_IsIndividual(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LegalType_Update_IsIndividual not implemented")
}
func (UnimplementedPostgresMigrateServer) LegalType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LegalType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) LegalType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LegalType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) LegalType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LegalType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) LegalType_ReadAll(context.Context, *Request_Empty) (*ResponseMass, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LegalType_ReadAll not implemented")
}
func (UnimplementedPostgresMigrateServer) LegalType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LegalType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) LitigationType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LitigationType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) LitigationType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LitigationType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) LitigationType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LitigationType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) LitigationType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LitigationType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) LitigationType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LitigationType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) LitigationType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LitigationType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) LitigationType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LitigationType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) LitigationType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LitigationType_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) LitigationType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LitigationType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) LitigationType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LitigationType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) LitigationType_ReadAll(context.Context, *Request_Empty) (*ResponseMass, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LitigationType_ReadAll not implemented")
}
func (UnimplementedPostgresMigrateServer) LitigationType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LitigationType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageAttachement_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageAttachement_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageAttachement_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageAttachement_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageAttachement_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageAttachement_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageAttachement_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageAttachement_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageAttachement_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageAttachement_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageAttachement_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageAttachement_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageAttachement_Update_FilesID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageAttachement_Update_FilesID not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageAttachement_Update_MessagesID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageAttachement_Update_MessagesID not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageAttachement_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageAttachement_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageAttachement_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageAttachement_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageAttachement_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageAttachement_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageSendStatus_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageSendStatus_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageSendStatus_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageSendStatus_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageSendStatus_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageSendStatus_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageSendStatus_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageSendStatus_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageSendStatus_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageSendStatus_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageSendStatus_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageSendStatus_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageSendStatus_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageSendStatus_Update_Code not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageSendStatus_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageSendStatus_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageSendStatus_Update_FormalName(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageSendStatus_Update_FormalName not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageSendStatus_Update_IsDelivered(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageSendStatus_Update_IsDelivered not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageSendStatus_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageSendStatus_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageSendStatus_Update_NotifierID(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageSendStatus_Update_NotifierID not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageSendStatus_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageSendStatus_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageSendStatus_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageSendStatus_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageSendStatus_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageSendStatus_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageType_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageType_Update_Code not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageType_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) MessageType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) Message_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) Message_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) Message_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) Message_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) Message_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) Message_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) Message_FindBy_LawsuitID_MessageTypeID(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_FindBy_LawsuitID_MessageTypeID not implemented")
}
func (UnimplementedPostgresMigrateServer) Message_Update_ChannelTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_Update_ChannelTypeID not implemented")
}
func (UnimplementedPostgresMigrateServer) Message_Update_ContactFrom(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_Update_ContactFrom not implemented")
}
func (UnimplementedPostgresMigrateServer) Message_Update_ContactTo(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_Update_ContactTo not implemented")
}
func (UnimplementedPostgresMigrateServer) Message_Update_DirectionTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_Update_DirectionTypeID not implemented")
}
func (UnimplementedPostgresMigrateServer) Message_Update_EmployeeIdFrom(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_Update_EmployeeIdFrom not implemented")
}
func (UnimplementedPostgresMigrateServer) Message_Update_EmployeeIdTo(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_Update_EmployeeIdTo not implemented")
}
func (UnimplementedPostgresMigrateServer) Message_Update_ExtCode(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_Update_ExtCode not implemented")
}
func (UnimplementedPostgresMigrateServer) Message_Update_LawsuitID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_Update_LawsuitID not implemented")
}
func (UnimplementedPostgresMigrateServer) Message_Update_MailingCode(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_Update_MailingCode not implemented")
}
func (UnimplementedPostgresMigrateServer) Message_Update_MessageFileID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_Update_MessageFileID not implemented")
}
func (UnimplementedPostgresMigrateServer) Message_Update_MessageTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_Update_MessageTypeID not implemented")
}
func (UnimplementedPostgresMigrateServer) Message_Update_ReceiveResult(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_Update_ReceiveResult not implemented")
}
func (UnimplementedPostgresMigrateServer) Message_Update_ReceiveStatusID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_Update_ReceiveStatusID not implemented")
}
func (UnimplementedPostgresMigrateServer) Message_Update_ReceivedAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_Update_ReceivedAt not implemented")
}
func (UnimplementedPostgresMigrateServer) Message_Update_SendResult(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_Update_SendResult not implemented")
}
func (UnimplementedPostgresMigrateServer) Message_Update_SendStatusID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_Update_SendStatusID not implemented")
}
func (UnimplementedPostgresMigrateServer) Message_Update_SentAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_Update_SentAt not implemented")
}
func (UnimplementedPostgresMigrateServer) Message_Update_Topic(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_Update_Topic not implemented")
}
func (UnimplementedPostgresMigrateServer) Message_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) Message_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) Message_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) NotificationType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotificationType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) NotificationType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotificationType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) NotificationType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotificationType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) NotificationType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotificationType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) NotificationType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotificationType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) NotificationType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotificationType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) NotificationType_Update_BeforeTimeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotificationType_Update_BeforeTimeID not implemented")
}
func (UnimplementedPostgresMigrateServer) NotificationType_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotificationType_Update_Code not implemented")
}
func (UnimplementedPostgresMigrateServer) NotificationType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotificationType_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) NotificationType_Update_InTime(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotificationType_Update_InTime not implemented")
}
func (UnimplementedPostgresMigrateServer) NotificationType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotificationType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) NotificationType_Update_Value(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotificationType_Update_Value not implemented")
}
func (UnimplementedPostgresMigrateServer) NotificationType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotificationType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) NotificationType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotificationType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) NotificationType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotificationType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_FindByInnKpp(context.Context, *RequestInnKpp) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_FindByInnKpp not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_FindBy_InnKppLegaltype(context.Context, *Request_String_String_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_FindBy_InnKppLegaltype not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_FindByExtId(context.Context, *RequestExtID) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_FindByExtId not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_FindByExtID(context.Context, *RequestExtID) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_FindByExtID not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update_BankruptAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update_BankruptAt not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update_BookkeeperName(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update_BookkeeperName not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update_CategoryID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update_CategoryID not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update_ConnectionID not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update_Email(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update_Email not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update_FullName(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update_FullName not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update_INN(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update_INN not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update_IsActive(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update_IsActive not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update_IsBankrupt(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update_IsBankrupt not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update_IsLiquidated(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update_IsLiquidated not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update_KPP(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update_KPP not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update_LegalAddress(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update_LegalAddress not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update_LegalEmail(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update_LegalEmail not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update_LegalTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update_LegalTypeID not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update_LiquidateAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update_LiquidateAt not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update_ManagerName(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update_ManagerName not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update_NSIFlat(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update_NSIFlat not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update_NSIFlatID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update_NSIFlatID not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update_NSIID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update_NSIID not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update_OGRN(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update_OGRN not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update_OKATO(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update_OKATO not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update_OKPO(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update_OKPO not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update_Phone(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update_Phone not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update_PostAddress(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update_PostAddress not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update_PostAddressID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update_PostAddressID not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update_RegistrationAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update_RegistrationAt not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update_StateCode(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update_StateCode not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update_StateID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update_StateID not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update_WWW(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update_WWW not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_Update_LegalAddressStack(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update_LegalAddressStack not implemented")
}
func (UnimplementedPostgresMigrateServer) Organization_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationsFile_Read(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationsFile_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationsFile_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationsFile_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationsFile_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationsFile_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationsFile_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationsFile_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationsFile_Delete(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationsFile_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationsFile_Restore(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationsFile_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationsFile_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationsFile_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationsFile_Update_FileID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationsFile_Update_FileID not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationsFile_Update_OrganizationID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationsFile_Update_OrganizationID not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationsFile_ReadFromCache(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationsFile_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationsFile_ReadObject(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationsFile_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationCasebook_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCasebook_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationCasebook_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCasebook_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationCasebook_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCasebook_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationCasebook_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCasebook_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationCasebook_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCasebook_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationCasebook_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCasebook_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationCasebook_FindByInnKpp(context.Context, *RequestInnKpp) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCasebook_FindByInnKpp not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationCasebook_FindByInn(context.Context, *RequestString) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCasebook_FindByInn not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationCasebook_FindByOrganizationId(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCasebook_FindByOrganizationId not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationCasebook_Update_INN(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCasebook_Update_INN not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationCasebook_Update_JSONFileID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCasebook_Update_JSONFileID not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationCasebook_Update_JSONUpdatedAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCasebook_Update_JSONUpdatedAt not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationCasebook_Update_OrganizationID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCasebook_Update_OrganizationID not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationCasebook_Update_PDFFileID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCasebook_Update_PDFFileID not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationCasebook_Update_PDFUpdatedAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCasebook_Update_PDFUpdatedAt not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationCasebook_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCasebook_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationCasebook_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCasebook_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationCasebook_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCasebook_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationCategoryType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCategoryType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationCategoryType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCategoryType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationCategoryType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCategoryType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationCategoryType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCategoryType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationCategoryType_FindByExtID(context.Context, *RequestExtID) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCategoryType_FindByExtID not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationCategoryType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCategoryType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationCategoryType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCategoryType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationCategoryType_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCategoryType_Update_ConnectionID not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationCategoryType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCategoryType_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationCategoryType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCategoryType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationCategoryType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCategoryType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationCategoryType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCategoryType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationCategoryType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCategoryType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationStateType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationStateType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationStateType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationStateType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationStateType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationStateType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationStateType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationStateType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationStateType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationStateType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationStateType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationStateType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationStateType_Update_ActionIndividual(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationStateType_Update_ActionIndividual not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationStateType_Update_ActionOrganization(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationStateType_Update_ActionOrganization not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationStateType_Update_Code(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationStateType_Update_Code not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationStateType_Update_Color(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationStateType_Update_Color not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationStateType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationStateType_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationStateType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationStateType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationStateType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationStateType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationStateType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationStateType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationStateType_Update_IsBankrupt(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationStateType_Update_IsBankrupt not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationStateType_Update_IsLiquidated(context.Context, *Request_Int64_Bool) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationStateType_Update_IsLiquidated not implemented")
}
func (UnimplementedPostgresMigrateServer) OrganizationStateType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationStateType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) PaymentDay_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentDay_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) PaymentDay_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentDay_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) PaymentDay_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentDay_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) PaymentDay_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentDay_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) PaymentDay_FindByExtID(context.Context, *RequestExtID) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentDay_FindByExtID not implemented")
}
func (UnimplementedPostgresMigrateServer) PaymentDay_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentDay_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) PaymentDay_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentDay_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) PaymentDay_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentDay_Update_ConnectionID not implemented")
}
func (UnimplementedPostgresMigrateServer) PaymentDay_Update_ContractID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentDay_Update_ContractID not implemented")
}
func (UnimplementedPostgresMigrateServer) PaymentDay_Update_DateFrom(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentDay_Update_DateFrom not implemented")
}
func (UnimplementedPostgresMigrateServer) PaymentDay_Update_DateTo(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentDay_Update_DateTo not implemented")
}
func (UnimplementedPostgresMigrateServer) PaymentDay_Update_Day(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentDay_Update_Day not implemented")
}
func (UnimplementedPostgresMigrateServer) PaymentDay_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentDay_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) PaymentDay_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentDay_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) PaymentDay_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentDay_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) PaymentSchedule_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentSchedule_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) PaymentSchedule_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentSchedule_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) PaymentSchedule_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentSchedule_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) PaymentSchedule_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentSchedule_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) PaymentSchedule_FindByExtID(context.Context, *RequestExtID) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentSchedule_FindByExtID not implemented")
}
func (UnimplementedPostgresMigrateServer) PaymentSchedule_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentSchedule_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) PaymentSchedule_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentSchedule_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) PaymentSchedule_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentSchedule_Update_ConnectionID not implemented")
}
func (UnimplementedPostgresMigrateServer) PaymentSchedule_Update_ContractID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentSchedule_Update_ContractID not implemented")
}
func (UnimplementedPostgresMigrateServer) PaymentSchedule_Update_DateFrom(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentSchedule_Update_DateFrom not implemented")
}
func (UnimplementedPostgresMigrateServer) PaymentSchedule_Update_DateTo(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentSchedule_Update_DateTo not implemented")
}
func (UnimplementedPostgresMigrateServer) PaymentSchedule_Update_Day(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentSchedule_Update_Day not implemented")
}
func (UnimplementedPostgresMigrateServer) PaymentSchedule_Update_Percent(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentSchedule_Update_Percent not implemented")
}
func (UnimplementedPostgresMigrateServer) PaymentSchedule_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentSchedule_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) PaymentSchedule_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentSchedule_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) PaymentSchedule_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentSchedule_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItem_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItem_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItem_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItem_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItem_FindByExtID(context.Context, *RequestExtID) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_FindByExtID not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItem_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItem_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItem_Update_BillingMonth(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_Update_BillingMonth not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItem_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_Update_ConnectionID not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItem_Update_ContractID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_Update_ContractID not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItem_Update_DateFrom(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_Update_DateFrom not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItem_Update_DateTo(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_Update_DateTo not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItem_Update_DaysCount(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_Update_DaysCount not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItem_Update_DebtSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_Update_DebtSum not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItem_Update_DebtorCategoryID(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_Update_DebtorCategoryID not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItem_Update_Dividend(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_Update_Dividend not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItem_Update_Divider(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_Update_Divider not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItem_Update_DocumentInvoiceID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_Update_DocumentInvoiceID not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItem_Update_Flags(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_Update_Flags not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItem_Update_PaymentDueAt(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_Update_PaymentDueAt not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItem_Update_PenaltyCalculationItemsTypeID(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_Update_PenaltyCalculationItemsTypeID not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItem_Update_Percent(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_Update_Percent not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItem_Update_Sum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_Update_Sum not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItem_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItem_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItem_Update_DebtCollectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_Update_DebtCollectionID not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItem_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItemsType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItemsType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItemsType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItemsType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItemsType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItemsType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItemsType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItemsType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItemsType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItemsType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItemsType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItemsType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItemsType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItemsType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItemsType_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItemsType_Update_Code not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItemsType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItemsType_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItemsType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItemsType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItemsType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItemsType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) PenaltyCalculationItemsType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItemsType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) PriorityType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PriorityType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) PriorityType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PriorityType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) PriorityType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PriorityType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) PriorityType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PriorityType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) PriorityType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PriorityType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) PriorityType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PriorityType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) PriorityType_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PriorityType_Update_Code not implemented")
}
func (UnimplementedPostgresMigrateServer) PriorityType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PriorityType_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) PriorityType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PriorityType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) PriorityType_Update_Value(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PriorityType_Update_Value not implemented")
}
func (UnimplementedPostgresMigrateServer) PriorityType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PriorityType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) PriorityType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PriorityType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) PriorityType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PriorityType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) RepeatType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RepeatType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) RepeatType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RepeatType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) RepeatType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RepeatType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) RepeatType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RepeatType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) RepeatType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RepeatType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) RepeatType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RepeatType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) RepeatType_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RepeatType_Update_Code not implemented")
}
func (UnimplementedPostgresMigrateServer) RepeatType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RepeatType_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) RepeatType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RepeatType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) RepeatType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RepeatType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) RepeatType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RepeatType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) RepeatType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RepeatType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) ServiceProvider_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceProvider_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) ServiceProvider_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceProvider_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) ServiceProvider_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceProvider_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) ServiceProvider_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceProvider_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) ServiceProvider_FindByExtID(context.Context, *RequestExtID) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceProvider_FindByExtID not implemented")
}
func (UnimplementedPostgresMigrateServer) ServiceProvider_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceProvider_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) ServiceProvider_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceProvider_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) ServiceProvider_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceProvider_Update_ConnectionID not implemented")
}
func (UnimplementedPostgresMigrateServer) ServiceProvider_Update_DateFrom(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceProvider_Update_DateFrom not implemented")
}
func (UnimplementedPostgresMigrateServer) ServiceProvider_Update_DateTo(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceProvider_Update_DateTo not implemented")
}
func (UnimplementedPostgresMigrateServer) ServiceProvider_Update_OrganizationID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceProvider_Update_OrganizationID not implemented")
}
func (UnimplementedPostgresMigrateServer) ServiceProvider_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceProvider_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) ServiceProvider_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceProvider_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) ServiceProvider_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceProvider_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) ServiceType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) ServiceType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) ServiceType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) ServiceType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) ServiceType_FindByExtID(context.Context, *RequestExtID) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceType_FindByExtID not implemented")
}
func (UnimplementedPostgresMigrateServer) ServiceType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) ServiceType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) ServiceType_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceType_Update_Code not implemented")
}
func (UnimplementedPostgresMigrateServer) ServiceType_Update_ConnectionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceType_Update_ConnectionID not implemented")
}
func (UnimplementedPostgresMigrateServer) ServiceType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceType_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) ServiceType_Update_FullName(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceType_Update_FullName not implemented")
}
func (UnimplementedPostgresMigrateServer) ServiceType_Update_Measure(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceType_Update_Measure not implemented")
}
func (UnimplementedPostgresMigrateServer) ServiceType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) ServiceType_Update_ServiceProviderID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceType_Update_ServiceProviderID not implemented")
}
func (UnimplementedPostgresMigrateServer) ServiceType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) ServiceType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) ServiceType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDuty_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDuty_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDuty_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDuty_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDuty_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDuty_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDuty_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDuty_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDuty_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDuty_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDuty_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDuty_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDuty_Update_CourtID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDuty_Update_CourtID not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDuty_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDuty_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDuty_Update_LawsuitID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDuty_Update_LawsuitID not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDuty_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDuty_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDuty_Update_RequestDate(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDuty_Update_RequestDate not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDuty_Update_RequestNumber(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDuty_Update_RequestNumber not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDuty_Update_Sum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDuty_Update_Sum not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDuty_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDuty_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDuty_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDuty_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDuty_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDuty_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyConsumption_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyConsumption_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyConsumption_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyConsumption_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyConsumption_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyConsumption_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyConsumption_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyConsumption_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyConsumption_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyConsumption_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyConsumption_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyConsumption_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyConsumption_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyConsumption_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyConsumption_Update_CourtSuitID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyConsumption_Update_CourtSuitID not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyConsumption_Update_StateDutyPaymentsPaymentID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyConsumption_Update_StateDutyPaymentsPaymentID not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyConsumption_Update_StateDutyPaymentsReturnID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyConsumption_Update_StateDutyPaymentsReturnID not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyConsumption_Update_StateDutyRegistryID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyConsumption_Update_StateDutyRegistryID not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyConsumption_Update_StateDutySum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyConsumption_Update_StateDutySum not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyConsumption_Update_StatusID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyConsumption_Update_StatusID not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyConsumption_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyConsumption_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyConsumption_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyConsumption_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyConsumptionsFile_Read(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyConsumptionsFile_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyConsumptionsFile_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyConsumptionsFile_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyConsumptionsFile_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyConsumptionsFile_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyConsumptionsFile_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyConsumptionsFile_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyConsumptionsFile_Delete(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyConsumptionsFile_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyConsumptionsFile_Restore(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyConsumptionsFile_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyConsumptionsFile_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyConsumptionsFile_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyConsumptionsFile_Update_ConsumptionID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyConsumptionsFile_Update_ConsumptionID not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyConsumptionsFile_Update_FileID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyConsumptionsFile_Update_FileID not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyConsumptionsFile_ReadFromCache(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyConsumptionsFile_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyConsumptionsFile_ReadObject(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyConsumptionsFile_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyPaymentType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyPaymentType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyPaymentType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyPaymentType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyPaymentType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyPaymentType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyPaymentType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyPaymentType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyPaymentType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyPaymentType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyPaymentType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyPaymentType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyPaymentType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyPaymentType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyPaymentType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyPaymentType_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyPaymentType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyPaymentType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyPaymentType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyPaymentType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyPaymentType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyPaymentType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyPayment_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyPayment_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyPayment_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyPayment_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyPayment_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyPayment_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyPayment_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyPayment_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyPayment_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyPayment_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyPayment_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyPayment_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyPayment_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyPayment_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyPayment_Update_BranchID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyPayment_Update_BranchID not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyPayment_Update_CourtID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyPayment_Update_CourtID not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyPayment_Update_DocumentSum(context.Context, *Request_Int64_Float64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyPayment_Update_DocumentSum not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyPayment_Update_FileID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyPayment_Update_FileID not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyPayment_Update_Number(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyPayment_Update_Number not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyPayment_Update_PaymentDate(context.Context, *Request_Int64_Date) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyPayment_Update_PaymentDate not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyPayment_Update_StateDutyPaymentTypeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyPayment_Update_StateDutyPaymentTypeID not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyPayment_Update_TaxOfficeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyPayment_Update_TaxOfficeID not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyPayment_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyPayment_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyPayment_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyPayment_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyRegistry_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyRegistry_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyRegistry_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyRegistry_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyRegistry_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyRegistry_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyRegistry_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyRegistry_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyRegistry_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyRegistry_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyRegistry_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyRegistry_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyRegistry_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyRegistry_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyRegistry_Update_BranchID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyRegistry_Update_BranchID not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyRegistry_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyRegistry_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyRegistry_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyRegistry_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyStatus_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyStatus_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyStatus_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyStatus_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyStatus_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyStatus_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyStatus_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyStatus_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyStatus_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyStatus_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyStatus_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyStatus_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyStatus_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyStatus_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyStatus_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyStatus_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyStatus_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyStatus_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyStatus_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyStatus_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) StateDutyStatus_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDutyStatus_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) TableName_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TableName_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) TableName_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TableName_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) TableName_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TableName_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) TableName_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TableName_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) TableName_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TableName_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) TableName_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TableName_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) TableName_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TableName_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) TableName_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TableName_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) TableName_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TableName_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) TableName_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TableName_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) TableName_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TableName_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) TaxOffice_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TaxOffice_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) TaxOffice_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TaxOffice_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) TaxOffice_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TaxOffice_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) TaxOffice_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TaxOffice_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) TaxOffice_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TaxOffice_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) TaxOffice_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TaxOffice_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) TaxOffice_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TaxOffice_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) TaxOffice_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TaxOffice_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) TaxOffice_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TaxOffice_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) TaxOffice_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TaxOffice_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) TaxOffice_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TaxOffice_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) UserRole_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRole_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) UserRole_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRole_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) UserRole_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRole_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) UserRole_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRole_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) UserRole_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRole_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) UserRole_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRole_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) UserRole_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRole_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) UserRole_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRole_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) UserRole_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRole_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) UserRole_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRole_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) UserRole_ReadAll(context.Context, *Request_Empty) (*ResponseMass, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRole_ReadAll not implemented")
}
func (UnimplementedPostgresMigrateServer) UserRole_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRole_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) UserRolesMembership_Read(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRolesMembership_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) UserRolesMembership_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRolesMembership_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) UserRolesMembership_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRolesMembership_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) UserRolesMembership_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRolesMembership_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) UserRolesMembership_Delete(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRolesMembership_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) UserRolesMembership_Restore(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRolesMembership_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) UserRolesMembership_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRolesMembership_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) UserRolesMembership_Update_EmployeeID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRolesMembership_Update_EmployeeID not implemented")
}
func (UnimplementedPostgresMigrateServer) UserRolesMembership_Update_UserRoleID(context.Context, *Request_Int64_Int64) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRolesMembership_Update_UserRoleID not implemented")
}
func (UnimplementedPostgresMigrateServer) UserRolesMembership_ReadFromCache(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRolesMembership_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) UserRolesMembership_FindMassBy_EmployeeID(context.Context, *Request_Int64) (*ResponseMass, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRolesMembership_FindMassBy_EmployeeID not implemented")
}
func (UnimplementedPostgresMigrateServer) UserRolesMembership_FindMassBy_UserRoleID(context.Context, *Request_Int64) (*ResponseMass, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRolesMembership_FindMassBy_UserRoleID not implemented")
}
func (UnimplementedPostgresMigrateServer) UserRolesMembership_ReadObject(context.Context, *Request_Int64_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRolesMembership_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) WhiteListReasonType_Read(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WhiteListReasonType_Read not implemented")
}
func (UnimplementedPostgresMigrateServer) WhiteListReasonType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WhiteListReasonType_Create not implemented")
}
func (UnimplementedPostgresMigrateServer) WhiteListReasonType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WhiteListReasonType_Update not implemented")
}
func (UnimplementedPostgresMigrateServer) WhiteListReasonType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WhiteListReasonType_Save not implemented")
}
func (UnimplementedPostgresMigrateServer) WhiteListReasonType_Delete(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WhiteListReasonType_Delete not implemented")
}
func (UnimplementedPostgresMigrateServer) WhiteListReasonType_Restore(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WhiteListReasonType_Restore not implemented")
}
func (UnimplementedPostgresMigrateServer) WhiteListReasonType_Update_Code(context.Context, *Request_Int64_Int32) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WhiteListReasonType_Update_Code not implemented")
}
func (UnimplementedPostgresMigrateServer) WhiteListReasonType_Update_Description(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WhiteListReasonType_Update_Description not implemented")
}
func (UnimplementedPostgresMigrateServer) WhiteListReasonType_Update_Name(context.Context, *Request_Int64_String) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WhiteListReasonType_Update_Name not implemented")
}
func (UnimplementedPostgresMigrateServer) WhiteListReasonType_ReadFromCache(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WhiteListReasonType_ReadFromCache not implemented")
}
func (UnimplementedPostgresMigrateServer) WhiteListReasonType_UpdateManyFields(context.Context, *Request_Model_MassString) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WhiteListReasonType_UpdateManyFields not implemented")
}
func (UnimplementedPostgresMigrateServer) WhiteListReasonType_ReadObject(context.Context, *Request_Int64) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WhiteListReasonType_ReadObject not implemented")
}
func (UnimplementedPostgresMigrateServer) mustEmbedUnimplementedPostgresMigrateServer() {}

// UnsafePostgresMigrateServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PostgresMigrateServer will
// result in compilation errors.
type UnsafePostgresMigrateServer interface {
	mustEmbedUnimplementedPostgresMigrateServer()
}

func RegisterPostgresMigrateServer(s grpc.ServiceRegistrar, srv PostgresMigrateServer) {
	s.RegisterService(&PostgresMigrate_ServiceDesc, srv)
}

func _PostgresMigrate_PostgresMigratePgAttribute_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_String_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Read(ctx, req.(*Request_String_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgAttribute_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgAttribute_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgAttribute_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgAttribute_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgAttribute_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgAttribute_Update_Attalign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_String_Int64_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attalign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attalign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attalign(ctx, req.(*Request_String_Int64_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgAttribute_Update_Attbyval_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_String_Int64_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attbyval(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attbyval",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attbyval(ctx, req.(*Request_String_Int64_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgAttribute_Update_Attcacheoff_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_String_Int64_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attcacheoff(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attcacheoff",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attcacheoff(ctx, req.(*Request_String_Int64_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgAttribute_Update_Attcollation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_String_Int64_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attcollation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attcollation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attcollation(ctx, req.(*Request_String_Int64_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgAttribute_Update_Attgenerated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_String_Int64_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attgenerated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attgenerated",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attgenerated(ctx, req.(*Request_String_Int64_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgAttribute_Update_Atthasdef_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_String_Int64_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Atthasdef(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Atthasdef",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Atthasdef(ctx, req.(*Request_String_Int64_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgAttribute_Update_Atthasmissing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_String_Int64_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Atthasmissing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Atthasmissing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Atthasmissing(ctx, req.(*Request_String_Int64_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgAttribute_Update_Attidentity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_String_Int64_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attidentity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attidentity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attidentity(ctx, req.(*Request_String_Int64_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgAttribute_Update_Attinhcount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_String_Int64_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attinhcount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attinhcount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attinhcount(ctx, req.(*Request_String_Int64_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgAttribute_Update_Attisdropped_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_String_Int64_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attisdropped(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attisdropped",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attisdropped(ctx, req.(*Request_String_Int64_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgAttribute_Update_Attislocal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_String_Int64_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attislocal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attislocal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attislocal(ctx, req.(*Request_String_Int64_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgAttribute_Update_Attlen_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_String_Int64_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attlen(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attlen",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attlen(ctx, req.(*Request_String_Int64_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgAttribute_Update_Attname_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_String_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attname(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attname",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attname(ctx, req.(*Request_String_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgAttribute_Update_Attndims_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_String_Int64_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attndims(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attndims",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attndims(ctx, req.(*Request_String_Int64_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgAttribute_Update_Attnotnull_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_String_Int64_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attnotnull(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attnotnull",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attnotnull(ctx, req.(*Request_String_Int64_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgAttribute_Update_Attnum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_String_Int64_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attnum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attnum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attnum(ctx, req.(*Request_String_Int64_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgAttribute_Update_Attrelid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_String_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attrelid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attrelid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attrelid(ctx, req.(*Request_String_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgAttribute_Update_Attstattarget_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_String_Int64_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attstattarget(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attstattarget",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attstattarget(ctx, req.(*Request_String_Int64_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgAttribute_Update_Attstorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_String_Int64_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attstorage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Attstorage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Attstorage(ctx, req.(*Request_String_Int64_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgAttribute_Update_Atttypid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_String_Int64_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Atttypid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Atttypid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Atttypid(ctx, req.(*Request_String_Int64_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgAttribute_Update_Atttypmod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_String_Int64_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Atttypmod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_Atttypmod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_Atttypmod(ctx, req.(*Request_String_Int64_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgAttribute_Update_VersionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_String_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_VersionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgAttribute_Update_VersionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_Update_VersionID(ctx, req.(*Request_String_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgAttribute_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_String_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgAttribute_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_ReadFromCache(ctx, req.(*Request_String_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgAttribute_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_String_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgAttribute_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgAttribute_ReadObject(ctx, req.(*Request_String_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Read(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Update_Oid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Oid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Oid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Oid(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Update_Relallvisible_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relallvisible(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relallvisible",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relallvisible(ctx, req.(*Request_Int64_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Update_Relam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relam(ctx, req.(*Request_Int64_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Update_Relchecks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relchecks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relchecks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relchecks(ctx, req.(*Request_Int64_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Update_Relfilenode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relfilenode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relfilenode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relfilenode(ctx, req.(*Request_Int64_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Update_Relforcerowsecurity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relforcerowsecurity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relforcerowsecurity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relforcerowsecurity(ctx, req.(*Request_Int64_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Update_Relfrozenxid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relfrozenxid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relfrozenxid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relfrozenxid(ctx, req.(*Request_Int64_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Update_Relhasindex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relhasindex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relhasindex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relhasindex(ctx, req.(*Request_Int64_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Update_Relhasrules_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relhasrules(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relhasrules",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relhasrules(ctx, req.(*Request_Int64_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Update_Relhassubclass_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relhassubclass(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relhassubclass",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relhassubclass(ctx, req.(*Request_Int64_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Update_Relhastriggers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relhastriggers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relhastriggers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relhastriggers(ctx, req.(*Request_Int64_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Update_Relispartition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relispartition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relispartition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relispartition(ctx, req.(*Request_Int64_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Update_Relispopulated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relispopulated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relispopulated",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relispopulated(ctx, req.(*Request_Int64_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Update_Relisshared_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relisshared(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relisshared",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relisshared(ctx, req.(*Request_Int64_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Update_Relkind_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relkind(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relkind",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relkind(ctx, req.(*Request_Int64_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Update_Relminmxid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relminmxid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relminmxid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relminmxid(ctx, req.(*Request_Int64_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Update_Relname_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relname(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relname",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relname(ctx, req.(*Request_Int64_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Update_Relnamespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relnamespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relnamespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relnamespace(ctx, req.(*Request_Int64_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Update_Relnatts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relnatts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relnatts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relnatts(ctx, req.(*Request_Int64_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Update_Reloftype_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Reloftype(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Reloftype",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Reloftype(ctx, req.(*Request_Int64_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Update_Relowner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relowner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relowner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relowner(ctx, req.(*Request_Int64_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Update_Relpages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relpages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relpages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relpages(ctx, req.(*Request_Int64_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Update_Relpersistence_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relpersistence(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relpersistence",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relpersistence(ctx, req.(*Request_Int64_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Update_Relreplident_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relreplident(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relreplident",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relreplident(ctx, req.(*Request_Int64_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Update_Relrewrite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relrewrite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relrewrite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relrewrite(ctx, req.(*Request_Int64_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Update_Relrowsecurity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relrowsecurity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Relrowsecurity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Relrowsecurity(ctx, req.(*Request_Int64_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Update_Reltablespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Reltablespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Reltablespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Reltablespace(ctx, req.(*Request_Int64_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Update_Reltoastrelid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Reltoastrelid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Reltoastrelid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Reltoastrelid(ctx, req.(*Request_Int64_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Update_Reltuples_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Float32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Reltuples(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Reltuples",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Reltuples(ctx, req.(*Request_Int64_Int64_Float32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Update_Reltype_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Reltype(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_Reltype",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_Reltype(ctx, req.(*Request_Int64_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_Update_VersionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_VersionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_Update_VersionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_Update_VersionID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_ReadFromCache(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgClass_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgClass_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgClass_ReadObject(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgConstraint_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Read(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgConstraint_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgConstraint_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgConstraint_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgConstraint_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgConstraint_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgConstraint_Update_Condeferrable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Condeferrable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Condeferrable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Condeferrable(ctx, req.(*Request_Int64_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgConstraint_Update_Condeferred_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Condeferred(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Condeferred",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Condeferred(ctx, req.(*Request_Int64_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgConstraint_Update_Conexclop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Conexclop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Conexclop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Conexclop(ctx, req.(*Request_Int64_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgConstraint_Update_Confdeltype_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Confdeltype(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Confdeltype",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Confdeltype(ctx, req.(*Request_Int64_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgConstraint_Update_Conffeqop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Conffeqop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Conffeqop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Conffeqop(ctx, req.(*Request_Int64_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgConstraint_Update_Confkey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Confkey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Confkey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Confkey(ctx, req.(*Request_Int64_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgConstraint_Update_Confmatchtype_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Confmatchtype(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Confmatchtype",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Confmatchtype(ctx, req.(*Request_Int64_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgConstraint_Update_Confrelid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Confrelid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Confrelid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Confrelid(ctx, req.(*Request_Int64_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgConstraint_Update_Confupdtype_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Confupdtype(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Confupdtype",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Confupdtype(ctx, req.(*Request_Int64_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgConstraint_Update_Conindid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Conindid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Conindid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Conindid(ctx, req.(*Request_Int64_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgConstraint_Update_Coninhcount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Coninhcount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Coninhcount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Coninhcount(ctx, req.(*Request_Int64_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgConstraint_Update_Conislocal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Conislocal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Conislocal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Conislocal(ctx, req.(*Request_Int64_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgConstraint_Update_Conkey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Conkey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Conkey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Conkey(ctx, req.(*Request_Int64_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgConstraint_Update_Conname_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Conname(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Conname",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Conname(ctx, req.(*Request_Int64_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgConstraint_Update_Connamespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Connamespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Connamespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Connamespace(ctx, req.(*Request_Int64_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgConstraint_Update_Connoinherit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Connoinherit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Connoinherit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Connoinherit(ctx, req.(*Request_Int64_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgConstraint_Update_Conparentid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Conparentid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Conparentid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Conparentid(ctx, req.(*Request_Int64_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgConstraint_Update_Conpfeqop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Conpfeqop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Conpfeqop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Conpfeqop(ctx, req.(*Request_Int64_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgConstraint_Update_Conppeqop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Conppeqop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Conppeqop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Conppeqop(ctx, req.(*Request_Int64_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgConstraint_Update_Conrelid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Conrelid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Conrelid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Conrelid(ctx, req.(*Request_Int64_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgConstraint_Update_Contype_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Contype(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Contype",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Contype(ctx, req.(*Request_Int64_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgConstraint_Update_Contypid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Contypid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Contypid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Contypid(ctx, req.(*Request_Int64_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgConstraint_Update_Convalidated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Convalidated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Convalidated",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Convalidated(ctx, req.(*Request_Int64_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgConstraint_Update_Oid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Oid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_Oid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_Oid(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgConstraint_Update_VersionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_VersionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgConstraint_Update_VersionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_Update_VersionID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgConstraint_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgConstraint_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_ReadFromCache(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgConstraint_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgConstraint_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgConstraint_ReadObject(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgDescription_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int32_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgDescription_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgDescription_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgDescription_Read(ctx, req.(*Request_Int64_Int64_Int32_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgDescription_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgDescription_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgDescription_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgDescription_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgDescription_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgDescription_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgDescription_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgDescription_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgDescription_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgDescription_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgDescription_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgDescription_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgDescription_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgDescription_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgDescription_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgDescription_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgDescription_Update_Classoid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int32_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgDescription_Update_Classoid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgDescription_Update_Classoid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgDescription_Update_Classoid(ctx, req.(*Request_Int64_Int64_Int32_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgDescription_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int32_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgDescription_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgDescription_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgDescription_Update_Description(ctx, req.(*Request_Int64_Int64_Int32_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgDescription_Update_Objoid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int32_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgDescription_Update_Objoid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgDescription_Update_Objoid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgDescription_Update_Objoid(ctx, req.(*Request_Int64_Int64_Int32_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgDescription_Update_Objsubid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int32_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgDescription_Update_Objsubid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgDescription_Update_Objsubid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgDescription_Update_Objsubid(ctx, req.(*Request_Int64_Int64_Int32_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgDescription_Update_VersionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int32_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgDescription_Update_VersionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgDescription_Update_VersionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgDescription_Update_VersionID(ctx, req.(*Request_Int64_Int64_Int32_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgDescription_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int32_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgDescription_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgDescription_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgDescription_ReadFromCache(ctx, req.(*Request_Int64_Int64_Int32_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgDescription_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int32_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgDescription_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgDescription_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgDescription_ReadObject(ctx, req.(*Request_Int64_Int64_Int32_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgIndex_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgIndex_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Read(ctx, req.(*Request_Int64_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgIndex_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgIndex_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgIndex_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgIndex_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgIndex_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgIndex_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgIndex_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgIndex_Update_Indcheckxmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indcheckxmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indcheckxmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indcheckxmin(ctx, req.(*Request_Int64_Int64_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgIndex_Update_Indclass_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indclass(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indclass",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indclass(ctx, req.(*Request_Int64_Int64_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgIndex_Update_Indcollation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indcollation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indcollation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indcollation(ctx, req.(*Request_Int64_Int64_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgIndex_Update_Indexprs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indexprs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indexprs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indexprs(ctx, req.(*Request_Int64_Int64_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgIndex_Update_Indexrelid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indexrelid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indexrelid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indexrelid(ctx, req.(*Request_Int64_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgIndex_Update_Indimmediate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indimmediate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indimmediate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indimmediate(ctx, req.(*Request_Int64_Int64_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgIndex_Update_Indisclustered_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indisclustered(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indisclustered",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indisclustered(ctx, req.(*Request_Int64_Int64_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgIndex_Update_Indisexclusion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indisexclusion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indisexclusion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indisexclusion(ctx, req.(*Request_Int64_Int64_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgIndex_Update_Indislive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indislive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indislive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indislive(ctx, req.(*Request_Int64_Int64_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgIndex_Update_Indisprimary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indisprimary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indisprimary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indisprimary(ctx, req.(*Request_Int64_Int64_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgIndex_Update_Indisready_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indisready(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indisready",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indisready(ctx, req.(*Request_Int64_Int64_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgIndex_Update_Indisreplident_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indisreplident(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indisreplident",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indisreplident(ctx, req.(*Request_Int64_Int64_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgIndex_Update_Indisunique_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indisunique(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indisunique",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indisunique(ctx, req.(*Request_Int64_Int64_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgIndex_Update_Indisvalid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indisvalid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indisvalid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indisvalid(ctx, req.(*Request_Int64_Int64_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgIndex_Update_Indkey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indkey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indkey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indkey(ctx, req.(*Request_Int64_Int64_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgIndex_Update_Indnatts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indnatts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indnatts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indnatts(ctx, req.(*Request_Int64_Int64_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgIndex_Update_Indnkeyatts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indnkeyatts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indnkeyatts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indnkeyatts(ctx, req.(*Request_Int64_Int64_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgIndex_Update_Indoption_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indoption(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indoption",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indoption(ctx, req.(*Request_Int64_Int64_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgIndex_Update_Indpred_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indpred(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indpred",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indpred(ctx, req.(*Request_Int64_Int64_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgIndex_Update_Indrelid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indrelid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_Indrelid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_Indrelid(ctx, req.(*Request_Int64_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgIndex_Update_VersionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_VersionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgIndex_Update_VersionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_Update_VersionID(ctx, req.(*Request_Int64_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgIndex_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgIndex_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_ReadFromCache(ctx, req.(*Request_Int64_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgIndex_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgIndex_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgIndex_ReadObject(ctx, req.(*Request_Int64_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgNamespace_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgNamespace_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgNamespace_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgNamespace_Read(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgNamespace_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgNamespace_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgNamespace_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgNamespace_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgNamespace_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgNamespace_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgNamespace_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgNamespace_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgNamespace_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgNamespace_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgNamespace_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgNamespace_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgNamespace_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgNamespace_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgNamespace_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgNamespace_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgNamespace_Update_Nspacl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgNamespace_Update_Nspacl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgNamespace_Update_Nspacl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgNamespace_Update_Nspacl(ctx, req.(*Request_Int64_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgNamespace_Update_Nspname_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgNamespace_Update_Nspname(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgNamespace_Update_Nspname",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgNamespace_Update_Nspname(ctx, req.(*Request_Int64_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgNamespace_Update_Nspowner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgNamespace_Update_Nspowner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgNamespace_Update_Nspowner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgNamespace_Update_Nspowner(ctx, req.(*Request_Int64_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgNamespace_Update_Oid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgNamespace_Update_Oid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgNamespace_Update_Oid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgNamespace_Update_Oid(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgNamespace_Update_VersionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgNamespace_Update_VersionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgNamespace_Update_VersionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgNamespace_Update_VersionID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgNamespace_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgNamespace_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgNamespace_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgNamespace_ReadFromCache(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigratePgNamespace_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigratePgNamespace_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigratePgNamespace_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigratePgNamespace_ReadObject(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigrateVersion_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigrateVersion_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigrateVersion_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigrateVersion_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigrateVersion_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigrateVersion_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigrateVersion_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigrateVersion_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigrateVersion_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigrateVersion_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigrateVersion_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigrateVersion_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigrateVersion_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigrateVersion_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigrateVersion_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigrateVersion_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigrateVersion_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigrateVersion_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigrateVersion_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigrateVersion_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigrateVersion_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigrateVersion_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigrateVersion_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigrateVersion_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigrateVersion_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigrateVersion_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigrateVersion_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigrateVersion_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigrateVersion_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigrateVersion_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigrateVersion_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigrateVersion_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PostgresMigrateVersion_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PostgresMigrateVersion_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PostgresMigrateVersion_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PostgresMigrateVersion_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_AccountingArea_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).AccountingArea_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/AccountingArea_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).AccountingArea_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_AccountingArea_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).AccountingArea_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/AccountingArea_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).AccountingArea_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_AccountingArea_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).AccountingArea_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/AccountingArea_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).AccountingArea_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_AccountingArea_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).AccountingArea_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/AccountingArea_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).AccountingArea_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_AccountingArea_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).AccountingArea_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/AccountingArea_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).AccountingArea_FindByExtID(ctx, req.(*RequestExtID))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_AccountingArea_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).AccountingArea_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/AccountingArea_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).AccountingArea_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_AccountingArea_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).AccountingArea_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/AccountingArea_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).AccountingArea_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_AccountingArea_Update_Code_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).AccountingArea_Update_Code(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/AccountingArea_Update_Code",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).AccountingArea_Update_Code(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_AccountingArea_Update_ConnectionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).AccountingArea_Update_ConnectionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/AccountingArea_Update_ConnectionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).AccountingArea_Update_ConnectionID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_AccountingArea_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).AccountingArea_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/AccountingArea_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).AccountingArea_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_AccountingArea_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).AccountingArea_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/AccountingArea_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).AccountingArea_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_AccountingArea_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).AccountingArea_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/AccountingArea_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).AccountingArea_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_AccountingArea_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).AccountingArea_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/AccountingArea_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).AccountingArea_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_AccountingArea_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).AccountingArea_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/AccountingArea_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).AccountingArea_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_AccrualType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).AccrualType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/AccrualType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).AccrualType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_AccrualType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).AccrualType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/AccrualType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).AccrualType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_AccrualType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).AccrualType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/AccrualType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).AccrualType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_AccrualType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).AccrualType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/AccrualType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).AccrualType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_AccrualType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).AccrualType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/AccrualType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).AccrualType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_AccrualType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).AccrualType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/AccrualType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).AccrualType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_AccrualType_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).AccrualType_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/AccrualType_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).AccrualType_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_AccrualType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).AccrualType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/AccrualType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).AccrualType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_AccrualType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).AccrualType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/AccrualType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).AccrualType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_AccrualType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).AccrualType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/AccrualType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).AccrualType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_AccrualType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).AccrualType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/AccrualType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).AccrualType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Balance_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Balance_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Balance_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Balance_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Balance_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Balance_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Balance_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Balance_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Balance_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Balance_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Balance_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Balance_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Balance_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Balance_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Balance_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Balance_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Balance_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Balance_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Balance_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Balance_FindByExtID(ctx, req.(*RequestExtID))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Balance_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Balance_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Balance_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Balance_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Balance_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Balance_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Balance_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Balance_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Balance_Update_BillingMonth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Balance_Update_BillingMonth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Balance_Update_BillingMonth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Balance_Update_BillingMonth(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Balance_Update_ConnectionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Balance_Update_ConnectionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Balance_Update_ConnectionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Balance_Update_ConnectionID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Balance_Update_ContractID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Balance_Update_ContractID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Balance_Update_ContractID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Balance_Update_ContractID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Balance_Update_DebtTypeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Balance_Update_DebtTypeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Balance_Update_DebtTypeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Balance_Update_DebtTypeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Balance_Update_DocumentAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Balance_Update_DocumentAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Balance_Update_DocumentAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Balance_Update_DocumentAt(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Balance_Update_DocumentInvoiceID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Balance_Update_DocumentInvoiceID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Balance_Update_DocumentInvoiceID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Balance_Update_DocumentInvoiceID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Balance_Update_DocumentPaymentID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Balance_Update_DocumentPaymentID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Balance_Update_DocumentPaymentID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Balance_Update_DocumentPaymentID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Balance_Update_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Balance_Update_Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Balance_Update_Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Balance_Update_Sum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Balance_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Balance_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Balance_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Balance_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Balance_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Balance_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Balance_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Balance_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Balance_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Balance_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Balance_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Balance_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BankAccountOrganization_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BankAccountOrganization_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BankAccountOrganization_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BankAccountOrganization_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BankAccountOrganization_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BankAccountOrganization_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BankAccountOrganization_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BankAccountOrganization_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BankAccountOrganization_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BankAccountOrganization_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BankAccountOrganization_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BankAccountOrganization_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BankAccountOrganization_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BankAccountOrganization_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BankAccountOrganization_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BankAccountOrganization_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BankAccountOrganization_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BankAccountOrganization_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BankAccountOrganization_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BankAccountOrganization_FindByExtID(ctx, req.(*RequestExtID))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BankAccountOrganization_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BankAccountOrganization_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BankAccountOrganization_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BankAccountOrganization_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BankAccountOrganization_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BankAccountOrganization_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BankAccountOrganization_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BankAccountOrganization_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BankAccountOrganization_Update_AccountNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BankAccountOrganization_Update_AccountNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BankAccountOrganization_Update_AccountNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BankAccountOrganization_Update_AccountNumber(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BankAccountOrganization_Update_BankID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BankAccountOrganization_Update_BankID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BankAccountOrganization_Update_BankID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BankAccountOrganization_Update_BankID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BankAccountOrganization_Update_ConnectionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BankAccountOrganization_Update_ConnectionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BankAccountOrganization_Update_ConnectionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BankAccountOrganization_Update_ConnectionID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BankAccountOrganization_Update_OrganizationID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BankAccountOrganization_Update_OrganizationID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BankAccountOrganization_Update_OrganizationID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BankAccountOrganization_Update_OrganizationID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BankAccountOrganization_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BankAccountOrganization_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BankAccountOrganization_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BankAccountOrganization_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BankAccountOrganization_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BankAccountOrganization_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BankAccountOrganization_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BankAccountOrganization_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BankAccountOrganization_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BankAccountOrganization_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BankAccountOrganization_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BankAccountOrganization_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Bank_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Bank_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Bank_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Bank_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Bank_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Bank_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Bank_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Bank_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Bank_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Bank_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Bank_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Bank_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Bank_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Bank_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Bank_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Bank_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Bank_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Bank_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Bank_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Bank_FindByExtID(ctx, req.(*RequestExtID))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Bank_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Bank_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Bank_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Bank_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Bank_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Bank_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Bank_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Bank_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Bank_Update_BIK_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Bank_Update_BIK(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Bank_Update_BIK",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Bank_Update_BIK(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Bank_Update_City_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Bank_Update_City(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Bank_Update_City",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Bank_Update_City(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Bank_Update_ConnectionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Bank_Update_ConnectionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Bank_Update_ConnectionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Bank_Update_ConnectionID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Bank_Update_CorrespondentAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Bank_Update_CorrespondentAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Bank_Update_CorrespondentAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Bank_Update_CorrespondentAccount(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Bank_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Bank_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Bank_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Bank_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Bank_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Bank_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Bank_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Bank_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Bank_Update_OrganizationID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Bank_Update_OrganizationID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Bank_Update_OrganizationID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Bank_Update_OrganizationID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Bank_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Bank_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Bank_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Bank_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Bank_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Bank_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Bank_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Bank_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Bank_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Bank_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Bank_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Bank_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BeforeTimeType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BeforeTimeType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BeforeTimeType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BeforeTimeType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BeforeTimeType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BeforeTimeType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BeforeTimeType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BeforeTimeType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BeforeTimeType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BeforeTimeType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BeforeTimeType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BeforeTimeType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BeforeTimeType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BeforeTimeType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BeforeTimeType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BeforeTimeType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BeforeTimeType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BeforeTimeType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BeforeTimeType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BeforeTimeType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BeforeTimeType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BeforeTimeType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BeforeTimeType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BeforeTimeType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BeforeTimeType_Update_Code_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BeforeTimeType_Update_Code(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BeforeTimeType_Update_Code",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BeforeTimeType_Update_Code(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BeforeTimeType_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BeforeTimeType_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BeforeTimeType_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BeforeTimeType_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BeforeTimeType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BeforeTimeType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BeforeTimeType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BeforeTimeType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BeforeTimeType_Update_Value_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BeforeTimeType_Update_Value(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BeforeTimeType_Update_Value",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BeforeTimeType_Update_Value(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BeforeTimeType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BeforeTimeType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BeforeTimeType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BeforeTimeType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BeforeTimeType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BeforeTimeType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BeforeTimeType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BeforeTimeType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BeforeTimeType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BeforeTimeType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BeforeTimeType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BeforeTimeType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BillKindType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BillKindType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BillKindType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BillKindType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BillKindType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BillKindType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BillKindType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BillKindType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BillKindType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BillKindType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BillKindType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BillKindType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BillKindType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BillKindType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BillKindType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BillKindType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BillKindType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BillKindType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BillKindType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BillKindType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BillKindType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BillKindType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BillKindType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BillKindType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BillKindType_Update_Code_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BillKindType_Update_Code(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BillKindType_Update_Code",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BillKindType_Update_Code(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BillKindType_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BillKindType_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BillKindType_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BillKindType_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BillKindType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BillKindType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BillKindType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BillKindType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BillKindType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BillKindType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BillKindType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BillKindType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BillKindType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BillKindType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BillKindType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BillKindType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BillKindType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BillKindType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BillKindType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BillKindType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Branch_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Branch_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Branch_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Branch_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Branch_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Branch_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Branch_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Branch_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Branch_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Branch_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Branch_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Branch_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Branch_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Branch_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Branch_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Branch_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Branch_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Branch_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Branch_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Branch_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Branch_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Branch_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Branch_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Branch_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Branch_Update_Code_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Branch_Update_Code(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Branch_Update_Code",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Branch_Update_Code(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Branch_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Branch_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Branch_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Branch_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Branch_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Branch_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Branch_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Branch_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Branch_Update_OrganizationID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Branch_Update_OrganizationID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Branch_Update_OrganizationID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Branch_Update_OrganizationID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Branch_Update_PersonalAreaLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Branch_Update_PersonalAreaLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Branch_Update_PersonalAreaLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Branch_Update_PersonalAreaLink(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Branch_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Branch_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Branch_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Branch_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Branch_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Branch_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Branch_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Branch_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Branch_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Branch_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Branch_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Branch_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Briefcase_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Briefcase_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Briefcase_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Briefcase_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Briefcase_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Briefcase_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Briefcase_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Briefcase_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Briefcase_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Briefcase_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Briefcase_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Briefcase_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Briefcase_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Briefcase_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Briefcase_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Briefcase_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Briefcase_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Briefcase_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Briefcase_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Briefcase_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Briefcase_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Briefcase_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Briefcase_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Briefcase_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Briefcase_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Briefcase_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Briefcase_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Briefcase_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Briefcase_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Briefcase_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Briefcase_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Briefcase_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Briefcase_Update_LawerID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Briefcase_Update_LawerID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Briefcase_Update_LawerID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Briefcase_Update_LawerID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Briefcase_Update_BranchID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Briefcase_Update_BranchID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Briefcase_Update_BranchID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Briefcase_Update_BranchID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Briefcase_Update_Number_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Briefcase_Update_Number(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Briefcase_Update_Number",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Briefcase_Update_Number(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Briefcase_Update_StatusID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Briefcase_Update_StatusID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Briefcase_Update_StatusID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Briefcase_Update_StatusID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Briefcase_SetLawer_ChangeItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Briefcase_SetLawer_ChangeItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Briefcase_SetLawer_ChangeItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Briefcase_SetLawer_ChangeItems(ctx, req.(*Request_Model_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Briefcase_FindEmployeeBy_LawerID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Briefcase_FindEmployeeBy_LawerID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Briefcase_FindEmployeeBy_LawerID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Briefcase_FindEmployeeBy_LawerID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Briefcase_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Briefcase_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Briefcase_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Briefcase_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseComment_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseComment_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseComment_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseComment_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseComment_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseComment_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseComment_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseComment_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseComment_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseComment_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseComment_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseComment_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseComment_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseComment_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseComment_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseComment_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseComment_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseComment_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseComment_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseComment_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseComment_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseComment_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseComment_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseComment_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseComment_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseComment_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseComment_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseComment_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseComment_Update_BriefcaseID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseComment_Update_BriefcaseID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseComment_Update_BriefcaseID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseComment_Update_BriefcaseID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseComment_Update_CommentTypeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseComment_Update_CommentTypeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseComment_Update_CommentTypeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseComment_Update_CommentTypeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseComment_Update_EmployeeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseComment_Update_EmployeeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseComment_Update_EmployeeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseComment_Update_EmployeeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseComment_Update_Message_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseComment_Update_Message(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseComment_Update_Message",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseComment_Update_Message(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseComment_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseComment_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseComment_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseComment_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseComment_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseComment_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseComment_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseComment_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseComment_FindMassBy_BriefcaseID_CommentTypeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseComment_FindMassBy_BriefcaseID_CommentTypeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseComment_FindMassBy_BriefcaseID_CommentTypeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseComment_FindMassBy_BriefcaseID_CommentTypeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesFile_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesFile_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesFile_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesFile_Read(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesFile_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesFile_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesFile_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesFile_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesFile_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesFile_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesFile_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesFile_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesFile_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesFile_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesFile_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesFile_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesFile_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesFile_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesFile_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesFile_Delete(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesFile_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesFile_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesFile_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesFile_Restore(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesFile_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesFile_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesFile_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesFile_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesFile_Update_BriefcaseID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesFile_Update_BriefcaseID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesFile_Update_BriefcaseID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesFile_Update_BriefcaseID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesFile_Update_FileID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesFile_Update_FileID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesFile_Update_FileID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesFile_Update_FileID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesFile_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesFile_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesFile_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesFile_ReadFromCache(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesFile_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesFile_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesFile_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesFile_ReadObject(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesFile_FindMassBy_BriefcaseID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesFile_FindMassBy_BriefcaseID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesFile_FindMassBy_BriefcaseID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesFile_FindMassBy_BriefcaseID(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesFile_FindMassObjectBy_BriefcaseID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesFile_FindMassObjectBy_BriefcaseID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesFile_FindMassObjectBy_BriefcaseID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesFile_FindMassObjectBy_BriefcaseID(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesHashtag_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesHashtag_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesHashtag_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesHashtag_Read(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesHashtag_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesHashtag_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesHashtag_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesHashtag_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesHashtag_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesHashtag_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesHashtag_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesHashtag_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesHashtag_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesHashtag_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesHashtag_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesHashtag_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesHashtag_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesHashtag_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesHashtag_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesHashtag_Delete(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesHashtag_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesHashtag_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesHashtag_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesHashtag_Restore(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesHashtag_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesHashtag_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesHashtag_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesHashtag_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesHashtag_Update_BriefcaseID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesHashtag_Update_BriefcaseID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesHashtag_Update_BriefcaseID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesHashtag_Update_BriefcaseID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesHashtag_Update_HashtagID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesHashtag_Update_HashtagID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesHashtag_Update_HashtagID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesHashtag_Update_HashtagID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesHashtag_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesHashtag_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesHashtag_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesHashtag_ReadFromCache(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesHashtag_FindMassBy_BriefcaseID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesHashtag_FindMassBy_BriefcaseID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesHashtag_FindMassBy_BriefcaseID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesHashtag_FindMassBy_BriefcaseID(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesHashtag_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesHashtag_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesHashtag_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesHashtag_ReadObject(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesLawsuit_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesLawsuit_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesLawsuit_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesLawsuit_Read(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesLawsuit_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesLawsuit_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesLawsuit_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesLawsuit_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesLawsuit_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesLawsuit_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesLawsuit_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesLawsuit_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesLawsuit_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesLawsuit_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesLawsuit_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesLawsuit_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesLawsuit_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesLawsuit_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesLawsuit_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesLawsuit_Delete(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesLawsuit_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesLawsuit_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesLawsuit_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesLawsuit_Restore(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesLawsuit_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesLawsuit_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesLawsuit_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesLawsuit_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesLawsuit_Update_BriefcaseID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesLawsuit_Update_BriefcaseID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesLawsuit_Update_BriefcaseID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesLawsuit_Update_BriefcaseID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesLawsuit_Update_LawsuitID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesLawsuit_Update_LawsuitID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesLawsuit_Update_LawsuitID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesLawsuit_Update_LawsuitID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesLawsuit_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesLawsuit_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesLawsuit_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesLawsuit_ReadFromCache(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcasesLawsuit_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcasesLawsuit_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcasesLawsuit_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcasesLawsuit_ReadObject(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseStatusState_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseStatusState_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseStatusState_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseStatusState_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseStatusState_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseStatusState_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseStatusState_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseStatusState_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseStatusState_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseStatusState_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseStatusState_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseStatusState_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseStatusState_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseStatusState_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseStatusState_Update_BriefcaseDebtSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Update_BriefcaseDebtSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseStatusState_Update_BriefcaseDebtSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Update_BriefcaseDebtSum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseStatusState_Update_BriefcaseID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Update_BriefcaseID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseStatusState_Update_BriefcaseID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Update_BriefcaseID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseStatusState_Update_BriefcaseInvoiceSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Update_BriefcaseInvoiceSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseStatusState_Update_BriefcaseInvoiceSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Update_BriefcaseInvoiceSum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseStatusState_Update_BriefcasePaySum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Update_BriefcasePaySum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseStatusState_Update_BriefcasePaySum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Update_BriefcasePaySum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseStatusState_Update_ContractBillsTotalSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Update_ContractBillsTotalSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseStatusState_Update_ContractBillsTotalSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Update_ContractBillsTotalSum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseStatusState_Update_ContractDebtSumAllTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Update_ContractDebtSumAllTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseStatusState_Update_ContractDebtSumAllTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Update_ContractDebtSumAllTypes(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseStatusState_Update_ContractMainSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Update_ContractMainSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseStatusState_Update_ContractMainSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Update_ContractMainSum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseStatusState_Update_ContractPennySum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Update_ContractPennySum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseStatusState_Update_ContractPennySum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Update_ContractPennySum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseStatusState_Update_ContractRestrictSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Update_ContractRestrictSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseStatusState_Update_ContractRestrictSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Update_ContractRestrictSum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseStatusState_Update_ContractStateDutySum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Update_ContractStateDutySum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseStatusState_Update_ContractStateDutySum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Update_ContractStateDutySum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseStatusState_Update_StatusAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Update_StatusAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseStatusState_Update_StatusAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Update_StatusAt(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseStatusState_Update_StatusID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Update_StatusID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseStatusState_Update_StatusID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_Update_StatusID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseStatusState_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseStatusState_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_BriefcaseStatusState_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/BriefcaseStatusState_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).BriefcaseStatusState_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Calendar_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Calendar_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Calendar_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Calendar_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Calendar_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Calendar_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Calendar_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Calendar_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Calendar_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Calendar_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Calendar_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Calendar_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Calendar_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Calendar_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Calendar_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Calendar_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Calendar_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Calendar_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Calendar_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Calendar_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Calendar_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Calendar_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Calendar_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Calendar_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Calendar_Update_Comment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Calendar_Update_Comment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Calendar_Update_Comment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Calendar_Update_Comment(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Calendar_Update_Date_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Calendar_Update_Date(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Calendar_Update_Date",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Calendar_Update_Date(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Calendar_Update_DayTypeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Calendar_Update_DayTypeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Calendar_Update_DayTypeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Calendar_Update_DayTypeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Calendar_Update_Days_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Calendar_Update_Days(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Calendar_Update_Days",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Calendar_Update_Days(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Calendar_Update_Hours_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Calendar_Update_Hours(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Calendar_Update_Hours",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Calendar_Update_Hours(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Calendar_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Calendar_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Calendar_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Calendar_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Calendar_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Calendar_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Calendar_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Calendar_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Calendar_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Calendar_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Calendar_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Calendar_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ChangeItem_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ChangeItem_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ChangeItem_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ChangeItem_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ChangeItem_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ChangeItem_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ChangeItem_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ChangeItem_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ChangeItem_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ChangeItem_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ChangeItem_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ChangeItem_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ChangeItem_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ChangeItem_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ChangeItem_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ChangeItem_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ChangeItem_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ChangeItem_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ChangeItem_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ChangeItem_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ChangeItem_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ChangeItem_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ChangeItem_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ChangeItem_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ChangeItem_Update_Key_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ChangeItem_Update_Key(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ChangeItem_Update_Key",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ChangeItem_Update_Key(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ChangeItem_Update_Prev_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ChangeItem_Update_Prev(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ChangeItem_Update_Prev",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ChangeItem_Update_Prev(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ChangeItem_Update_Value_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ChangeItem_Update_Value(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ChangeItem_Update_Value",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ChangeItem_Update_Value(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ChangeItem_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ChangeItem_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ChangeItem_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ChangeItem_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ChangeItem_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ChangeItem_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ChangeItem_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ChangeItem_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ChangeItem_Update_TableNameID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ChangeItem_Update_TableNameID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ChangeItem_Update_TableNameID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ChangeItem_Update_TableNameID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ChangeItem_Update_TableRowID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ChangeItem_Update_TableRowID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ChangeItem_Update_TableRowID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ChangeItem_Update_TableRowID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ChangeItem_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ChangeItem_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ChangeItem_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ChangeItem_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ChannelType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ChannelType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ChannelType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ChannelType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ChannelType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ChannelType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ChannelType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ChannelType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ChannelType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ChannelType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ChannelType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ChannelType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ChannelType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ChannelType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ChannelType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ChannelType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ChannelType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ChannelType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ChannelType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ChannelType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ChannelType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ChannelType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ChannelType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ChannelType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ChannelType_Update_Code_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ChannelType_Update_Code(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ChannelType_Update_Code",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ChannelType_Update_Code(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ChannelType_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ChannelType_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ChannelType_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ChannelType_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ChannelType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ChannelType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ChannelType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ChannelType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ChannelType_Update_NotifierID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ChannelType_Update_NotifierID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ChannelType_Update_NotifierID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ChannelType_Update_NotifierID(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ChannelType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ChannelType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ChannelType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ChannelType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ChannelType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ChannelType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ChannelType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ChannelType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ChannelType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ChannelType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ChannelType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ChannelType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ClaimType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ClaimType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ClaimType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ClaimType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ClaimType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ClaimType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ClaimType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ClaimType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ClaimType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ClaimType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ClaimType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ClaimType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ClaimType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ClaimType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ClaimType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ClaimType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ClaimType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ClaimType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ClaimType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ClaimType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ClaimType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ClaimType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ClaimType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ClaimType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ClaimType_Update_Code_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ClaimType_Update_Code(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ClaimType_Update_Code",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ClaimType_Update_Code(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ClaimType_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ClaimType_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ClaimType_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ClaimType_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ClaimType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ClaimType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ClaimType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ClaimType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ClaimType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ClaimType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ClaimType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ClaimType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ClaimType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ClaimType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ClaimType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ClaimType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ClaimType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ClaimType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ClaimType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ClaimType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ColorType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ColorType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ColorType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ColorType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ColorType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ColorType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ColorType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ColorType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ColorType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ColorType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ColorType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ColorType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ColorType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ColorType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ColorType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ColorType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ColorType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ColorType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ColorType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ColorType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ColorType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ColorType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ColorType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ColorType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ColorType_Update_Code_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ColorType_Update_Code(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ColorType_Update_Code",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ColorType_Update_Code(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ColorType_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ColorType_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ColorType_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ColorType_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ColorType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ColorType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ColorType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ColorType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ColorType_Update_Value_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ColorType_Update_Value(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ColorType_Update_Value",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ColorType_Update_Value(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ColorType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ColorType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ColorType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ColorType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ColorType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ColorType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ColorType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ColorType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ColorType_Update_Blue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ColorType_Update_Blue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ColorType_Update_Blue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ColorType_Update_Blue(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ColorType_Update_Green_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ColorType_Update_Green(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ColorType_Update_Green",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ColorType_Update_Green(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ColorType_Update_Red_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ColorType_Update_Red(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ColorType_Update_Red",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ColorType_Update_Red(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ColorType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ColorType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ColorType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ColorType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CommentType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CommentType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CommentType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CommentType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CommentType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CommentType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CommentType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CommentType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CommentType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CommentType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CommentType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CommentType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CommentType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CommentType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CommentType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CommentType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CommentType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CommentType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CommentType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CommentType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CommentType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CommentType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CommentType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CommentType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CommentType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CommentType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CommentType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CommentType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CommentType_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CommentType_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CommentType_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CommentType_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CommentType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CommentType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CommentType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CommentType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CommentType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CommentType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CommentType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CommentType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CommentType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CommentType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CommentType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CommentType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CompletedMonth_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CompletedMonth_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CompletedMonth_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CompletedMonth_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CompletedMonth_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CompletedMonth_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CompletedMonth_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CompletedMonth_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CompletedMonth_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CompletedMonth_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CompletedMonth_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CompletedMonth_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CompletedMonth_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CompletedMonth_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CompletedMonth_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CompletedMonth_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CompletedMonth_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CompletedMonth_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CompletedMonth_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CompletedMonth_FindByExtID(ctx, req.(*RequestExtID))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CompletedMonth_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CompletedMonth_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CompletedMonth_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CompletedMonth_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CompletedMonth_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CompletedMonth_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CompletedMonth_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CompletedMonth_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CompletedMonth_Update_AccountingAreaID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CompletedMonth_Update_AccountingAreaID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CompletedMonth_Update_AccountingAreaID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CompletedMonth_Update_AccountingAreaID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CompletedMonth_Update_BillingMonth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CompletedMonth_Update_BillingMonth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CompletedMonth_Update_BillingMonth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CompletedMonth_Update_BillingMonth(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CompletedMonth_Update_ConnectionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CompletedMonth_Update_ConnectionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CompletedMonth_Update_ConnectionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CompletedMonth_Update_ConnectionID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CompletedMonth_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CompletedMonth_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CompletedMonth_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CompletedMonth_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CompletedMonth_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CompletedMonth_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CompletedMonth_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CompletedMonth_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CompletedMonth_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CompletedMonth_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CompletedMonth_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CompletedMonth_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Connection_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Connection_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Connection_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Connection_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Connection_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Connection_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Connection_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Connection_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Connection_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Connection_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Connection_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Connection_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Connection_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Connection_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Connection_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Connection_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Connection_Update_BranchID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Connection_Update_BranchID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Connection_Update_BranchID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Connection_Update_BranchID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Connection_Update_DbName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Connection_Update_DbName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Connection_Update_DbName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Connection_Update_DbName(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Connection_Update_DbScheme_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Connection_Update_DbScheme(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Connection_Update_DbScheme",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Connection_Update_DbScheme(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Connection_Update_IsLegal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Connection_Update_IsLegal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Connection_Update_IsLegal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Connection_Update_IsLegal(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Connection_Update_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Connection_Update_Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Connection_Update_Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Connection_Update_Login(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Connection_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Connection_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Connection_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Connection_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Connection_Update_Password_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Connection_Update_Password(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Connection_Update_Password",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Connection_Update_Password(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Connection_Update_Port_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Connection_Update_Port(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Connection_Update_Port",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Connection_Update_Port(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Connection_Update_Server_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Connection_Update_Server(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Connection_Update_Server",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Connection_Update_Server(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Connection_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Connection_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Connection_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Connection_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Connection_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Connection_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Connection_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Connection_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Connection_FindBy_BranchID_IsLegal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Connection_FindBy_BranchID_IsLegal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Connection_FindBy_BranchID_IsLegal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Connection_FindBy_BranchID_IsLegal(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Connection_FindMassBy_BranchID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Connection_FindMassBy_BranchID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Connection_FindMassBy_BranchID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Connection_FindMassBy_BranchID(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Connection_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Connection_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Connection_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Connection_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractBlackItem_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractBlackItem_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractBlackItem_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractBlackItem_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractBlackItem_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractBlackItem_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractBlackItem_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractBlackItem_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractBlackItem_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractBlackItem_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractBlackItem_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractBlackItem_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractBlackItem_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractBlackItem_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractBlackItem_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractBlackItem_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractBlackItem_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractBlackItem_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractBlackItem_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractBlackItem_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractBlackItem_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractBlackItem_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractBlackItem_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractBlackItem_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractBlackItem_Update_ContractID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractBlackItem_Update_ContractID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractBlackItem_Update_ContractID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractBlackItem_Update_ContractID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractBlackItem_Update_ContractNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractBlackItem_Update_ContractNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractBlackItem_Update_ContractNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractBlackItem_Update_ContractNumber(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractBlackItem_Update_CreatedByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractBlackItem_Update_CreatedByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractBlackItem_Update_CreatedByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractBlackItem_Update_CreatedByID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractBlackItem_Update_DateFrom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractBlackItem_Update_DateFrom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractBlackItem_Update_DateFrom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractBlackItem_Update_DateFrom(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractBlackItem_Update_DateTo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractBlackItem_Update_DateTo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractBlackItem_Update_DateTo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractBlackItem_Update_DateTo(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractBlackItem_Update_EDMSLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractBlackItem_Update_EDMSLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractBlackItem_Update_EDMSLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractBlackItem_Update_EDMSLink(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractBlackItem_Update_ModifiedByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractBlackItem_Update_ModifiedByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractBlackItem_Update_ModifiedByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractBlackItem_Update_ModifiedByID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractBlackItem_Update_Note_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractBlackItem_Update_Note(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractBlackItem_Update_Note",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractBlackItem_Update_Note(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractBlackItem_Update_Reason_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractBlackItem_Update_Reason(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractBlackItem_Update_Reason",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractBlackItem_Update_Reason(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractBlackItem_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractBlackItem_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractBlackItem_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractBlackItem_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractBlackItem_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractBlackItem_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractBlackItem_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractBlackItem_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractBlackItem_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractBlackItem_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractBlackItem_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractBlackItem_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractCategoryType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractCategoryType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractCategoryType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractCategoryType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractCategoryType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractCategoryType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractCategoryType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractCategoryType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractCategoryType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractCategoryType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractCategoryType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractCategoryType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractCategoryType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractCategoryType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractCategoryType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractCategoryType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractCategoryType_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractCategoryType_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractCategoryType_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractCategoryType_FindByExtID(ctx, req.(*RequestExtID))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractCategoryType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractCategoryType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractCategoryType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractCategoryType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractCategoryType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractCategoryType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractCategoryType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractCategoryType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractCategoryType_Update_Code_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractCategoryType_Update_Code(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractCategoryType_Update_Code",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractCategoryType_Update_Code(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractCategoryType_Update_ConnectionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractCategoryType_Update_ConnectionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractCategoryType_Update_ConnectionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractCategoryType_Update_ConnectionID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractCategoryType_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractCategoryType_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractCategoryType_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractCategoryType_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractCategoryType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractCategoryType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractCategoryType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractCategoryType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractCategoryType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractCategoryType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractCategoryType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractCategoryType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractCategoryType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractCategoryType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractCategoryType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractCategoryType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractCategoryType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractCategoryType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractCategoryType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractCategoryType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractType_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractType_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractType_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractType_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractWhiteItem_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractWhiteItem_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractWhiteItem_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractWhiteItem_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractWhiteItem_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractWhiteItem_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractWhiteItem_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractWhiteItem_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractWhiteItem_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractWhiteItem_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractWhiteItem_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractWhiteItem_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractWhiteItem_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractWhiteItem_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractWhiteItem_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractWhiteItem_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractWhiteItem_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractWhiteItem_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractWhiteItem_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractWhiteItem_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractWhiteItem_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractWhiteItem_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractWhiteItem_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractWhiteItem_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractWhiteItem_Update_ContractID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractWhiteItem_Update_ContractID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractWhiteItem_Update_ContractID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractWhiteItem_Update_ContractID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractWhiteItem_Update_ContractNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractWhiteItem_Update_ContractNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractWhiteItem_Update_ContractNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractWhiteItem_Update_ContractNumber(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractWhiteItem_Update_CreatedByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractWhiteItem_Update_CreatedByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractWhiteItem_Update_CreatedByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractWhiteItem_Update_CreatedByID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractWhiteItem_Update_DateFrom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractWhiteItem_Update_DateFrom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractWhiteItem_Update_DateFrom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractWhiteItem_Update_DateFrom(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractWhiteItem_Update_DateTo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractWhiteItem_Update_DateTo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractWhiteItem_Update_DateTo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractWhiteItem_Update_DateTo(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractWhiteItem_Update_EDMSLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractWhiteItem_Update_EDMSLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractWhiteItem_Update_EDMSLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractWhiteItem_Update_EDMSLink(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractWhiteItem_Update_ModifiedByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractWhiteItem_Update_ModifiedByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractWhiteItem_Update_ModifiedByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractWhiteItem_Update_ModifiedByID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractWhiteItem_Update_Note_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractWhiteItem_Update_Note(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractWhiteItem_Update_Note",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractWhiteItem_Update_Note(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractWhiteItem_Update_Reason_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractWhiteItem_Update_Reason(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractWhiteItem_Update_Reason",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractWhiteItem_Update_Reason(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractWhiteItem_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractWhiteItem_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractWhiteItem_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractWhiteItem_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractWhiteItem_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractWhiteItem_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractWhiteItem_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractWhiteItem_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractWhiteItem_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractWhiteItem_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractWhiteItem_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractWhiteItem_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_FindByExtID(ctx, req.(*RequestExtID))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_FindBy_Number_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_FindBy_Number(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_FindBy_Number",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_FindBy_Number(ctx, req.(*RequestString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_BeginAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update_BeginAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update_BeginAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update_BeginAt(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_BranchID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update_BranchID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update_BranchID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update_BranchID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_CategoryID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update_CategoryID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update_CategoryID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update_CategoryID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_ConnectionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update_ConnectionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update_ConnectionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update_ConnectionID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_CuratorClaimID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update_CuratorClaimID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update_CuratorClaimID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update_CuratorClaimID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_CuratorContractID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update_CuratorContractID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update_CuratorContractID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update_CuratorContractID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_CuratorLegalID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update_CuratorLegalID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update_CuratorLegalID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update_CuratorLegalID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_CuratorPaymentID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update_CuratorPaymentID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update_CuratorPaymentID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update_CuratorPaymentID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_CuratorTechAuditID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update_CuratorTechAuditID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update_CuratorTechAuditID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update_CuratorTechAuditID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_DaysToResolveClaim_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update_DaysToResolveClaim(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update_DaysToResolveClaim",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update_DaysToResolveClaim(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_Email_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update_Email(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update_Email",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update_Email(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_EndAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update_EndAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update_EndAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update_EndAt(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_ErrorFromStackAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update_ErrorFromStackAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update_ErrorFromStackAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update_ErrorFromStackAt(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_IndividualID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update_IndividualID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update_IndividualID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update_IndividualID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_IsErrorFromStack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update_IsErrorFromStack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update_IsErrorFromStack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update_IsErrorFromStack(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_IsIndOrganization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update_IsIndOrganization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update_IsIndOrganization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update_IsIndOrganization(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_IsOrganization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update_IsOrganization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update_IsOrganization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update_IsOrganization(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_IsValidEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update_IsValidEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update_IsValidEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update_IsValidEmail(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_Number_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update_Number(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update_Number",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update_Number(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_OrganizationConsigneeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update_OrganizationConsigneeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update_OrganizationConsigneeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update_OrganizationConsigneeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_OrganizationCustomerID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update_OrganizationCustomerID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update_OrganizationCustomerID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update_OrganizationCustomerID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_OrganizationPayerID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update_OrganizationPayerID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update_OrganizationPayerID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update_OrganizationPayerID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_PostAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update_PostAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update_PostAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update_PostAddress(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_SignAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update_SignAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update_SignAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update_SignAt(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update_Status(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update_Status",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update_Status(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_TerminateAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update_TerminateAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update_TerminateAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update_TerminateAt(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_IsBelongsRosatom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update_IsBelongsRosatom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update_IsBelongsRosatom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update_IsBelongsRosatom(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_DepartmentID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update_DepartmentID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update_DepartmentID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update_DepartmentID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_Note_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update_Note(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update_Note",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update_Note(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_SectorID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update_SectorID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update_SectorID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update_SectorID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_Update_TypeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_Update_TypeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_Update_TypeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_Update_TypeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Contract_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Contract_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Contract_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Contract_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractsTotalSum_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractsTotalSum_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractsTotalSum_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractsTotalSum_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractsTotalSum_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractsTotalSum_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractsTotalSum_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractsTotalSum_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractsTotalSum_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractsTotalSum_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractsTotalSum_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractsTotalSum_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractsTotalSum_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractsTotalSum_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractsTotalSum_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractsTotalSum_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractsTotalSum_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractsTotalSum_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractsTotalSum_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractsTotalSum_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractsTotalSum_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractsTotalSum_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractsTotalSum_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractsTotalSum_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractsTotalSum_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractsTotalSum_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractsTotalSum_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractsTotalSum_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractsTotalSum_Update_ContractID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractsTotalSum_Update_ContractID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractsTotalSum_Update_ContractID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractsTotalSum_Update_ContractID(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractsTotalSum_Update_MainSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractsTotalSum_Update_MainSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractsTotalSum_Update_MainSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractsTotalSum_Update_MainSum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractsTotalSum_Update_PennySum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractsTotalSum_Update_PennySum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractsTotalSum_Update_PennySum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractsTotalSum_Update_PennySum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractsTotalSum_Update_RestrictSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractsTotalSum_Update_RestrictSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractsTotalSum_Update_RestrictSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractsTotalSum_Update_RestrictSum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractsTotalSum_Update_StateDutySum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractsTotalSum_Update_StateDutySum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractsTotalSum_Update_StateDutySum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractsTotalSum_Update_StateDutySum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractsTotalSum_Update_TotalSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractsTotalSum_Update_TotalSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractsTotalSum_Update_TotalSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractsTotalSum_Update_TotalSum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractsTotalSum_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractsTotalSum_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractsTotalSum_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractsTotalSum_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractsTotalSum_Update_BillsSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractsTotalSum_Update_BillsSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractsTotalSum_Update_BillsSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractsTotalSum_Update_BillsSum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractsTotalSum_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractsTotalSum_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractsTotalSum_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractsTotalSum_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractIndividual_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractIndividual_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractIndividual_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractIndividual_Read(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractIndividual_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractIndividual_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractIndividual_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractIndividual_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractIndividual_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractIndividual_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractIndividual_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractIndividual_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractIndividual_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractIndividual_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractIndividual_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractIndividual_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractIndividual_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractIndividual_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractIndividual_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractIndividual_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractIndividual_Update_ContractID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractIndividual_Update_ContractID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractIndividual_Update_ContractID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractIndividual_Update_ContractID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractIndividual_Update_IndividualID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractIndividual_Update_IndividualID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractIndividual_Update_IndividualID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractIndividual_Update_IndividualID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractIndividual_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractIndividual_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractIndividual_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractIndividual_ReadFromCache(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractIndividual_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractIndividual_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractIndividual_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractIndividual_ReadObject(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractOrganization_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractOrganization_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractOrganization_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractOrganization_Read(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractOrganization_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractOrganization_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractOrganization_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractOrganization_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractOrganization_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractOrganization_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractOrganization_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractOrganization_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractOrganization_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractOrganization_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractOrganization_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractOrganization_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractOrganization_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractOrganization_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractOrganization_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractOrganization_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractOrganization_Update_ContractID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractOrganization_Update_ContractID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractOrganization_Update_ContractID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractOrganization_Update_ContractID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractOrganization_Update_OrganizationID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractOrganization_Update_OrganizationID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractOrganization_Update_OrganizationID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractOrganization_Update_OrganizationID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractOrganization_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractOrganization_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractOrganization_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractOrganization_ReadFromCache(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ContractOrganization_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ContractOrganization_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ContractOrganization_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ContractOrganization_ReadObject(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuit_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuit_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuit_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuit_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuit_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuit_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuit_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuit_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuit_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuit_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuit_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuit_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuit_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuit_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuit_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuit_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuit_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuit_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuit_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuit_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuit_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuit_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuit_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuit_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuit_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuit_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuit_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuit_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuit_Update_BriefcaseID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuit_Update_BriefcaseID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuit_Update_BriefcaseID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuit_Update_BriefcaseID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuit_Update_CourtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuit_Update_CourtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuit_Update_CourtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuit_Update_CourtID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuit_Update_LawerID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuit_Update_LawerID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuit_Update_LawerID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuit_Update_LawerID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuit_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuit_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuit_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuit_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuit_Update_LitigationTypeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuit_Update_LitigationTypeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuit_Update_LitigationTypeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuit_Update_LitigationTypeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuit_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuit_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuit_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuit_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuitsFile_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuitsFile_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuitsFile_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuitsFile_Read(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuitsFile_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuitsFile_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuitsFile_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuitsFile_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuitsFile_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuitsFile_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuitsFile_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuitsFile_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuitsFile_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuitsFile_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuitsFile_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuitsFile_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuitsFile_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuitsFile_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuitsFile_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuitsFile_Delete(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuitsFile_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuitsFile_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuitsFile_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuitsFile_Restore(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuitsFile_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuitsFile_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuitsFile_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuitsFile_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuitsFile_Update_CourtSuitID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuitsFile_Update_CourtSuitID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuitsFile_Update_CourtSuitID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuitsFile_Update_CourtSuitID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuitsFile_Update_FileID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuitsFile_Update_FileID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuitsFile_Update_FileID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuitsFile_Update_FileID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuitsFile_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuitsFile_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuitsFile_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuitsFile_ReadFromCache(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuitsFile_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuitsFile_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuitsFile_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuitsFile_ReadObject(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuitsFile_FindMassBy_CourtSuitID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuitsFile_FindMassBy_CourtSuitID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuitsFile_FindMassBy_CourtSuitID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuitsFile_FindMassBy_CourtSuitID(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuitsFile_FindMassObjectBy_CourtSuitID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuitsFile_FindMassObjectBy_CourtSuitID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuitsFile_FindMassObjectBy_CourtSuitID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuitsFile_FindMassObjectBy_CourtSuitID(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Court_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Court_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Court_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Court_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Court_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Court_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Court_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Court_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Court_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Court_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Court_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Court_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Court_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Court_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Court_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Court_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Court_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Court_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Court_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Court_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Court_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Court_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Court_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Court_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Court_Update_City_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Court_Update_City(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Court_Update_City",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Court_Update_City(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Court_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Court_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Court_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Court_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Court_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Court_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Court_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Court_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Court_Update_OrganizationID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Court_Update_OrganizationID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Court_Update_OrganizationID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Court_Update_OrganizationID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Court_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Court_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Court_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Court_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Court_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Court_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Court_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Court_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Court_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Court_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Court_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Court_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuitComment_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuitComment_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuitComment_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuitComment_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuitComment_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuitComment_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuitComment_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuitComment_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuitComment_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuitComment_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuitComment_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuitComment_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuitComment_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuitComment_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuitComment_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuitComment_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuitComment_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuitComment_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuitComment_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuitComment_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuitComment_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuitComment_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuitComment_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuitComment_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuitComment_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuitComment_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuitComment_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuitComment_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuitComment_Update_CommentTypeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuitComment_Update_CommentTypeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuitComment_Update_CommentTypeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuitComment_Update_CommentTypeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuitComment_Update_CourtSuitID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuitComment_Update_CourtSuitID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuitComment_Update_CourtSuitID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuitComment_Update_CourtSuitID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuitComment_Update_EmployeeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuitComment_Update_EmployeeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuitComment_Update_EmployeeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuitComment_Update_EmployeeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuitComment_Update_Message_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuitComment_Update_Message(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuitComment_Update_Message",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuitComment_Update_Message(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuitComment_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuitComment_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuitComment_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuitComment_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuitComment_FindMassBy_CourtSuitID_CommentTypeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuitComment_FindMassBy_CourtSuitID_CommentTypeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuitComment_FindMassBy_CourtSuitID_CommentTypeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuitComment_FindMassBy_CourtSuitID_CommentTypeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_CourtSuitComment_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).CourtSuitComment_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/CourtSuitComment_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).CourtSuitComment_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DayType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DayType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DayType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DayType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DayType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DayType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DayType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DayType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DayType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DayType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DayType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DayType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DayType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DayType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DayType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DayType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DayType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DayType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DayType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DayType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DayType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DayType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DayType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DayType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DayType_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DayType_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DayType_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DayType_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DayType_Update_IsWorkDay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DayType_Update_IsWorkDay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DayType_Update_IsWorkDay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DayType_Update_IsWorkDay(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DayType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DayType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DayType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DayType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DayType_Update_ShortName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DayType_Update_ShortName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DayType_Update_ShortName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DayType_Update_ShortName(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DayType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DayType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DayType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DayType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DayType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DayType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DayType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DayType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DayType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DayType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DayType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DayType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DebtType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DebtType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DebtType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DebtType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DebtType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DebtType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DebtType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DebtType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DebtType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DebtType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DebtType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DebtType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DebtType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DebtType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DebtType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DebtType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DebtType_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DebtType_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DebtType_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DebtType_FindByExtID(ctx, req.(*RequestExtID))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DebtType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DebtType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DebtType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DebtType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DebtType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DebtType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DebtType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DebtType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DebtType_Update_CodeNSI_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DebtType_Update_CodeNSI(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DebtType_Update_CodeNSI",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DebtType_Update_CodeNSI(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DebtType_Update_ConnectionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DebtType_Update_ConnectionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DebtType_Update_ConnectionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DebtType_Update_ConnectionID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DebtType_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DebtType_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DebtType_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DebtType_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DebtType_Update_ExtCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DebtType_Update_ExtCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DebtType_Update_ExtCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DebtType_Update_ExtCode(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DebtType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DebtType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DebtType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DebtType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DebtType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DebtType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DebtType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DebtType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DebtType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DebtType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DebtType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DebtType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DebtType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DebtType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DebtType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DebtType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DirectionType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DirectionType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DirectionType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DirectionType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DirectionType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DirectionType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DirectionType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DirectionType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DirectionType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DirectionType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DirectionType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DirectionType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DirectionType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DirectionType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DirectionType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DirectionType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DirectionType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DirectionType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DirectionType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DirectionType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DirectionType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DirectionType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DirectionType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DirectionType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DirectionType_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DirectionType_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DirectionType_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DirectionType_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DirectionType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DirectionType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DirectionType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DirectionType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DirectionType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DirectionType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DirectionType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DirectionType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DirectionType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DirectionType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DirectionType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DirectionType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DirectionType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DirectionType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DirectionType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DirectionType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLinkType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLinkType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLinkType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLinkType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLinkType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLinkType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLinkType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLinkType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLinkType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLinkType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLinkType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLinkType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLinkType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLinkType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLinkType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLinkType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLinkType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLinkType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLinkType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLinkType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLinkType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLinkType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLinkType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLinkType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLinkType_Update_Code_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLinkType_Update_Code(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLinkType_Update_Code",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLinkType_Update_Code(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLinkType_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLinkType_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLinkType_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLinkType_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLinkType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLinkType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLinkType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLinkType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLinkType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLinkType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLinkType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLinkType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLinkType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLinkType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLinkType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLinkType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLinkType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLinkType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLinkType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLinkType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLink_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLink_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLink_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLink_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLink_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLink_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLink_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLink_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLink_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLink_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLink_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLink_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLink_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLink_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLink_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLink_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLink_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLink_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLink_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLink_FindByExtID(ctx, req.(*RequestExtID))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLink_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLink_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLink_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLink_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLink_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLink_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLink_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLink_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLink_Update_ConnectionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLink_Update_ConnectionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLink_Update_ConnectionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLink_Update_ConnectionID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLink_Update_ContractID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLink_Update_ContractID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLink_Update_ContractID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLink_Update_ContractID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLink_Update_CorrectionSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLink_Update_CorrectionSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLink_Update_CorrectionSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLink_Update_CorrectionSum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLink_Update_Document1ID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLink_Update_Document1ID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLink_Update_Document1ID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLink_Update_Document1ID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLink_Update_Document2ID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLink_Update_Document2ID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLink_Update_Document2ID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLink_Update_Document2ID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLink_Update_LinkTypeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLink_Update_LinkTypeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLink_Update_LinkTypeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLink_Update_LinkTypeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLink_Update_DateFrom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLink_Update_DateFrom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLink_Update_DateFrom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLink_Update_DateFrom(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLink_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLink_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLink_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLink_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLink_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLink_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLink_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLink_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLink_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLink_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLink_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLink_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLinksRapira_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLinksRapira_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLinksRapira_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLinksRapira_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLinksRapira_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLinksRapira_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLinksRapira_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLinksRapira_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLinksRapira_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLinksRapira_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLinksRapira_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLinksRapira_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLinksRapira_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLinksRapira_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLinksRapira_Update_ConnectionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_Update_ConnectionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLinksRapira_Update_ConnectionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_Update_ConnectionID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLinksRapira_Update_ContractID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_Update_ContractID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLinksRapira_Update_ContractID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_Update_ContractID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLinksRapira_Update_CorrectionSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_Update_CorrectionSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLinksRapira_Update_CorrectionSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_Update_CorrectionSum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLinksRapira_Update_DateFrom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_Update_DateFrom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLinksRapira_Update_DateFrom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_Update_DateFrom(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLinksRapira_Update_Document1ID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_Update_Document1ID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLinksRapira_Update_Document1ID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_Update_Document1ID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLinksRapira_Update_Document2ID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_Update_Document2ID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLinksRapira_Update_Document2ID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_Update_Document2ID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLinksRapira_Update_LinkTypeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_Update_LinkTypeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLinksRapira_Update_LinkTypeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_Update_LinkTypeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLinksRapira_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLinksRapira_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLinksRapira_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLinksRapira_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLinksRapira_Update_ModifiedAtStack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_Update_ModifiedAtStack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLinksRapira_Update_ModifiedAtStack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_Update_ModifiedAtStack(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLinksRapira_Update_CreatedAtStack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_Update_CreatedAtStack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLinksRapira_Update_CreatedAtStack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_Update_CreatedAtStack(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentLinksRapira_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtIDString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentLinksRapira_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentLinksRapira_FindByExtID(ctx, req.(*RequestExtIDString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentRequired_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentRequired_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentRequired_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentRequired_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentRequired_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentRequired_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentRequired_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentRequired_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentRequired_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentRequired_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentRequired_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentRequired_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentRequired_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentRequired_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentRequired_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentRequired_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentRequired_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentRequired_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentRequired_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentRequired_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentRequired_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentRequired_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentRequired_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentRequired_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentRequired_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentRequired_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentRequired_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentRequired_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentRequired_Update_Code_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentRequired_Update_Code(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentRequired_Update_Code",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentRequired_Update_Code(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentRequired_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentRequired_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentRequired_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentRequired_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentRequired_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentRequired_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentRequired_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentRequired_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentRequired_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentRequired_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentRequired_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentRequired_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentReturnReason_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentReturnReason_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentReturnReason_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentReturnReason_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentReturnReason_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentReturnReason_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentReturnReason_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentReturnReason_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentReturnReason_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentReturnReason_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentReturnReason_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentReturnReason_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentReturnReason_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentReturnReason_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentReturnReason_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentReturnReason_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentReturnReason_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentReturnReason_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentReturnReason_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentReturnReason_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentReturnReason_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentReturnReason_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentReturnReason_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentReturnReason_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentReturnReason_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentReturnReason_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentReturnReason_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentReturnReason_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentReturnReason_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentReturnReason_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentReturnReason_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentReturnReason_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentReturnReason_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentReturnReason_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentReturnReason_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentReturnReason_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentReturnReason_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentReturnReason_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentReturnReason_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentReturnReason_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentReturnReason_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentReturnReason_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentReturnReason_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentReturnReason_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentStatus_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentStatus_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentStatus_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentStatus_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentStatus_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentStatus_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentStatus_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentStatus_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentStatus_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentStatus_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentStatus_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentStatus_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentStatus_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentStatus_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentStatus_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentStatus_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentStatus_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentStatus_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentStatus_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentStatus_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentStatus_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentStatus_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentStatus_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentStatus_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentStatus_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentStatus_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentStatus_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentStatus_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentStatus_Update_Code_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentStatus_Update_Code(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentStatus_Update_Code",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentStatus_Update_Code(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentStatus_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentStatus_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentStatus_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentStatus_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentStatus_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentStatus_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentStatus_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentStatus_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentStatus_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentStatus_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentStatus_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentStatus_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentType_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentType_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentType_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentType_FindByExtID(ctx, req.(*RequestExtID))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentType_Update_ConnectionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentType_Update_ConnectionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentType_Update_ConnectionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentType_Update_ConnectionID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentType_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentType_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentType_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentType_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentType_Update_IncomeExpense_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentType_Update_IncomeExpense(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentType_Update_IncomeExpense",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentType_Update_IncomeExpense(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentType_Update_IsService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentType_Update_IsService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentType_Update_IsService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentType_Update_IsService(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentType_Update_IsVisible_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentType_Update_IsVisible(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentType_Update_IsVisible",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentType_Update_IsVisible(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentType_Update_ShortName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentType_Update_ShortName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentType_Update_ShortName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentType_Update_ShortName(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentType_Update_Type_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentType_Update_Type(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentType_Update_Type",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentType_Update_Type(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_DocumentType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).DocumentType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/DocumentType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).DocumentType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Document_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Document_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Document_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Document_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Document_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Document_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Document_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Document_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Document_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Document_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Document_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Document_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Document_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Document_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Document_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Document_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Document_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Document_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Document_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Document_FindByExtID(ctx, req.(*RequestExtID))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Document_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Document_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Document_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Document_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Document_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Document_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Document_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Document_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Document_Update_Analytics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Document_Update_Analytics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Document_Update_Analytics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Document_Update_Analytics(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Document_Update_Balance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Document_Update_Balance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Document_Update_Balance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Document_Update_Balance(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Document_Update_BillKindID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Document_Update_BillKindID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Document_Update_BillKindID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Document_Update_BillKindID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Document_Update_BillingMonth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Document_Update_BillingMonth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Document_Update_BillingMonth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Document_Update_BillingMonth(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Document_Update_ConnectionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Document_Update_ConnectionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Document_Update_ConnectionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Document_Update_ConnectionID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Document_Update_ContractID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Document_Update_ContractID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Document_Update_ContractID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Document_Update_ContractID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Document_Update_Count_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Document_Update_Count(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Document_Update_Count",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Document_Update_Count(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Document_Update_DebtSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Document_Update_DebtSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Document_Update_DebtSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Document_Update_DebtSum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Document_Update_DocumentAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Document_Update_DocumentAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Document_Update_DocumentAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Document_Update_DocumentAt(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Document_Update_DocumentSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Document_Update_DocumentSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Document_Update_DocumentSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Document_Update_DocumentSum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Document_Update_DocumentTypeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Document_Update_DocumentTypeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Document_Update_DocumentTypeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Document_Update_DocumentTypeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Document_Update_Note_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Document_Update_Note(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Document_Update_Note",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Document_Update_Note(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Document_Update_Number_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Document_Update_Number(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Document_Update_Number",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Document_Update_Number(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Document_Update_NumberFull_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Document_Update_NumberFull(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Document_Update_NumberFull",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Document_Update_NumberFull(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Document_Update_PayDeadline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Document_Update_PayDeadline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Document_Update_PayDeadline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Document_Update_PayDeadline(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Document_Update_PayFrom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Document_Update_PayFrom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Document_Update_PayFrom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Document_Update_PayFrom(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Document_Update_PayTo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Document_Update_PayTo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Document_Update_PayTo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Document_Update_PayTo(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Document_Update_Payment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Document_Update_Payment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Document_Update_Payment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Document_Update_Payment(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Document_Update_Reason_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Document_Update_Reason(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Document_Update_Reason",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Document_Update_Reason(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Document_Update_ReversalID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Document_Update_ReversalID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Document_Update_ReversalID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Document_Update_ReversalID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Document_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Document_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Document_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Document_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Document_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Document_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Document_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Document_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Document_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Document_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Document_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Document_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Employee_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Employee_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Employee_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Employee_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Employee_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Employee_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Employee_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Employee_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Employee_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Employee_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Employee_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Employee_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Employee_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Employee_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Employee_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Employee_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Employee_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Employee_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Employee_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Employee_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Employee_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Employee_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Employee_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Employee_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Employee_FindByExtId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Employee_FindByExtId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Employee_FindByExtId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Employee_FindByExtId(ctx, req.(*RequestExtID))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Employee_FindByLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Employee_FindByLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Employee_FindByLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Employee_FindByLogin(ctx, req.(*RequestString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Employee_FindByEMail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Employee_FindByEMail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Employee_FindByEMail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Employee_FindByEMail(ctx, req.(*RequestString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Employee_FindByFIO_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestString3)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Employee_FindByFIO(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Employee_FindByFIO",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Employee_FindByFIO(ctx, req.(*RequestString3))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Employee_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Employee_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Employee_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Employee_FindByExtID(ctx, req.(*RequestExtID))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Employee_Update_BranchID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Employee_Update_BranchID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Employee_Update_BranchID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Employee_Update_BranchID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Employee_Update_ConnectionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Employee_Update_ConnectionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Employee_Update_ConnectionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Employee_Update_ConnectionID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Employee_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Employee_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Employee_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Employee_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Employee_Update_Email_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Employee_Update_Email(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Employee_Update_Email",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Employee_Update_Email(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Employee_Update_IsActive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Employee_Update_IsActive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Employee_Update_IsActive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Employee_Update_IsActive(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Employee_Update_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Employee_Update_Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Employee_Update_Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Employee_Update_Login(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Employee_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Employee_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Employee_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Employee_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Employee_Update_ParentName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Employee_Update_ParentName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Employee_Update_ParentName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Employee_Update_ParentName(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Employee_Update_Phone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Employee_Update_Phone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Employee_Update_Phone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Employee_Update_Phone(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Employee_Update_Photo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Employee_Update_Photo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Employee_Update_Photo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Employee_Update_Photo(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Employee_Update_Position_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Employee_Update_Position(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Employee_Update_Position",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Employee_Update_Position(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Employee_Update_SecondName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Employee_Update_SecondName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Employee_Update_SecondName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Employee_Update_SecondName(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Employee_Update_Tag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Employee_Update_Tag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Employee_Update_Tag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Employee_Update_Tag(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Employee_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Employee_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Employee_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Employee_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Employee_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Employee_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Employee_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Employee_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Employee_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Employee_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Employee_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Employee_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_EmployeesHashtag_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).EmployeesHashtag_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/EmployeesHashtag_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).EmployeesHashtag_Read(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_EmployeesHashtag_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).EmployeesHashtag_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/EmployeesHashtag_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).EmployeesHashtag_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_EmployeesHashtag_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).EmployeesHashtag_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/EmployeesHashtag_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).EmployeesHashtag_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_EmployeesHashtag_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).EmployeesHashtag_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/EmployeesHashtag_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).EmployeesHashtag_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_EmployeesHashtag_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).EmployeesHashtag_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/EmployeesHashtag_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).EmployeesHashtag_Delete(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_EmployeesHashtag_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).EmployeesHashtag_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/EmployeesHashtag_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).EmployeesHashtag_Restore(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_EmployeesHashtag_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).EmployeesHashtag_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/EmployeesHashtag_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).EmployeesHashtag_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_EmployeesHashtag_Update_EmployeeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).EmployeesHashtag_Update_EmployeeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/EmployeesHashtag_Update_EmployeeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).EmployeesHashtag_Update_EmployeeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_EmployeesHashtag_Update_HashtagID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).EmployeesHashtag_Update_HashtagID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/EmployeesHashtag_Update_HashtagID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).EmployeesHashtag_Update_HashtagID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_EmployeesHashtag_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).EmployeesHashtag_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/EmployeesHashtag_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).EmployeesHashtag_ReadFromCache(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_EmployeesHashtag_FindMassBy_EmployeeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).EmployeesHashtag_FindMassBy_EmployeeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/EmployeesHashtag_FindMassBy_EmployeeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).EmployeesHashtag_FindMassBy_EmployeeID(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_EmployeesHashtag_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).EmployeesHashtag_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/EmployeesHashtag_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).EmployeesHashtag_ReadObject(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_EventType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).EventType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/EventType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).EventType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_EventType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).EventType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/EventType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).EventType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_EventType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).EventType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/EventType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).EventType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_EventType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).EventType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/EventType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).EventType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_EventType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).EventType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/EventType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).EventType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_EventType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).EventType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/EventType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).EventType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_EventType_Update_Code_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).EventType_Update_Code(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/EventType_Update_Code",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).EventType_Update_Code(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_EventType_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).EventType_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/EventType_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).EventType_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_EventType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).EventType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/EventType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).EventType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_EventType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).EventType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/EventType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).EventType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_EventType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).EventType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/EventType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).EventType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_EventType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).EventType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/EventType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).EventType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Event_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Event_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Event_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Event_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Event_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Event_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Event_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Event_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Event_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Event_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Event_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Event_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Event_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Event_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Event_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Event_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Event_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Event_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Event_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Event_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Event_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Event_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Event_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Event_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Event_Update_ColorTypeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Event_Update_ColorTypeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Event_Update_ColorTypeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Event_Update_ColorTypeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Event_Update_CreatedByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Event_Update_CreatedByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Event_Update_CreatedByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Event_Update_CreatedByID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Event_Update_DeletedByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Event_Update_DeletedByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Event_Update_DeletedByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Event_Update_DeletedByID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Event_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Event_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Event_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Event_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Event_Update_EventTypeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Event_Update_EventTypeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Event_Update_EventTypeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Event_Update_EventTypeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Event_Update_FinishAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Event_Update_FinishAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Event_Update_FinishAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Event_Update_FinishAt(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Event_Update_IsAllDay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Event_Update_IsAllDay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Event_Update_IsAllDay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Event_Update_IsAllDay(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Event_Update_ModifiedByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Event_Update_ModifiedByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Event_Update_ModifiedByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Event_Update_ModifiedByID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Event_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Event_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Event_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Event_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Event_Update_NotificationID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Event_Update_NotificationID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Event_Update_NotificationID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Event_Update_NotificationID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Event_Update_PerformerID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Event_Update_PerformerID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Event_Update_PerformerID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Event_Update_PerformerID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Event_Update_PriorityTypeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Event_Update_PriorityTypeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Event_Update_PriorityTypeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Event_Update_PriorityTypeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Event_Update_RepeatTypeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Event_Update_RepeatTypeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Event_Update_RepeatTypeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Event_Update_RepeatTypeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Event_Update_StartAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Event_Update_StartAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Event_Update_StartAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Event_Update_StartAt(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Event_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Event_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Event_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Event_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Event_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Event_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Event_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Event_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Event_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Event_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Event_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Event_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Facsimile_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Facsimile_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Facsimile_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Facsimile_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Facsimile_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Facsimile_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Facsimile_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Facsimile_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Facsimile_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Facsimile_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Facsimile_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Facsimile_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Facsimile_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Facsimile_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Facsimile_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Facsimile_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Facsimile_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Facsimile_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Facsimile_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Facsimile_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Facsimile_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Facsimile_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Facsimile_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Facsimile_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Facsimile_Update_Branch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Facsimile_Update_Branch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Facsimile_Update_Branch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Facsimile_Update_Branch(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Facsimile_Update_Contract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Facsimile_Update_Contract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Facsimile_Update_Contract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Facsimile_Update_Contract(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Facsimile_Update_Department_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Facsimile_Update_Department(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Facsimile_Update_Department",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Facsimile_Update_Department(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Facsimile_Update_Post_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Facsimile_Update_Post(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Facsimile_Update_Post",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Facsimile_Update_Post(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Facsimile_Update_Responsible_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Facsimile_Update_Responsible(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Facsimile_Update_Responsible",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Facsimile_Update_Responsible(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Facsimile_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Facsimile_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Facsimile_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Facsimile_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Facsimile_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Facsimile_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Facsimile_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Facsimile_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Facsimile_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Facsimile_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Facsimile_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Facsimile_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_File_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).File_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/File_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).File_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_File_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).File_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/File_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).File_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_File_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).File_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/File_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).File_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_File_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).File_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/File_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).File_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_File_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).File_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/File_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).File_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_File_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).File_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/File_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).File_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_File_FindByFileID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).File_FindByFileID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/File_FindByFileID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).File_FindByFileID(ctx, req.(*RequestString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_File_FindByFullName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).File_FindByFullName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/File_FindByFullName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).File_FindByFullName(ctx, req.(*RequestString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_File_FindMassBy_TableNameID_TableRowID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).File_FindMassBy_TableNameID_TableRowID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/File_FindMassBy_TableNameID_TableRowID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).File_FindMassBy_TableNameID_TableRowID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_File_FindMassBy_TableNameID_TableRowID_FileTypeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).File_FindMassBy_TableNameID_TableRowID_FileTypeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/File_FindMassBy_TableNameID_TableRowID_FileTypeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).File_FindMassBy_TableNameID_TableRowID_FileTypeID(ctx, req.(*Request_Int64_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_File_Update_BranchID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).File_Update_BranchID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/File_Update_BranchID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).File_Update_BranchID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_File_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).File_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/File_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).File_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_File_Update_EmployeeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).File_Update_EmployeeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/File_Update_EmployeeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).File_Update_EmployeeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_File_Update_Extension_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).File_Update_Extension(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/File_Update_Extension",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).File_Update_Extension(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_File_Update_FileID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).File_Update_FileID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/File_Update_FileID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).File_Update_FileID(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_File_Update_FileName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).File_Update_FileName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/File_Update_FileName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).File_Update_FileName(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_File_Update_FileTypeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).File_Update_FileTypeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/File_Update_FileTypeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).File_Update_FileTypeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_File_Update_FullName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).File_Update_FullName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/File_Update_FullName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).File_Update_FullName(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_File_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).File_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/File_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).File_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_File_Update_Size_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).File_Update_Size(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/File_Update_Size",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).File_Update_Size(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_File_Update_TemplateID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).File_Update_TemplateID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/File_Update_TemplateID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).File_Update_TemplateID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_File_Update_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).File_Update_Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/File_Update_Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).File_Update_Version(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_File_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).File_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/File_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).File_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_File_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).File_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/File_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).File_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_File_Save_SaveLink_SaveChangeItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).File_Save_SaveLink_SaveChangeItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/File_Save_SaveLink_SaveChangeItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).File_Save_SaveLink_SaveChangeItems(ctx, req.(*Request_Model_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_File_SaveLinkDeleted_SaveChangeItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_Int64_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).File_SaveLinkDeleted_SaveChangeItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/File_SaveLinkDeleted_SaveChangeItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).File_SaveLinkDeleted_SaveChangeItems(ctx, req.(*Request_Model_Int64_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_File_Update_TableNameID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).File_Update_TableNameID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/File_Update_TableNameID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).File_Update_TableNameID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_File_Update_TableRowID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).File_Update_TableRowID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/File_Update_TableRowID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).File_Update_TableRowID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_File_Update_BucketName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).File_Update_BucketName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/File_Update_BucketName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).File_Update_BucketName(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_File_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).File_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/File_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).File_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileChange_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileChange_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileChange_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileChange_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileChange_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileChange_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileChange_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileChange_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileChange_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileChange_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileChange_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileChange_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileChange_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileChange_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileChange_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileChange_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileChange_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileChange_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileChange_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileChange_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileChange_Update_EmployeeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileChange_Update_EmployeeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileChange_Update_EmployeeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileChange_Update_EmployeeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileChange_Update_FileID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileChange_Update_FileID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileChange_Update_FileID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileChange_Update_FileID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileChange_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileChange_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileChange_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileChange_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileChange_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileChange_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileChange_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileChange_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileChange_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileChange_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileChange_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileChange_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileTemplate_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileTemplate_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileTemplate_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileTemplate_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileTemplate_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileTemplate_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileTemplate_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileTemplate_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileTemplate_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileTemplate_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileTemplate_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileTemplate_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileTemplate_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileTemplate_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileTemplate_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileTemplate_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileTemplate_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileTemplate_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileTemplate_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileTemplate_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileTemplate_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileTemplate_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileTemplate_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileTemplate_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileTemplate_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileTemplate_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileTemplate_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileTemplate_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileTemplate_Update_FileID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileTemplate_Update_FileID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileTemplate_Update_FileID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileTemplate_Update_FileID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileTemplate_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileTemplate_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileTemplate_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileTemplate_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileTemplate_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileTemplate_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileTemplate_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileTemplate_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileTemplate_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileTemplate_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileTemplate_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileTemplate_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileTemplate_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileTemplate_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileTemplate_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileTemplate_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FilesClaim_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FilesClaim_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FilesClaim_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FilesClaim_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FilesClaim_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FilesClaim_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FilesClaim_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FilesClaim_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FilesClaim_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FilesClaim_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FilesClaim_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FilesClaim_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FilesClaim_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FilesClaim_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FilesClaim_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FilesClaim_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FilesClaim_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FilesClaim_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FilesClaim_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FilesClaim_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FilesClaim_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FilesClaim_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FilesClaim_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FilesClaim_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FilesClaim_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FilesClaim_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FilesClaim_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FilesClaim_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FilesClaim_Update_CheckOfClaim_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FilesClaim_Update_CheckOfClaim(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FilesClaim_Update_CheckOfClaim",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FilesClaim_Update_CheckOfClaim(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FilesClaim_Update_Code_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FilesClaim_Update_Code(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FilesClaim_Update_Code",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FilesClaim_Update_Code(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FilesClaim_Update_ConsumerSignature_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FilesClaim_Update_ConsumerSignature(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FilesClaim_Update_ConsumerSignature",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FilesClaim_Update_ConsumerSignature(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FilesClaim_Update_DateOfDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FilesClaim_Update_DateOfDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FilesClaim_Update_DateOfDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FilesClaim_Update_DateOfDocument(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FilesClaim_Update_DateOfDownload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FilesClaim_Update_DateOfDownload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FilesClaim_Update_DateOfDownload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FilesClaim_Update_DateOfDownload(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FilesClaim_Update_FilePath_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FilesClaim_Update_FilePath(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FilesClaim_Update_FilePath",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FilesClaim_Update_FilePath(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FilesClaim_Update_Invoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FilesClaim_Update_Invoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FilesClaim_Update_Invoice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FilesClaim_Update_Invoice(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FilesClaim_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FilesClaim_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FilesClaim_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FilesClaim_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FilesClaim_Update_Number_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FilesClaim_Update_Number(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FilesClaim_Update_Number",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FilesClaim_Update_Number(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FilesClaim_Update_OriginalDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FilesClaim_Update_OriginalDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FilesClaim_Update_OriginalDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FilesClaim_Update_OriginalDocument(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FilesClaim_Update_Period_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FilesClaim_Update_Period(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FilesClaim_Update_Period",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FilesClaim_Update_Period(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FilesClaim_Update_PersonDownloadID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FilesClaim_Update_PersonDownloadID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FilesClaim_Update_PersonDownloadID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FilesClaim_Update_PersonDownloadID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FilesClaim_Update_SignOfObligation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FilesClaim_Update_SignOfObligation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FilesClaim_Update_SignOfObligation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FilesClaim_Update_SignOfObligation(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FilesClaim_Update_StatusOfDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FilesClaim_Update_StatusOfDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FilesClaim_Update_StatusOfDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FilesClaim_Update_StatusOfDocument(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FilesClaim_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FilesClaim_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FilesClaim_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FilesClaim_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileType_Update_Code_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileType_Update_Code(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileType_Update_Code",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileType_Update_Code(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileType_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileType_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileType_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileType_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileType_Update_CanBeSynced_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileType_Update_CanBeSynced(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileType_Update_CanBeSynced",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileType_Update_CanBeSynced(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileType_Update_MimeType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileType_Update_MimeType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileType_Update_MimeType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileType_Update_MimeType(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileType_Update_RequireUpload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileType_Update_RequireUpload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileType_Update_RequireUpload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileType_Update_RequireUpload(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileType_ReadAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileType_ReadAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileType_ReadAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileType_ReadAll(ctx, req.(*Request_Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileType_Update_TableNameID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileType_Update_TableNameID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileType_Update_TableNameID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileType_Update_TableNameID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileType_FindBy_Code_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileType_FindBy_Code(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileType_FindBy_Code",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileType_FindBy_Code(ctx, req.(*Request_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileType_Update_ExistsBankMark_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileType_Update_ExistsBankMark(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileType_Update_ExistsBankMark",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileType_Update_ExistsBankMark(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileType_Update_ExistsSignature_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileType_Update_ExistsSignature(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileType_Update_ExistsSignature",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileType_Update_ExistsSignature(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileType_Update_FilenameTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileType_Update_FilenameTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileType_Update_FilenameTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileType_Update_FilenameTemplate(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileType_Update_MultipleLoad_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileType_Update_MultipleLoad(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileType_Update_MultipleLoad",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileType_Update_MultipleLoad(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_FileType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).FileType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/FileType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).FileType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_GenderType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).GenderType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/GenderType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).GenderType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_GenderType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).GenderType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/GenderType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).GenderType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_GenderType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).GenderType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/GenderType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).GenderType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_GenderType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).GenderType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/GenderType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).GenderType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_GenderType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).GenderType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/GenderType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).GenderType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_GenderType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).GenderType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/GenderType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).GenderType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_GenderType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).GenderType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/GenderType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).GenderType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_GenderType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).GenderType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/GenderType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).GenderType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_GenderType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).GenderType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/GenderType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).GenderType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_GenderType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).GenderType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/GenderType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).GenderType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Hashtag_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Hashtag_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Hashtag_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Hashtag_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Hashtag_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Hashtag_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Hashtag_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Hashtag_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Hashtag_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Hashtag_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Hashtag_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Hashtag_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Hashtag_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Hashtag_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Hashtag_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Hashtag_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Hashtag_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Hashtag_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Hashtag_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Hashtag_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Hashtag_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Hashtag_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Hashtag_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Hashtag_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Hashtag_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Hashtag_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Hashtag_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Hashtag_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Hashtag_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Hashtag_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Hashtag_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Hashtag_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Hashtag_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Hashtag_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Hashtag_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Hashtag_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Hashtag_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Hashtag_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Hashtag_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Hashtag_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Hashtag_ReadAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Hashtag_ReadAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Hashtag_ReadAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Hashtag_ReadAll(ctx, req.(*Request_Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Hashtag_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Hashtag_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Hashtag_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Hashtag_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Individual_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Individual_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Individual_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Individual_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Individual_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Individual_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Individual_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Individual_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Individual_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Individual_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Individual_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Individual_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Individual_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Individual_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Individual_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Individual_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Individual_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Individual_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Individual_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Individual_FindByExtID(ctx, req.(*RequestExtID))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Individual_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Individual_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Individual_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Individual_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Individual_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Individual_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Individual_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Individual_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Individual_Update_BirthDate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Individual_Update_BirthDate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Individual_Update_BirthDate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Individual_Update_BirthDate(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Individual_Update_ConnectionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Individual_Update_ConnectionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Individual_Update_ConnectionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Individual_Update_ConnectionID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Individual_Update_DeathDate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Individual_Update_DeathDate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Individual_Update_DeathDate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Individual_Update_DeathDate(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Individual_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Individual_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Individual_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Individual_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Individual_Update_Email_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Individual_Update_Email(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Individual_Update_Email",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Individual_Update_Email(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Individual_Update_GenderID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Individual_Update_GenderID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Individual_Update_GenderID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Individual_Update_GenderID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Individual_Update_INN_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Individual_Update_INN(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Individual_Update_INN",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Individual_Update_INN(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Individual_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Individual_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Individual_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Individual_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Individual_Update_ParentName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Individual_Update_ParentName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Individual_Update_ParentName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Individual_Update_ParentName(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Individual_Update_Phone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Individual_Update_Phone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Individual_Update_Phone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Individual_Update_Phone(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Individual_Update_SecondName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Individual_Update_SecondName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Individual_Update_SecondName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Individual_Update_SecondName(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Individual_Update_Snils_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Individual_Update_Snils(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Individual_Update_Snils",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Individual_Update_Snils(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Individual_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Individual_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Individual_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Individual_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Individual_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Individual_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Individual_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Individual_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Individual_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Individual_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Individual_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Individual_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_InnerNotifyMessage_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/InnerNotifyMessage_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_InnerNotifyMessage_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/InnerNotifyMessage_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_InnerNotifyMessage_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/InnerNotifyMessage_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_InnerNotifyMessage_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/InnerNotifyMessage_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_InnerNotifyMessage_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/InnerNotifyMessage_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_InnerNotifyMessage_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/InnerNotifyMessage_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_InnerNotifyMessage_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/InnerNotifyMessage_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_InnerNotifyMessage_Update_Body_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_Update_Body(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/InnerNotifyMessage_Update_Body",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_Update_Body(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_InnerNotifyMessage_Update_ContractID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_Update_ContractID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/InnerNotifyMessage_Update_ContractID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_Update_ContractID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_InnerNotifyMessage_Update_MessageType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_Update_MessageType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/InnerNotifyMessage_Update_MessageType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_Update_MessageType(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_InnerNotifyMessage_Update_RecipientEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_Update_RecipientEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/InnerNotifyMessage_Update_RecipientEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_Update_RecipientEmail(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_InnerNotifyMessage_Update_SendResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_Update_SendResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/InnerNotifyMessage_Update_SendResult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_Update_SendResult(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_InnerNotifyMessage_Update_SenderEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_Update_SenderEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/InnerNotifyMessage_Update_SenderEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_Update_SenderEmail(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_InnerNotifyMessage_Update_Subject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_Update_Subject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/InnerNotifyMessage_Update_Subject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_Update_Subject(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_InnerNotifyMessage_Update_Title_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_Update_Title(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/InnerNotifyMessage_Update_Title",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_Update_Title(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_InnerNotifyMessage_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/InnerNotifyMessage_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_InnerNotifyMessage_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/InnerNotifyMessage_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).InnerNotifyMessage_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_InvoiceDebtTypeStat_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).InvoiceDebtTypeStat_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/InvoiceDebtTypeStat_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).InvoiceDebtTypeStat_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_InvoiceDebtTypeStat_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).InvoiceDebtTypeStat_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/InvoiceDebtTypeStat_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).InvoiceDebtTypeStat_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_InvoiceDebtTypeStat_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).InvoiceDebtTypeStat_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/InvoiceDebtTypeStat_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).InvoiceDebtTypeStat_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_InvoiceDebtTypeStat_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).InvoiceDebtTypeStat_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/InvoiceDebtTypeStat_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).InvoiceDebtTypeStat_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_InvoiceDebtTypeStat_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).InvoiceDebtTypeStat_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/InvoiceDebtTypeStat_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).InvoiceDebtTypeStat_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_InvoiceDebtTypeStat_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).InvoiceDebtTypeStat_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/InvoiceDebtTypeStat_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).InvoiceDebtTypeStat_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_InvoiceDebtTypeStat_Update_DebtTypeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).InvoiceDebtTypeStat_Update_DebtTypeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/InvoiceDebtTypeStat_Update_DebtTypeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).InvoiceDebtTypeStat_Update_DebtTypeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_InvoiceDebtTypeStat_Update_InvoiceID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).InvoiceDebtTypeStat_Update_InvoiceID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/InvoiceDebtTypeStat_Update_InvoiceID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).InvoiceDebtTypeStat_Update_InvoiceID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_InvoiceDebtTypeStat_Update_StateAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).InvoiceDebtTypeStat_Update_StateAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/InvoiceDebtTypeStat_Update_StateAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).InvoiceDebtTypeStat_Update_StateAt(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_InvoiceDebtTypeStat_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).InvoiceDebtTypeStat_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/InvoiceDebtTypeStat_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).InvoiceDebtTypeStat_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_InvoiceDebtTypeStat_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).InvoiceDebtTypeStat_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/InvoiceDebtTypeStat_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).InvoiceDebtTypeStat_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_InvoiceDebtTypeStat_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).InvoiceDebtTypeStat_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/InvoiceDebtTypeStat_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).InvoiceDebtTypeStat_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_FindByExtID(ctx, req.(*RequestExtID))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_FindBy_Number_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_FindBy_Number(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_FindBy_Number",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_FindBy_Number(ctx, req.(*RequestString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_FindBy_NumberClaim_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_FindBy_NumberClaim(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_FindBy_NumberClaim",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_FindBy_NumberClaim(ctx, req.(*RequestString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_BranchID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_BranchID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_BranchID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_BranchID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_Chance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_Chance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_Chance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_Chance(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_ClaimAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_ClaimAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_ClaimAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_ClaimAt(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_ClaimPeriodStr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_ClaimPeriodStr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_ClaimPeriodStr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_ClaimPeriodStr(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_ClaimTypeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_ClaimTypeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_ClaimTypeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_ClaimTypeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_ClosedAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_ClosedAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_ClosedAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_ClosedAt(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_ConnectionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_ConnectionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_ConnectionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_ConnectionID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_ContractID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_ContractID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_ContractID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_ContractID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_ControlledAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_ControlledAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_ControlledAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_ControlledAt(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_CourtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_CourtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_CourtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_CourtID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_CuratorClaimID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_CuratorClaimID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_CuratorClaimID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_CuratorClaimID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_CuratorContractID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_CuratorContractID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_CuratorContractID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_CuratorContractID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_CuratorLegalID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_CuratorLegalID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_CuratorLegalID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_CuratorLegalID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_CuratorPaymentID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_CuratorPaymentID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_CuratorPaymentID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_CuratorPaymentID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_CuratorTechAuditID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_CuratorTechAuditID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_CuratorTechAuditID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_CuratorTechAuditID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_DateFrom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_DateFrom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_DateFrom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_DateFrom(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_DateTo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_DateTo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_DateTo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_DateTo(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_DebtSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_DebtSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_DebtSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_DebtSum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_DebtSumAllTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_DebtSumAllTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_DebtSumAllTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_DebtSumAllTypes(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_ErrorText_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_ErrorText(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_ErrorText",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_ErrorText(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_InvoiceSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_InvoiceSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_InvoiceSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_InvoiceSum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_IsClosed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_IsClosed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_IsClosed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_IsClosed(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_MainSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_MainSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_MainSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_MainSum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_NotifyClaimAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_NotifyClaimAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_NotifyClaimAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_NotifyClaimAt(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_NotifyClaimChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_NotifyClaimChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_NotifyClaimChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_NotifyClaimChannel(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_NotifyClaimCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_NotifyClaimCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_NotifyClaimCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_NotifyClaimCode(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_NotifyClaimDone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_NotifyClaimDone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_NotifyClaimDone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_NotifyClaimDone(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_NotifyClaimMailingCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_NotifyClaimMailingCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_NotifyClaimMailingCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_NotifyClaimMailingCode(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_NotifyPretrialAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_NotifyPretrialAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_NotifyPretrialAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_NotifyPretrialAt(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_NotifyPretrialChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_NotifyPretrialChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_NotifyPretrialChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_NotifyPretrialChannel(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_NotifyPretrialCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_NotifyPretrialCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_NotifyPretrialCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_NotifyPretrialCode(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_NotifyPretrialDone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_NotifyPretrialDone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_NotifyPretrialDone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_NotifyPretrialDone(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_NotifyPretrialMailingCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_NotifyPretrialMailingCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_NotifyPretrialMailingCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_NotifyPretrialMailingCode(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_Number_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_Number(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_Number",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_Number(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_NumberClaim_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_NumberClaim(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_NumberClaim",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_NumberClaim(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_NumberTrial_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_NumberTrial(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_NumberTrial",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_NumberTrial(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_PaySum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_PaySum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_PaySum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_PaySum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_Penalty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_Penalty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_Penalty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_Penalty(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_Penny_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_Penny(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_Penny",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_Penny(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_Percent317_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_Percent317(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_Percent317",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_Percent317(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_Percent395_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_Percent395(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_Percent395",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_Percent395(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_PretrialAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_PretrialAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_PretrialAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_PretrialAt(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_ProcessKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_ProcessKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_ProcessKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_ProcessKey(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_ProcessStartedAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_ProcessStartedAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_ProcessStartedAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_ProcessStartedAt(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_ReasonID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_ReasonID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_ReasonID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_ReasonID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_RestrictSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_RestrictSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_RestrictSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_RestrictSum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_StageAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_StageAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_StageAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_StageAt(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_StageID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_StageID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_StageID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_StageID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_StateDuty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_StateDuty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_StateDuty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_StateDuty(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_StatusAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_StatusAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_StatusAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_StatusAt(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_StatusID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_StatusID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_StatusID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_StatusID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_Tag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_Tag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_Tag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_Tag(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_TypeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_TypeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_TypeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_TypeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_UnknownPayments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_UnknownPayments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_UnknownPayments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_UnknownPayments(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_TrialAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_TrialAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_TrialAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_TrialAt(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_NotifyPostBarcode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_NotifyPostBarcode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_NotifyPostBarcode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_NotifyPostBarcode(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_Update_NotifyPostReq_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_Update_NotifyPostReq(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_Update_NotifyPostReq",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_Update_NotifyPostReq(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Lawsuit_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Lawsuit_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Lawsuit_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Lawsuit_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitComment_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitComment_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitComment_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitComment_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitComment_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitComment_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitComment_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitComment_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitComment_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitComment_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitComment_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitComment_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitComment_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitComment_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitComment_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitComment_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitComment_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitComment_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitComment_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitComment_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitComment_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitComment_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitComment_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitComment_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitComment_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitComment_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitComment_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitComment_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitComment_Update_CommentTypeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitComment_Update_CommentTypeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitComment_Update_CommentTypeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitComment_Update_CommentTypeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitComment_Update_EmployeeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitComment_Update_EmployeeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitComment_Update_EmployeeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitComment_Update_EmployeeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitComment_Update_LawsuitID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitComment_Update_LawsuitID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitComment_Update_LawsuitID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitComment_Update_LawsuitID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitComment_Update_Message_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitComment_Update_Message(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitComment_Update_Message",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitComment_Update_Message(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitComment_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitComment_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitComment_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitComment_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitComment_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitComment_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitComment_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitComment_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitComment_FindMassBy_LawsuitID_CommentTypeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitComment_FindMassBy_LawsuitID_CommentTypeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitComment_FindMassBy_LawsuitID_CommentTypeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitComment_FindMassBy_LawsuitID_CommentTypeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitsFile_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitsFile_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitsFile_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitsFile_Read(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitsFile_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitsFile_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitsFile_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitsFile_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitsFile_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitsFile_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitsFile_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitsFile_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitsFile_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitsFile_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitsFile_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitsFile_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitsFile_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitsFile_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitsFile_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitsFile_Delete(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitsFile_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitsFile_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitsFile_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitsFile_Restore(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitsFile_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitsFile_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitsFile_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitsFile_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitsFile_Update_FileID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitsFile_Update_FileID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitsFile_Update_FileID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitsFile_Update_FileID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitsFile_Update_LawsuitID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitsFile_Update_LawsuitID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitsFile_Update_LawsuitID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitsFile_Update_LawsuitID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitsFile_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitsFile_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitsFile_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitsFile_ReadFromCache(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitsFile_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitsFile_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitsFile_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitsFile_ReadObject(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitsFile_FindMassBy_LawsuitID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitsFile_FindMassBy_LawsuitID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitsFile_FindMassBy_LawsuitID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitsFile_FindMassBy_LawsuitID(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitsFile_FindMassObjectBy_LawsuitID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitsFile_FindMassObjectBy_LawsuitID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitsFile_FindMassObjectBy_LawsuitID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitsFile_FindMassObjectBy_LawsuitID(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitInvoiceCorrection_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitInvoiceCorrection_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitInvoiceCorrection_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitInvoiceCorrection_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitInvoiceCorrection_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitInvoiceCorrection_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitInvoiceCorrection_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitInvoiceCorrection_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitInvoiceCorrection_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitInvoiceCorrection_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitInvoiceCorrection_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitInvoiceCorrection_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitInvoiceCorrection_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitInvoiceCorrection_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitInvoiceCorrection_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitInvoiceCorrection_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitInvoiceCorrection_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitInvoiceCorrection_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitInvoiceCorrection_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitInvoiceCorrection_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitInvoiceCorrection_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitInvoiceCorrection_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitInvoiceCorrection_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitInvoiceCorrection_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitInvoiceCorrection_Update_CorrectionDocumentID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitInvoiceCorrection_Update_CorrectionDocumentID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitInvoiceCorrection_Update_CorrectionDocumentID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitInvoiceCorrection_Update_CorrectionDocumentID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitInvoiceCorrection_Update_CorrectionDocumentSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitInvoiceCorrection_Update_CorrectionDocumentSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitInvoiceCorrection_Update_CorrectionDocumentSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitInvoiceCorrection_Update_CorrectionDocumentSum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitInvoiceCorrection_Update_InvoiceDocumentID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitInvoiceCorrection_Update_InvoiceDocumentID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitInvoiceCorrection_Update_InvoiceDocumentID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitInvoiceCorrection_Update_InvoiceDocumentID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitInvoiceCorrection_Update_LawsuitID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitInvoiceCorrection_Update_LawsuitID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitInvoiceCorrection_Update_LawsuitID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitInvoiceCorrection_Update_LawsuitID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitInvoiceCorrection_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitInvoiceCorrection_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitInvoiceCorrection_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitInvoiceCorrection_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitInvoiceCorrection_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitInvoiceCorrection_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitInvoiceCorrection_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitInvoiceCorrection_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitInvoiceCorrection_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitInvoiceCorrection_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitInvoiceCorrection_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitInvoiceCorrection_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitInvoice_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitInvoice_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitInvoice_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitInvoice_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitInvoice_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitInvoice_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitInvoice_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitInvoice_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitInvoice_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitInvoice_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitInvoice_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitInvoice_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitInvoice_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitInvoice_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitInvoice_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitInvoice_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitInvoice_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitInvoice_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitInvoice_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitInvoice_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitInvoice_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitInvoice_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitInvoice_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitInvoice_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitInvoice_Update_ClosedAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitInvoice_Update_ClosedAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitInvoice_Update_ClosedAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitInvoice_Update_ClosedAt(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitInvoice_Update_ClosedSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitInvoice_Update_ClosedSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitInvoice_Update_ClosedSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitInvoice_Update_ClosedSum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitInvoice_Update_Count_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitInvoice_Update_Count(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitInvoice_Update_Count",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitInvoice_Update_Count(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitInvoice_Update_DocumentID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitInvoice_Update_DocumentID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitInvoice_Update_DocumentID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitInvoice_Update_DocumentID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitInvoice_Update_DocumentSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitInvoice_Update_DocumentSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitInvoice_Update_DocumentSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitInvoice_Update_DocumentSum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitInvoice_Update_IsClosed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitInvoice_Update_IsClosed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitInvoice_Update_IsClosed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitInvoice_Update_IsClosed(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitInvoice_Update_IsCorrective_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitInvoice_Update_IsCorrective(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitInvoice_Update_IsCorrective",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitInvoice_Update_IsCorrective(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitInvoice_Update_LawsuitID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitInvoice_Update_LawsuitID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitInvoice_Update_LawsuitID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitInvoice_Update_LawsuitID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitInvoice_Update_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitInvoice_Update_Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitInvoice_Update_Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitInvoice_Update_Sum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitInvoice_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitInvoice_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitInvoice_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitInvoice_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitInvoice_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitInvoice_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitInvoice_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitInvoice_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitInvoice_Update_BriefcaseID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitInvoice_Update_BriefcaseID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitInvoice_Update_BriefcaseID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitInvoice_Update_BriefcaseID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitInvoice_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitInvoice_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitInvoice_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitInvoice_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitPaymentCorrection_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitPaymentCorrection_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitPaymentCorrection_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitPaymentCorrection_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitPaymentCorrection_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitPaymentCorrection_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitPaymentCorrection_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitPaymentCorrection_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitPaymentCorrection_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitPaymentCorrection_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitPaymentCorrection_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitPaymentCorrection_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitPaymentCorrection_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitPaymentCorrection_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitPaymentCorrection_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitPaymentCorrection_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitPaymentCorrection_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitPaymentCorrection_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitPaymentCorrection_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitPaymentCorrection_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitPaymentCorrection_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitPaymentCorrection_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitPaymentCorrection_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitPaymentCorrection_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitPaymentCorrection_Update_CorrectionDocumentID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitPaymentCorrection_Update_CorrectionDocumentID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitPaymentCorrection_Update_CorrectionDocumentID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitPaymentCorrection_Update_CorrectionDocumentID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitPaymentCorrection_Update_CorrectionDocumentSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitPaymentCorrection_Update_CorrectionDocumentSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitPaymentCorrection_Update_CorrectionDocumentSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitPaymentCorrection_Update_CorrectionDocumentSum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitPaymentCorrection_Update_LawsuitID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitPaymentCorrection_Update_LawsuitID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitPaymentCorrection_Update_LawsuitID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitPaymentCorrection_Update_LawsuitID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitPaymentCorrection_Update_PaymentDocumentID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitPaymentCorrection_Update_PaymentDocumentID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitPaymentCorrection_Update_PaymentDocumentID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitPaymentCorrection_Update_PaymentDocumentID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitPaymentCorrection_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitPaymentCorrection_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitPaymentCorrection_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitPaymentCorrection_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitPaymentCorrection_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitPaymentCorrection_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitPaymentCorrection_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitPaymentCorrection_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitPaymentCorrection_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitPaymentCorrection_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitPaymentCorrection_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitPaymentCorrection_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitPayment_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitPayment_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitPayment_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitPayment_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitPayment_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitPayment_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitPayment_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitPayment_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitPayment_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitPayment_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitPayment_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitPayment_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitPayment_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitPayment_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitPayment_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitPayment_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitPayment_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitPayment_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitPayment_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitPayment_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitPayment_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitPayment_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitPayment_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitPayment_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitPayment_Update_DocumentID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitPayment_Update_DocumentID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitPayment_Update_DocumentID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitPayment_Update_DocumentID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitPayment_Update_DocumentSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitPayment_Update_DocumentSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitPayment_Update_DocumentSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitPayment_Update_DocumentSum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitPayment_Update_InvoiceID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitPayment_Update_InvoiceID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitPayment_Update_InvoiceID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitPayment_Update_InvoiceID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitPayment_Update_IsCorrective_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitPayment_Update_IsCorrective(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitPayment_Update_IsCorrective",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitPayment_Update_IsCorrective(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitPayment_Update_LawsuitID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitPayment_Update_LawsuitID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitPayment_Update_LawsuitID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitPayment_Update_LawsuitID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitPayment_Update_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitPayment_Update_Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitPayment_Update_Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitPayment_Update_Sum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitPayment_Update_LinkedAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitPayment_Update_LinkedAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitPayment_Update_LinkedAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitPayment_Update_LinkedAt(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitPayment_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitPayment_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitPayment_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitPayment_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitPayment_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitPayment_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitPayment_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitPayment_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitPayment_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitPayment_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitPayment_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitPayment_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitReasonType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitReasonType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitReasonType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitReasonType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitReasonType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitReasonType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitReasonType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitReasonType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitReasonType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitReasonType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitReasonType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitReasonType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitReasonType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitReasonType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitReasonType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitReasonType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitReasonType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitReasonType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitReasonType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitReasonType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitReasonType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitReasonType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitReasonType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitReasonType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitReasonType_Update_Code_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitReasonType_Update_Code(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitReasonType_Update_Code",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitReasonType_Update_Code(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitReasonType_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitReasonType_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitReasonType_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitReasonType_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitReasonType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitReasonType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitReasonType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitReasonType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitReasonType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitReasonType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitReasonType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitReasonType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitReasonType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitReasonType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitReasonType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitReasonType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitReasonType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitReasonType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitReasonType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitReasonType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStageType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStageType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStageType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStageType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStageType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStageType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStageType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStageType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStageType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStageType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStageType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStageType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStageType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStageType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStageType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStageType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStageType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStageType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStageType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStageType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStageType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStageType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStageType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStageType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStageType_Update_Code_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStageType_Update_Code(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStageType_Update_Code",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStageType_Update_Code(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStageType_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStageType_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStageType_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStageType_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStageType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStageType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStageType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStageType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStageType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStageType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStageType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStageType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStageType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStageType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStageType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStageType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStageType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStageType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStageType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStageType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusState_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusState_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusState_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusState_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusState_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusState_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusState_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusState_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusState_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusState_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusState_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusState_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusState_FillFromLawsuit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusState_FillFromLawsuit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusState_FillFromLawsuit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusState_FillFromLawsuit(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusState_FindDebtSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusState_FindDebtSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusState_FindDebtSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusState_FindDebtSum(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusState_FindPreviousStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusState_FindPreviousStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusState_FindPreviousStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusState_FindPreviousStatus(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusState_Update_CommentID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Update_CommentID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusState_Update_CommentID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Update_CommentID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusState_Update_InvoiceSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Update_InvoiceSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusState_Update_InvoiceSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Update_InvoiceSum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusState_Update_LawsuitID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Update_LawsuitID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusState_Update_LawsuitID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Update_LawsuitID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusState_Update_MainSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Update_MainSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusState_Update_MainSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Update_MainSum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusState_Update_PaySum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Update_PaySum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusState_Update_PaySum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Update_PaySum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusState_Update_PenaltySum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Update_PenaltySum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusState_Update_PenaltySum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Update_PenaltySum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusState_Update_PennySum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Update_PennySum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusState_Update_PennySum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Update_PennySum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusState_Update_RestrictSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Update_RestrictSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusState_Update_RestrictSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Update_RestrictSum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusState_Update_StateDutySum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Update_StateDutySum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusState_Update_StateDutySum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Update_StateDutySum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusState_Update_StatusAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Update_StatusAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusState_Update_StatusAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Update_StatusAt(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusState_Update_StatusID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Update_StatusID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusState_Update_StatusID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Update_StatusID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusState_Update_Tag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Update_Tag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusState_Update_Tag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Update_Tag(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusState_Update_TotalDebt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Update_TotalDebt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusState_Update_TotalDebt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Update_TotalDebt(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusState_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusState_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusState_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusState_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusState_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusState_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusState_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusState_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusState_Update_ContractDebtSumAllTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Update_ContractDebtSumAllTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusState_Update_ContractDebtSumAllTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Update_ContractDebtSumAllTypes(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusState_Update_BillsTotalSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Update_BillsTotalSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusState_Update_BillsTotalSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusState_Update_BillsTotalSum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusState_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusState_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusState_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusState_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusType_Update_Code_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusType_Update_Code(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusType_Update_Code",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusType_Update_Code(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusType_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusType_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusType_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusType_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusType_Update_IsClosed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusType_Update_IsClosed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusType_Update_IsClosed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusType_Update_IsClosed(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusType_Update_ColorID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusType_Update_ColorID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusType_Update_ColorID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusType_Update_ColorID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusType_Update_IsError_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusType_Update_IsError(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusType_Update_IsError",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusType_Update_IsError(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusType_Update_IsTech_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusType_Update_IsTech(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusType_Update_IsTech",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusType_Update_IsTech(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusType_Update_ViewSort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusType_Update_ViewSort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusType_Update_ViewSort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusType_Update_ViewSort(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitStatusType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitStatusType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitStatusType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitStatusType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitType_Update_Code_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitType_Update_Code(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitType_Update_Code",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitType_Update_Code(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitType_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitType_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitType_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitType_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LawsuitType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LawsuitType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LawsuitType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LawsuitType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LegalType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LegalType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LegalType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LegalType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LegalType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LegalType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LegalType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LegalType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LegalType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LegalType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LegalType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LegalType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LegalType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LegalType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LegalType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LegalType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LegalType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LegalType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LegalType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LegalType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LegalType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LegalType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LegalType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LegalType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LegalType_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LegalType_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LegalType_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LegalType_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LegalType_Update_IsIndividual_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LegalType_Update_IsIndividual(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LegalType_Update_IsIndividual",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LegalType_Update_IsIndividual(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LegalType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LegalType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LegalType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LegalType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LegalType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LegalType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LegalType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LegalType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LegalType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LegalType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LegalType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LegalType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LegalType_ReadAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LegalType_ReadAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LegalType_ReadAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LegalType_ReadAll(ctx, req.(*Request_Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LegalType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LegalType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LegalType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LegalType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LitigationType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LitigationType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LitigationType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LitigationType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LitigationType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LitigationType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LitigationType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LitigationType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LitigationType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LitigationType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LitigationType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LitigationType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LitigationType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LitigationType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LitigationType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LitigationType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LitigationType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LitigationType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LitigationType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LitigationType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LitigationType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LitigationType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LitigationType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LitigationType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LitigationType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LitigationType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LitigationType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LitigationType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LitigationType_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LitigationType_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LitigationType_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LitigationType_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LitigationType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LitigationType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LitigationType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LitigationType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LitigationType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LitigationType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LitigationType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LitigationType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LitigationType_ReadAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LitigationType_ReadAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LitigationType_ReadAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LitigationType_ReadAll(ctx, req.(*Request_Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_LitigationType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).LitigationType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/LitigationType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).LitigationType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageAttachement_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageAttachement_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageAttachement_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageAttachement_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageAttachement_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageAttachement_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageAttachement_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageAttachement_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageAttachement_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageAttachement_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageAttachement_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageAttachement_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageAttachement_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageAttachement_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageAttachement_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageAttachement_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageAttachement_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageAttachement_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageAttachement_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageAttachement_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageAttachement_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageAttachement_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageAttachement_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageAttachement_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageAttachement_Update_FilesID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageAttachement_Update_FilesID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageAttachement_Update_FilesID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageAttachement_Update_FilesID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageAttachement_Update_MessagesID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageAttachement_Update_MessagesID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageAttachement_Update_MessagesID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageAttachement_Update_MessagesID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageAttachement_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageAttachement_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageAttachement_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageAttachement_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageAttachement_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageAttachement_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageAttachement_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageAttachement_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageAttachement_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageAttachement_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageAttachement_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageAttachement_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageSendStatus_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageSendStatus_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageSendStatus_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageSendStatus_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageSendStatus_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageSendStatus_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageSendStatus_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageSendStatus_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageSendStatus_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageSendStatus_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageSendStatus_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageSendStatus_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageSendStatus_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageSendStatus_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageSendStatus_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageSendStatus_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageSendStatus_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageSendStatus_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageSendStatus_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageSendStatus_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageSendStatus_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageSendStatus_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageSendStatus_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageSendStatus_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageSendStatus_Update_Code_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageSendStatus_Update_Code(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageSendStatus_Update_Code",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageSendStatus_Update_Code(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageSendStatus_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageSendStatus_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageSendStatus_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageSendStatus_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageSendStatus_Update_FormalName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageSendStatus_Update_FormalName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageSendStatus_Update_FormalName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageSendStatus_Update_FormalName(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageSendStatus_Update_IsDelivered_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageSendStatus_Update_IsDelivered(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageSendStatus_Update_IsDelivered",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageSendStatus_Update_IsDelivered(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageSendStatus_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageSendStatus_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageSendStatus_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageSendStatus_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageSendStatus_Update_NotifierID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageSendStatus_Update_NotifierID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageSendStatus_Update_NotifierID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageSendStatus_Update_NotifierID(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageSendStatus_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageSendStatus_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageSendStatus_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageSendStatus_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageSendStatus_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageSendStatus_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageSendStatus_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageSendStatus_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageSendStatus_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageSendStatus_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageSendStatus_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageSendStatus_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageType_Update_Code_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageType_Update_Code(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageType_Update_Code",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageType_Update_Code(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageType_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageType_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageType_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageType_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_MessageType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).MessageType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/MessageType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).MessageType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Message_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Message_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Message_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Message_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Message_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Message_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Message_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Message_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Message_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Message_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Message_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Message_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Message_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Message_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Message_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Message_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Message_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Message_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Message_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Message_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Message_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Message_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Message_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Message_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Message_FindBy_LawsuitID_MessageTypeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Message_FindBy_LawsuitID_MessageTypeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Message_FindBy_LawsuitID_MessageTypeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Message_FindBy_LawsuitID_MessageTypeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Message_Update_ChannelTypeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Message_Update_ChannelTypeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Message_Update_ChannelTypeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Message_Update_ChannelTypeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Message_Update_ContactFrom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Message_Update_ContactFrom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Message_Update_ContactFrom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Message_Update_ContactFrom(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Message_Update_ContactTo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Message_Update_ContactTo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Message_Update_ContactTo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Message_Update_ContactTo(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Message_Update_DirectionTypeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Message_Update_DirectionTypeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Message_Update_DirectionTypeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Message_Update_DirectionTypeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Message_Update_EmployeeIdFrom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Message_Update_EmployeeIdFrom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Message_Update_EmployeeIdFrom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Message_Update_EmployeeIdFrom(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Message_Update_EmployeeIdTo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Message_Update_EmployeeIdTo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Message_Update_EmployeeIdTo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Message_Update_EmployeeIdTo(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Message_Update_ExtCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Message_Update_ExtCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Message_Update_ExtCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Message_Update_ExtCode(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Message_Update_LawsuitID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Message_Update_LawsuitID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Message_Update_LawsuitID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Message_Update_LawsuitID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Message_Update_MailingCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Message_Update_MailingCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Message_Update_MailingCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Message_Update_MailingCode(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Message_Update_MessageFileID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Message_Update_MessageFileID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Message_Update_MessageFileID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Message_Update_MessageFileID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Message_Update_MessageTypeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Message_Update_MessageTypeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Message_Update_MessageTypeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Message_Update_MessageTypeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Message_Update_ReceiveResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Message_Update_ReceiveResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Message_Update_ReceiveResult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Message_Update_ReceiveResult(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Message_Update_ReceiveStatusID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Message_Update_ReceiveStatusID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Message_Update_ReceiveStatusID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Message_Update_ReceiveStatusID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Message_Update_ReceivedAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Message_Update_ReceivedAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Message_Update_ReceivedAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Message_Update_ReceivedAt(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Message_Update_SendResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Message_Update_SendResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Message_Update_SendResult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Message_Update_SendResult(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Message_Update_SendStatusID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Message_Update_SendStatusID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Message_Update_SendStatusID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Message_Update_SendStatusID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Message_Update_SentAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Message_Update_SentAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Message_Update_SentAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Message_Update_SentAt(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Message_Update_Topic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Message_Update_Topic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Message_Update_Topic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Message_Update_Topic(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Message_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Message_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Message_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Message_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Message_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Message_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Message_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Message_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Message_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Message_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Message_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Message_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_NotificationType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).NotificationType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/NotificationType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).NotificationType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_NotificationType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).NotificationType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/NotificationType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).NotificationType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_NotificationType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).NotificationType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/NotificationType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).NotificationType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_NotificationType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).NotificationType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/NotificationType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).NotificationType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_NotificationType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).NotificationType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/NotificationType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).NotificationType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_NotificationType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).NotificationType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/NotificationType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).NotificationType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_NotificationType_Update_BeforeTimeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).NotificationType_Update_BeforeTimeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/NotificationType_Update_BeforeTimeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).NotificationType_Update_BeforeTimeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_NotificationType_Update_Code_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).NotificationType_Update_Code(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/NotificationType_Update_Code",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).NotificationType_Update_Code(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_NotificationType_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).NotificationType_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/NotificationType_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).NotificationType_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_NotificationType_Update_InTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).NotificationType_Update_InTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/NotificationType_Update_InTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).NotificationType_Update_InTime(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_NotificationType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).NotificationType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/NotificationType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).NotificationType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_NotificationType_Update_Value_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).NotificationType_Update_Value(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/NotificationType_Update_Value",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).NotificationType_Update_Value(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_NotificationType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).NotificationType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/NotificationType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).NotificationType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_NotificationType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).NotificationType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/NotificationType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).NotificationType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_NotificationType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).NotificationType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/NotificationType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).NotificationType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_FindByInnKpp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestInnKpp)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_FindByInnKpp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_FindByInnKpp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_FindByInnKpp(ctx, req.(*RequestInnKpp))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_FindBy_InnKppLegaltype_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_String_String_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_FindBy_InnKppLegaltype(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_FindBy_InnKppLegaltype",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_FindBy_InnKppLegaltype(ctx, req.(*Request_String_String_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_FindByExtId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_FindByExtId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_FindByExtId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_FindByExtId(ctx, req.(*RequestExtID))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_FindByExtID(ctx, req.(*RequestExtID))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_BankruptAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update_BankruptAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update_BankruptAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update_BankruptAt(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_BookkeeperName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update_BookkeeperName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update_BookkeeperName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update_BookkeeperName(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_CategoryID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update_CategoryID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update_CategoryID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update_CategoryID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_ConnectionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update_ConnectionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update_ConnectionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update_ConnectionID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_Email_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update_Email(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update_Email",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update_Email(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_FullName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update_FullName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update_FullName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update_FullName(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_INN_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update_INN(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update_INN",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update_INN(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_IsActive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update_IsActive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update_IsActive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update_IsActive(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_IsBankrupt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update_IsBankrupt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update_IsBankrupt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update_IsBankrupt(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_IsLiquidated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update_IsLiquidated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update_IsLiquidated",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update_IsLiquidated(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_KPP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update_KPP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update_KPP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update_KPP(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_LegalAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update_LegalAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update_LegalAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update_LegalAddress(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_LegalEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update_LegalEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update_LegalEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update_LegalEmail(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_LegalTypeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update_LegalTypeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update_LegalTypeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update_LegalTypeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_LiquidateAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update_LiquidateAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update_LiquidateAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update_LiquidateAt(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_ManagerName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update_ManagerName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update_ManagerName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update_ManagerName(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_NSIFlat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update_NSIFlat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update_NSIFlat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update_NSIFlat(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_NSIFlatID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update_NSIFlatID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update_NSIFlatID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update_NSIFlatID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_NSIID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update_NSIID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update_NSIID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update_NSIID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_OGRN_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update_OGRN(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update_OGRN",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update_OGRN(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_OKATO_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update_OKATO(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update_OKATO",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update_OKATO(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_OKPO_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update_OKPO(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update_OKPO",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update_OKPO(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_Phone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update_Phone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update_Phone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update_Phone(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_PostAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update_PostAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update_PostAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update_PostAddress(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_PostAddressID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update_PostAddressID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update_PostAddressID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update_PostAddressID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_RegistrationAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update_RegistrationAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update_RegistrationAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update_RegistrationAt(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_StateCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update_StateCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update_StateCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update_StateCode(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_StateID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update_StateID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update_StateID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update_StateID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_WWW_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update_WWW(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update_WWW",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update_WWW(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_Update_LegalAddressStack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_Update_LegalAddressStack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_Update_LegalAddressStack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_Update_LegalAddressStack(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_Organization_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).Organization_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/Organization_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).Organization_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationsFile_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationsFile_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationsFile_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationsFile_Read(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationsFile_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationsFile_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationsFile_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationsFile_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationsFile_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationsFile_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationsFile_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationsFile_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationsFile_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationsFile_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationsFile_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationsFile_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationsFile_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationsFile_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationsFile_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationsFile_Delete(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationsFile_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationsFile_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationsFile_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationsFile_Restore(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationsFile_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationsFile_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationsFile_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationsFile_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationsFile_Update_FileID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationsFile_Update_FileID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationsFile_Update_FileID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationsFile_Update_FileID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationsFile_Update_OrganizationID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationsFile_Update_OrganizationID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationsFile_Update_OrganizationID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationsFile_Update_OrganizationID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationsFile_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationsFile_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationsFile_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationsFile_ReadFromCache(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationsFile_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationsFile_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationsFile_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationsFile_ReadObject(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationCasebook_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationCasebook_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationCasebook_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationCasebook_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationCasebook_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationCasebook_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationCasebook_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationCasebook_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationCasebook_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationCasebook_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationCasebook_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationCasebook_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationCasebook_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationCasebook_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationCasebook_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationCasebook_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationCasebook_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationCasebook_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationCasebook_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationCasebook_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationCasebook_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationCasebook_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationCasebook_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationCasebook_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationCasebook_FindByInnKpp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestInnKpp)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationCasebook_FindByInnKpp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationCasebook_FindByInnKpp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationCasebook_FindByInnKpp(ctx, req.(*RequestInnKpp))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationCasebook_FindByInn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationCasebook_FindByInn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationCasebook_FindByInn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationCasebook_FindByInn(ctx, req.(*RequestString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationCasebook_FindByOrganizationId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationCasebook_FindByOrganizationId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationCasebook_FindByOrganizationId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationCasebook_FindByOrganizationId(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationCasebook_Update_INN_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationCasebook_Update_INN(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationCasebook_Update_INN",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationCasebook_Update_INN(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationCasebook_Update_JSONFileID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationCasebook_Update_JSONFileID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationCasebook_Update_JSONFileID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationCasebook_Update_JSONFileID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationCasebook_Update_JSONUpdatedAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationCasebook_Update_JSONUpdatedAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationCasebook_Update_JSONUpdatedAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationCasebook_Update_JSONUpdatedAt(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationCasebook_Update_OrganizationID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationCasebook_Update_OrganizationID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationCasebook_Update_OrganizationID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationCasebook_Update_OrganizationID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationCasebook_Update_PDFFileID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationCasebook_Update_PDFFileID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationCasebook_Update_PDFFileID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationCasebook_Update_PDFFileID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationCasebook_Update_PDFUpdatedAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationCasebook_Update_PDFUpdatedAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationCasebook_Update_PDFUpdatedAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationCasebook_Update_PDFUpdatedAt(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationCasebook_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationCasebook_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationCasebook_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationCasebook_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationCasebook_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationCasebook_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationCasebook_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationCasebook_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationCasebook_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationCasebook_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationCasebook_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationCasebook_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationCategoryType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationCategoryType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationCategoryType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationCategoryType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationCategoryType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationCategoryType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationCategoryType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationCategoryType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationCategoryType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationCategoryType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationCategoryType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationCategoryType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationCategoryType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationCategoryType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationCategoryType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationCategoryType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationCategoryType_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationCategoryType_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationCategoryType_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationCategoryType_FindByExtID(ctx, req.(*RequestExtID))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationCategoryType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationCategoryType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationCategoryType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationCategoryType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationCategoryType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationCategoryType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationCategoryType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationCategoryType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationCategoryType_Update_ConnectionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationCategoryType_Update_ConnectionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationCategoryType_Update_ConnectionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationCategoryType_Update_ConnectionID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationCategoryType_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationCategoryType_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationCategoryType_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationCategoryType_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationCategoryType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationCategoryType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationCategoryType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationCategoryType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationCategoryType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationCategoryType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationCategoryType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationCategoryType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationCategoryType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationCategoryType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationCategoryType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationCategoryType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationCategoryType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationCategoryType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationCategoryType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationCategoryType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationStateType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationStateType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationStateType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationStateType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationStateType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationStateType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationStateType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationStateType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationStateType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationStateType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationStateType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationStateType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationStateType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationStateType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationStateType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationStateType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationStateType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationStateType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationStateType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationStateType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationStateType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationStateType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationStateType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationStateType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationStateType_Update_ActionIndividual_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationStateType_Update_ActionIndividual(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationStateType_Update_ActionIndividual",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationStateType_Update_ActionIndividual(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationStateType_Update_ActionOrganization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationStateType_Update_ActionOrganization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationStateType_Update_ActionOrganization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationStateType_Update_ActionOrganization(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationStateType_Update_Code_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationStateType_Update_Code(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationStateType_Update_Code",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationStateType_Update_Code(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationStateType_Update_Color_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationStateType_Update_Color(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationStateType_Update_Color",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationStateType_Update_Color(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationStateType_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationStateType_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationStateType_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationStateType_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationStateType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationStateType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationStateType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationStateType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationStateType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationStateType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationStateType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationStateType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationStateType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationStateType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationStateType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationStateType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationStateType_Update_IsBankrupt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationStateType_Update_IsBankrupt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationStateType_Update_IsBankrupt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationStateType_Update_IsBankrupt(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationStateType_Update_IsLiquidated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Bool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationStateType_Update_IsLiquidated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationStateType_Update_IsLiquidated",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationStateType_Update_IsLiquidated(ctx, req.(*Request_Int64_Bool))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_OrganizationStateType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).OrganizationStateType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/OrganizationStateType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).OrganizationStateType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PaymentDay_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PaymentDay_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PaymentDay_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PaymentDay_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PaymentDay_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PaymentDay_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PaymentDay_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PaymentDay_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PaymentDay_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PaymentDay_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PaymentDay_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PaymentDay_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PaymentDay_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PaymentDay_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PaymentDay_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PaymentDay_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PaymentDay_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PaymentDay_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PaymentDay_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PaymentDay_FindByExtID(ctx, req.(*RequestExtID))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PaymentDay_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PaymentDay_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PaymentDay_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PaymentDay_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PaymentDay_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PaymentDay_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PaymentDay_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PaymentDay_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PaymentDay_Update_ConnectionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PaymentDay_Update_ConnectionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PaymentDay_Update_ConnectionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PaymentDay_Update_ConnectionID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PaymentDay_Update_ContractID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PaymentDay_Update_ContractID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PaymentDay_Update_ContractID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PaymentDay_Update_ContractID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PaymentDay_Update_DateFrom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PaymentDay_Update_DateFrom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PaymentDay_Update_DateFrom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PaymentDay_Update_DateFrom(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PaymentDay_Update_DateTo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PaymentDay_Update_DateTo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PaymentDay_Update_DateTo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PaymentDay_Update_DateTo(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PaymentDay_Update_Day_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PaymentDay_Update_Day(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PaymentDay_Update_Day",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PaymentDay_Update_Day(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PaymentDay_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PaymentDay_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PaymentDay_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PaymentDay_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PaymentDay_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PaymentDay_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PaymentDay_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PaymentDay_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PaymentDay_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PaymentDay_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PaymentDay_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PaymentDay_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PaymentSchedule_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PaymentSchedule_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PaymentSchedule_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PaymentSchedule_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PaymentSchedule_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PaymentSchedule_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PaymentSchedule_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PaymentSchedule_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PaymentSchedule_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PaymentSchedule_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PaymentSchedule_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PaymentSchedule_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PaymentSchedule_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PaymentSchedule_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PaymentSchedule_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PaymentSchedule_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PaymentSchedule_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PaymentSchedule_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PaymentSchedule_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PaymentSchedule_FindByExtID(ctx, req.(*RequestExtID))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PaymentSchedule_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PaymentSchedule_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PaymentSchedule_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PaymentSchedule_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PaymentSchedule_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PaymentSchedule_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PaymentSchedule_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PaymentSchedule_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PaymentSchedule_Update_ConnectionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PaymentSchedule_Update_ConnectionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PaymentSchedule_Update_ConnectionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PaymentSchedule_Update_ConnectionID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PaymentSchedule_Update_ContractID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PaymentSchedule_Update_ContractID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PaymentSchedule_Update_ContractID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PaymentSchedule_Update_ContractID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PaymentSchedule_Update_DateFrom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PaymentSchedule_Update_DateFrom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PaymentSchedule_Update_DateFrom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PaymentSchedule_Update_DateFrom(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PaymentSchedule_Update_DateTo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PaymentSchedule_Update_DateTo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PaymentSchedule_Update_DateTo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PaymentSchedule_Update_DateTo(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PaymentSchedule_Update_Day_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PaymentSchedule_Update_Day(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PaymentSchedule_Update_Day",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PaymentSchedule_Update_Day(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PaymentSchedule_Update_Percent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PaymentSchedule_Update_Percent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PaymentSchedule_Update_Percent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PaymentSchedule_Update_Percent(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PaymentSchedule_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PaymentSchedule_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PaymentSchedule_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PaymentSchedule_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PaymentSchedule_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PaymentSchedule_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PaymentSchedule_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PaymentSchedule_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PaymentSchedule_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PaymentSchedule_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PaymentSchedule_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PaymentSchedule_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItem_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItem_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItem_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItem_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItem_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItem_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItem_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItem_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItem_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItem_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_FindByExtID(ctx, req.(*RequestExtID))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItem_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItem_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItem_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItem_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItem_Update_BillingMonth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_BillingMonth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_BillingMonth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_BillingMonth(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItem_Update_ConnectionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_ConnectionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_ConnectionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_ConnectionID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItem_Update_ContractID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_ContractID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_ContractID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_ContractID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItem_Update_DateFrom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_DateFrom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_DateFrom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_DateFrom(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItem_Update_DateTo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_DateTo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_DateTo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_DateTo(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItem_Update_DaysCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_DaysCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_DaysCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_DaysCount(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItem_Update_DebtSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_DebtSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_DebtSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_DebtSum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItem_Update_DebtorCategoryID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_DebtorCategoryID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_DebtorCategoryID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_DebtorCategoryID(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItem_Update_Dividend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_Dividend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_Dividend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_Dividend(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItem_Update_Divider_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_Divider(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_Divider",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_Divider(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItem_Update_DocumentInvoiceID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_DocumentInvoiceID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_DocumentInvoiceID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_DocumentInvoiceID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItem_Update_Flags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_Flags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_Flags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_Flags(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItem_Update_PaymentDueAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_PaymentDueAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_PaymentDueAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_PaymentDueAt(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItem_Update_PenaltyCalculationItemsTypeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_PenaltyCalculationItemsTypeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_PenaltyCalculationItemsTypeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_PenaltyCalculationItemsTypeID(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItem_Update_Percent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_Percent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_Percent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_Percent(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItem_Update_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_Sum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItem_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItem_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItem_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItem_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItem_Update_DebtCollectionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_DebtCollectionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItem_Update_DebtCollectionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_Update_DebtCollectionID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItem_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItem_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItem_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItemsType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItemsType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItemsType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItemsType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItemsType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItemsType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItemsType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItemsType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItemsType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItemsType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItemsType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItemsType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItemsType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItemsType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItemsType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItemsType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItemsType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItemsType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItemsType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItemsType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItemsType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItemsType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItemsType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItemsType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItemsType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItemsType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItemsType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItemsType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItemsType_Update_Code_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItemsType_Update_Code(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItemsType_Update_Code",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItemsType_Update_Code(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItemsType_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItemsType_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItemsType_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItemsType_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItemsType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItemsType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItemsType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItemsType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItemsType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItemsType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItemsType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItemsType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PenaltyCalculationItemsType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PenaltyCalculationItemsType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PenaltyCalculationItemsType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PenaltyCalculationItemsType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PriorityType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PriorityType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PriorityType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PriorityType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PriorityType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PriorityType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PriorityType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PriorityType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PriorityType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PriorityType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PriorityType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PriorityType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PriorityType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PriorityType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PriorityType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PriorityType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PriorityType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PriorityType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PriorityType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PriorityType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PriorityType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PriorityType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PriorityType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PriorityType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PriorityType_Update_Code_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PriorityType_Update_Code(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PriorityType_Update_Code",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PriorityType_Update_Code(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PriorityType_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PriorityType_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PriorityType_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PriorityType_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PriorityType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PriorityType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PriorityType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PriorityType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PriorityType_Update_Value_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PriorityType_Update_Value(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PriorityType_Update_Value",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PriorityType_Update_Value(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PriorityType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PriorityType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PriorityType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PriorityType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PriorityType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PriorityType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PriorityType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PriorityType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_PriorityType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).PriorityType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/PriorityType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).PriorityType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_RepeatType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).RepeatType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/RepeatType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).RepeatType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_RepeatType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).RepeatType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/RepeatType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).RepeatType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_RepeatType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).RepeatType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/RepeatType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).RepeatType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_RepeatType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).RepeatType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/RepeatType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).RepeatType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_RepeatType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).RepeatType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/RepeatType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).RepeatType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_RepeatType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).RepeatType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/RepeatType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).RepeatType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_RepeatType_Update_Code_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).RepeatType_Update_Code(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/RepeatType_Update_Code",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).RepeatType_Update_Code(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_RepeatType_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).RepeatType_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/RepeatType_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).RepeatType_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_RepeatType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).RepeatType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/RepeatType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).RepeatType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_RepeatType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).RepeatType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/RepeatType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).RepeatType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_RepeatType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).RepeatType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/RepeatType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).RepeatType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_RepeatType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).RepeatType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/RepeatType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).RepeatType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ServiceProvider_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ServiceProvider_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ServiceProvider_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ServiceProvider_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ServiceProvider_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ServiceProvider_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ServiceProvider_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ServiceProvider_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ServiceProvider_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ServiceProvider_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ServiceProvider_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ServiceProvider_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ServiceProvider_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ServiceProvider_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ServiceProvider_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ServiceProvider_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ServiceProvider_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ServiceProvider_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ServiceProvider_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ServiceProvider_FindByExtID(ctx, req.(*RequestExtID))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ServiceProvider_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ServiceProvider_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ServiceProvider_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ServiceProvider_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ServiceProvider_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ServiceProvider_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ServiceProvider_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ServiceProvider_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ServiceProvider_Update_ConnectionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ServiceProvider_Update_ConnectionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ServiceProvider_Update_ConnectionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ServiceProvider_Update_ConnectionID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ServiceProvider_Update_DateFrom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ServiceProvider_Update_DateFrom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ServiceProvider_Update_DateFrom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ServiceProvider_Update_DateFrom(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ServiceProvider_Update_DateTo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ServiceProvider_Update_DateTo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ServiceProvider_Update_DateTo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ServiceProvider_Update_DateTo(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ServiceProvider_Update_OrganizationID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ServiceProvider_Update_OrganizationID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ServiceProvider_Update_OrganizationID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ServiceProvider_Update_OrganizationID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ServiceProvider_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ServiceProvider_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ServiceProvider_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ServiceProvider_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ServiceProvider_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ServiceProvider_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ServiceProvider_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ServiceProvider_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ServiceProvider_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ServiceProvider_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ServiceProvider_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ServiceProvider_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ServiceType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ServiceType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ServiceType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ServiceType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ServiceType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ServiceType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ServiceType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ServiceType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ServiceType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ServiceType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ServiceType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ServiceType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ServiceType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ServiceType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ServiceType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ServiceType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ServiceType_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ServiceType_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ServiceType_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ServiceType_FindByExtID(ctx, req.(*RequestExtID))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ServiceType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ServiceType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ServiceType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ServiceType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ServiceType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ServiceType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ServiceType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ServiceType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ServiceType_Update_Code_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ServiceType_Update_Code(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ServiceType_Update_Code",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ServiceType_Update_Code(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ServiceType_Update_ConnectionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ServiceType_Update_ConnectionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ServiceType_Update_ConnectionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ServiceType_Update_ConnectionID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ServiceType_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ServiceType_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ServiceType_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ServiceType_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ServiceType_Update_FullName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ServiceType_Update_FullName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ServiceType_Update_FullName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ServiceType_Update_FullName(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ServiceType_Update_Measure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ServiceType_Update_Measure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ServiceType_Update_Measure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ServiceType_Update_Measure(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ServiceType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ServiceType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ServiceType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ServiceType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ServiceType_Update_ServiceProviderID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ServiceType_Update_ServiceProviderID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ServiceType_Update_ServiceProviderID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ServiceType_Update_ServiceProviderID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ServiceType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ServiceType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ServiceType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ServiceType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ServiceType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ServiceType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ServiceType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ServiceType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_ServiceType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).ServiceType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/ServiceType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).ServiceType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDuty_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDuty_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDuty_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDuty_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDuty_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDuty_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDuty_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDuty_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDuty_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDuty_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDuty_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDuty_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDuty_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDuty_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDuty_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDuty_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDuty_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDuty_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDuty_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDuty_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDuty_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDuty_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDuty_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDuty_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDuty_Update_CourtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDuty_Update_CourtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDuty_Update_CourtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDuty_Update_CourtID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDuty_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDuty_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDuty_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDuty_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDuty_Update_LawsuitID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDuty_Update_LawsuitID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDuty_Update_LawsuitID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDuty_Update_LawsuitID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDuty_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDuty_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDuty_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDuty_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDuty_Update_RequestDate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDuty_Update_RequestDate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDuty_Update_RequestDate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDuty_Update_RequestDate(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDuty_Update_RequestNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDuty_Update_RequestNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDuty_Update_RequestNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDuty_Update_RequestNumber(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDuty_Update_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDuty_Update_Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDuty_Update_Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDuty_Update_Sum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDuty_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDuty_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDuty_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDuty_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDuty_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDuty_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDuty_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDuty_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDuty_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDuty_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDuty_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDuty_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyConsumption_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyConsumption_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyConsumption_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyConsumption_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyConsumption_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyConsumption_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyConsumption_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyConsumption_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyConsumption_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyConsumption_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyConsumption_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyConsumption_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyConsumption_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyConsumption_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyConsumption_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyConsumption_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyConsumption_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyConsumption_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyConsumption_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyConsumption_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyConsumption_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyConsumption_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyConsumption_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyConsumption_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyConsumption_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyConsumption_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyConsumption_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyConsumption_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyConsumption_Update_CourtSuitID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyConsumption_Update_CourtSuitID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyConsumption_Update_CourtSuitID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyConsumption_Update_CourtSuitID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyConsumption_Update_StateDutyPaymentsPaymentID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyConsumption_Update_StateDutyPaymentsPaymentID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyConsumption_Update_StateDutyPaymentsPaymentID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyConsumption_Update_StateDutyPaymentsPaymentID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyConsumption_Update_StateDutyPaymentsReturnID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyConsumption_Update_StateDutyPaymentsReturnID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyConsumption_Update_StateDutyPaymentsReturnID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyConsumption_Update_StateDutyPaymentsReturnID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyConsumption_Update_StateDutyRegistryID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyConsumption_Update_StateDutyRegistryID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyConsumption_Update_StateDutyRegistryID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyConsumption_Update_StateDutyRegistryID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyConsumption_Update_StateDutySum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyConsumption_Update_StateDutySum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyConsumption_Update_StateDutySum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyConsumption_Update_StateDutySum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyConsumption_Update_StatusID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyConsumption_Update_StatusID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyConsumption_Update_StatusID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyConsumption_Update_StatusID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyConsumption_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyConsumption_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyConsumption_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyConsumption_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyConsumption_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyConsumption_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyConsumption_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyConsumption_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyConsumptionsFile_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyConsumptionsFile_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyConsumptionsFile_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyConsumptionsFile_Read(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyConsumptionsFile_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyConsumptionsFile_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyConsumptionsFile_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyConsumptionsFile_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyConsumptionsFile_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyConsumptionsFile_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyConsumptionsFile_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyConsumptionsFile_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyConsumptionsFile_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyConsumptionsFile_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyConsumptionsFile_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyConsumptionsFile_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyConsumptionsFile_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyConsumptionsFile_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyConsumptionsFile_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyConsumptionsFile_Delete(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyConsumptionsFile_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyConsumptionsFile_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyConsumptionsFile_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyConsumptionsFile_Restore(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyConsumptionsFile_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyConsumptionsFile_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyConsumptionsFile_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyConsumptionsFile_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyConsumptionsFile_Update_ConsumptionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyConsumptionsFile_Update_ConsumptionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyConsumptionsFile_Update_ConsumptionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyConsumptionsFile_Update_ConsumptionID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyConsumptionsFile_Update_FileID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyConsumptionsFile_Update_FileID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyConsumptionsFile_Update_FileID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyConsumptionsFile_Update_FileID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyConsumptionsFile_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyConsumptionsFile_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyConsumptionsFile_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyConsumptionsFile_ReadFromCache(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyConsumptionsFile_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyConsumptionsFile_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyConsumptionsFile_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyConsumptionsFile_ReadObject(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyPaymentType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyPaymentType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyPaymentType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyPaymentType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyPaymentType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyPaymentType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyPaymentType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyPaymentType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyPaymentType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyPaymentType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyPaymentType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyPaymentType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyPaymentType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyPaymentType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyPaymentType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyPaymentType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyPaymentType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyPaymentType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyPaymentType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyPaymentType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyPaymentType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyPaymentType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyPaymentType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyPaymentType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyPaymentType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyPaymentType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyPaymentType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyPaymentType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyPaymentType_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyPaymentType_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyPaymentType_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyPaymentType_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyPaymentType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyPaymentType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyPaymentType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyPaymentType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyPaymentType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyPaymentType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyPaymentType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyPaymentType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyPaymentType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyPaymentType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyPaymentType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyPaymentType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyPayment_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyPayment_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyPayment_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyPayment_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyPayment_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyPayment_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyPayment_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyPayment_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyPayment_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyPayment_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyPayment_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyPayment_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyPayment_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyPayment_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyPayment_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyPayment_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyPayment_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyPayment_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyPayment_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyPayment_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyPayment_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyPayment_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyPayment_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyPayment_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyPayment_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyPayment_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyPayment_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyPayment_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyPayment_Update_BranchID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyPayment_Update_BranchID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyPayment_Update_BranchID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyPayment_Update_BranchID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyPayment_Update_CourtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyPayment_Update_CourtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyPayment_Update_CourtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyPayment_Update_CourtID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyPayment_Update_DocumentSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Float64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyPayment_Update_DocumentSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyPayment_Update_DocumentSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyPayment_Update_DocumentSum(ctx, req.(*Request_Int64_Float64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyPayment_Update_FileID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyPayment_Update_FileID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyPayment_Update_FileID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyPayment_Update_FileID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyPayment_Update_Number_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyPayment_Update_Number(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyPayment_Update_Number",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyPayment_Update_Number(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyPayment_Update_PaymentDate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyPayment_Update_PaymentDate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyPayment_Update_PaymentDate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyPayment_Update_PaymentDate(ctx, req.(*Request_Int64_Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyPayment_Update_StateDutyPaymentTypeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyPayment_Update_StateDutyPaymentTypeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyPayment_Update_StateDutyPaymentTypeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyPayment_Update_StateDutyPaymentTypeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyPayment_Update_TaxOfficeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyPayment_Update_TaxOfficeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyPayment_Update_TaxOfficeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyPayment_Update_TaxOfficeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyPayment_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyPayment_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyPayment_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyPayment_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyPayment_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyPayment_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyPayment_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyPayment_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyRegistry_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyRegistry_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyRegistry_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyRegistry_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyRegistry_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyRegistry_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyRegistry_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyRegistry_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyRegistry_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyRegistry_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyRegistry_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyRegistry_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyRegistry_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyRegistry_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyRegistry_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyRegistry_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyRegistry_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyRegistry_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyRegistry_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyRegistry_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyRegistry_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyRegistry_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyRegistry_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyRegistry_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyRegistry_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyRegistry_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyRegistry_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyRegistry_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyRegistry_Update_BranchID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyRegistry_Update_BranchID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyRegistry_Update_BranchID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyRegistry_Update_BranchID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyRegistry_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyRegistry_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyRegistry_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyRegistry_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyRegistry_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyRegistry_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyRegistry_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyRegistry_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyStatus_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyStatus_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyStatus_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyStatus_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyStatus_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyStatus_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyStatus_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyStatus_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyStatus_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyStatus_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyStatus_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyStatus_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyStatus_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyStatus_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyStatus_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyStatus_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyStatus_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyStatus_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyStatus_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyStatus_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyStatus_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyStatus_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyStatus_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyStatus_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyStatus_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyStatus_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyStatus_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyStatus_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyStatus_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyStatus_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyStatus_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyStatus_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyStatus_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyStatus_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyStatus_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyStatus_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyStatus_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyStatus_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyStatus_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyStatus_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_StateDutyStatus_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).StateDutyStatus_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/StateDutyStatus_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).StateDutyStatus_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_TableName_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).TableName_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/TableName_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).TableName_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_TableName_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).TableName_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/TableName_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).TableName_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_TableName_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).TableName_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/TableName_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).TableName_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_TableName_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).TableName_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/TableName_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).TableName_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_TableName_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).TableName_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/TableName_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).TableName_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_TableName_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).TableName_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/TableName_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).TableName_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_TableName_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).TableName_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/TableName_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).TableName_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_TableName_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).TableName_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/TableName_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).TableName_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_TableName_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).TableName_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/TableName_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).TableName_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_TableName_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).TableName_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/TableName_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).TableName_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_TableName_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).TableName_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/TableName_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).TableName_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_TaxOffice_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).TaxOffice_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/TaxOffice_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).TaxOffice_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_TaxOffice_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).TaxOffice_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/TaxOffice_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).TaxOffice_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_TaxOffice_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).TaxOffice_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/TaxOffice_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).TaxOffice_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_TaxOffice_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).TaxOffice_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/TaxOffice_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).TaxOffice_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_TaxOffice_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).TaxOffice_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/TaxOffice_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).TaxOffice_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_TaxOffice_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).TaxOffice_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/TaxOffice_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).TaxOffice_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_TaxOffice_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).TaxOffice_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/TaxOffice_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).TaxOffice_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_TaxOffice_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).TaxOffice_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/TaxOffice_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).TaxOffice_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_TaxOffice_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).TaxOffice_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/TaxOffice_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).TaxOffice_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_TaxOffice_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).TaxOffice_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/TaxOffice_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).TaxOffice_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_TaxOffice_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).TaxOffice_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/TaxOffice_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).TaxOffice_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_UserRole_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).UserRole_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/UserRole_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).UserRole_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_UserRole_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).UserRole_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/UserRole_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).UserRole_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_UserRole_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).UserRole_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/UserRole_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).UserRole_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_UserRole_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).UserRole_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/UserRole_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).UserRole_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_UserRole_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).UserRole_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/UserRole_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).UserRole_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_UserRole_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).UserRole_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/UserRole_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).UserRole_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_UserRole_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).UserRole_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/UserRole_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).UserRole_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_UserRole_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).UserRole_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/UserRole_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).UserRole_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_UserRole_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).UserRole_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/UserRole_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).UserRole_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_UserRole_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).UserRole_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/UserRole_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).UserRole_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_UserRole_ReadAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).UserRole_ReadAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/UserRole_ReadAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).UserRole_ReadAll(ctx, req.(*Request_Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_UserRole_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).UserRole_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/UserRole_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).UserRole_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_UserRolesMembership_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).UserRolesMembership_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/UserRolesMembership_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).UserRolesMembership_Read(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_UserRolesMembership_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).UserRolesMembership_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/UserRolesMembership_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).UserRolesMembership_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_UserRolesMembership_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).UserRolesMembership_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/UserRolesMembership_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).UserRolesMembership_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_UserRolesMembership_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).UserRolesMembership_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/UserRolesMembership_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).UserRolesMembership_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_UserRolesMembership_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).UserRolesMembership_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/UserRolesMembership_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).UserRolesMembership_Delete(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_UserRolesMembership_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).UserRolesMembership_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/UserRolesMembership_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).UserRolesMembership_Restore(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_UserRolesMembership_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).UserRolesMembership_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/UserRolesMembership_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).UserRolesMembership_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_UserRolesMembership_Update_EmployeeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).UserRolesMembership_Update_EmployeeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/UserRolesMembership_Update_EmployeeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).UserRolesMembership_Update_EmployeeID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_UserRolesMembership_Update_UserRoleID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).UserRolesMembership_Update_UserRoleID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/UserRolesMembership_Update_UserRoleID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).UserRolesMembership_Update_UserRoleID(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_UserRolesMembership_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).UserRolesMembership_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/UserRolesMembership_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).UserRolesMembership_ReadFromCache(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_UserRolesMembership_FindMassBy_EmployeeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).UserRolesMembership_FindMassBy_EmployeeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/UserRolesMembership_FindMassBy_EmployeeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).UserRolesMembership_FindMassBy_EmployeeID(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_UserRolesMembership_FindMassBy_UserRoleID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).UserRolesMembership_FindMassBy_UserRoleID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/UserRolesMembership_FindMassBy_UserRoleID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).UserRolesMembership_FindMassBy_UserRoleID(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_UserRolesMembership_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).UserRolesMembership_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/UserRolesMembership_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).UserRolesMembership_ReadObject(ctx, req.(*Request_Int64_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_WhiteListReasonType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).WhiteListReasonType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/WhiteListReasonType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).WhiteListReasonType_Read(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_WhiteListReasonType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).WhiteListReasonType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/WhiteListReasonType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).WhiteListReasonType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_WhiteListReasonType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).WhiteListReasonType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/WhiteListReasonType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).WhiteListReasonType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_WhiteListReasonType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).WhiteListReasonType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/WhiteListReasonType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).WhiteListReasonType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_WhiteListReasonType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).WhiteListReasonType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/WhiteListReasonType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).WhiteListReasonType_Delete(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_WhiteListReasonType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).WhiteListReasonType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/WhiteListReasonType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).WhiteListReasonType_Restore(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_WhiteListReasonType_Update_Code_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).WhiteListReasonType_Update_Code(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/WhiteListReasonType_Update_Code",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).WhiteListReasonType_Update_Code(ctx, req.(*Request_Int64_Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_WhiteListReasonType_Update_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).WhiteListReasonType_Update_Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/WhiteListReasonType_Update_Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).WhiteListReasonType_Update_Description(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_WhiteListReasonType_Update_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64_String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).WhiteListReasonType_Update_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/WhiteListReasonType_Update_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).WhiteListReasonType_Update_Name(ctx, req.(*Request_Int64_String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_WhiteListReasonType_ReadFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).WhiteListReasonType_ReadFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/WhiteListReasonType_ReadFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).WhiteListReasonType_ReadFromCache(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_WhiteListReasonType_UpdateManyFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Model_MassString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).WhiteListReasonType_UpdateManyFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/WhiteListReasonType_UpdateManyFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).WhiteListReasonType_UpdateManyFields(ctx, req.(*Request_Model_MassString))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostgresMigrate_WhiteListReasonType_ReadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request_Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostgresMigrateServer).WhiteListReasonType_ReadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Postgres_migrate/WhiteListReasonType_ReadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostgresMigrateServer).WhiteListReasonType_ReadObject(ctx, req.(*Request_Int64))
	}
	return interceptor(ctx, in, info, handler)
}

// PostgresMigrate_ServiceDesc is the grpc.ServiceDesc for PostgresMigrate service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PostgresMigrate_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.Postgres_migrate",
	HandlerType: (*PostgresMigrateServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PostgresMigratePgAttribute_Read",
			Handler:    _PostgresMigrate_PostgresMigratePgAttribute_Read_Handler,
		},
		{
			MethodName: "PostgresMigratePgAttribute_Create",
			Handler:    _PostgresMigrate_PostgresMigratePgAttribute_Create_Handler,
		},
		{
			MethodName: "PostgresMigratePgAttribute_Update",
			Handler:    _PostgresMigrate_PostgresMigratePgAttribute_Update_Handler,
		},
		{
			MethodName: "PostgresMigratePgAttribute_Save",
			Handler:    _PostgresMigrate_PostgresMigratePgAttribute_Save_Handler,
		},
		{
			MethodName: "PostgresMigratePgAttribute_UpdateManyFields",
			Handler:    _PostgresMigrate_PostgresMigratePgAttribute_UpdateManyFields_Handler,
		},
		{
			MethodName: "PostgresMigratePgAttribute_Update_Attalign",
			Handler:    _PostgresMigrate_PostgresMigratePgAttribute_Update_Attalign_Handler,
		},
		{
			MethodName: "PostgresMigratePgAttribute_Update_Attbyval",
			Handler:    _PostgresMigrate_PostgresMigratePgAttribute_Update_Attbyval_Handler,
		},
		{
			MethodName: "PostgresMigratePgAttribute_Update_Attcacheoff",
			Handler:    _PostgresMigrate_PostgresMigratePgAttribute_Update_Attcacheoff_Handler,
		},
		{
			MethodName: "PostgresMigratePgAttribute_Update_Attcollation",
			Handler:    _PostgresMigrate_PostgresMigratePgAttribute_Update_Attcollation_Handler,
		},
		{
			MethodName: "PostgresMigratePgAttribute_Update_Attgenerated",
			Handler:    _PostgresMigrate_PostgresMigratePgAttribute_Update_Attgenerated_Handler,
		},
		{
			MethodName: "PostgresMigratePgAttribute_Update_Atthasdef",
			Handler:    _PostgresMigrate_PostgresMigratePgAttribute_Update_Atthasdef_Handler,
		},
		{
			MethodName: "PostgresMigratePgAttribute_Update_Atthasmissing",
			Handler:    _PostgresMigrate_PostgresMigratePgAttribute_Update_Atthasmissing_Handler,
		},
		{
			MethodName: "PostgresMigratePgAttribute_Update_Attidentity",
			Handler:    _PostgresMigrate_PostgresMigratePgAttribute_Update_Attidentity_Handler,
		},
		{
			MethodName: "PostgresMigratePgAttribute_Update_Attinhcount",
			Handler:    _PostgresMigrate_PostgresMigratePgAttribute_Update_Attinhcount_Handler,
		},
		{
			MethodName: "PostgresMigratePgAttribute_Update_Attisdropped",
			Handler:    _PostgresMigrate_PostgresMigratePgAttribute_Update_Attisdropped_Handler,
		},
		{
			MethodName: "PostgresMigratePgAttribute_Update_Attislocal",
			Handler:    _PostgresMigrate_PostgresMigratePgAttribute_Update_Attislocal_Handler,
		},
		{
			MethodName: "PostgresMigratePgAttribute_Update_Attlen",
			Handler:    _PostgresMigrate_PostgresMigratePgAttribute_Update_Attlen_Handler,
		},
		{
			MethodName: "PostgresMigratePgAttribute_Update_Attname",
			Handler:    _PostgresMigrate_PostgresMigratePgAttribute_Update_Attname_Handler,
		},
		{
			MethodName: "PostgresMigratePgAttribute_Update_Attndims",
			Handler:    _PostgresMigrate_PostgresMigratePgAttribute_Update_Attndims_Handler,
		},
		{
			MethodName: "PostgresMigratePgAttribute_Update_Attnotnull",
			Handler:    _PostgresMigrate_PostgresMigratePgAttribute_Update_Attnotnull_Handler,
		},
		{
			MethodName: "PostgresMigratePgAttribute_Update_Attnum",
			Handler:    _PostgresMigrate_PostgresMigratePgAttribute_Update_Attnum_Handler,
		},
		{
			MethodName: "PostgresMigratePgAttribute_Update_Attrelid",
			Handler:    _PostgresMigrate_PostgresMigratePgAttribute_Update_Attrelid_Handler,
		},
		{
			MethodName: "PostgresMigratePgAttribute_Update_Attstattarget",
			Handler:    _PostgresMigrate_PostgresMigratePgAttribute_Update_Attstattarget_Handler,
		},
		{
			MethodName: "PostgresMigratePgAttribute_Update_Attstorage",
			Handler:    _PostgresMigrate_PostgresMigratePgAttribute_Update_Attstorage_Handler,
		},
		{
			MethodName: "PostgresMigratePgAttribute_Update_Atttypid",
			Handler:    _PostgresMigrate_PostgresMigratePgAttribute_Update_Atttypid_Handler,
		},
		{
			MethodName: "PostgresMigratePgAttribute_Update_Atttypmod",
			Handler:    _PostgresMigrate_PostgresMigratePgAttribute_Update_Atttypmod_Handler,
		},
		{
			MethodName: "PostgresMigratePgAttribute_Update_VersionID",
			Handler:    _PostgresMigrate_PostgresMigratePgAttribute_Update_VersionID_Handler,
		},
		{
			MethodName: "PostgresMigratePgAttribute_ReadFromCache",
			Handler:    _PostgresMigrate_PostgresMigratePgAttribute_ReadFromCache_Handler,
		},
		{
			MethodName: "PostgresMigratePgAttribute_ReadObject",
			Handler:    _PostgresMigrate_PostgresMigratePgAttribute_ReadObject_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Read",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Read_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Create",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Create_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Update",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Update_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Save",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Save_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_UpdateManyFields",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_UpdateManyFields_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Update_Oid",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Update_Oid_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Update_Relallvisible",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Update_Relallvisible_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Update_Relam",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Update_Relam_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Update_Relchecks",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Update_Relchecks_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Update_Relfilenode",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Update_Relfilenode_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Update_Relforcerowsecurity",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Update_Relforcerowsecurity_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Update_Relfrozenxid",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Update_Relfrozenxid_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Update_Relhasindex",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Update_Relhasindex_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Update_Relhasrules",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Update_Relhasrules_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Update_Relhassubclass",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Update_Relhassubclass_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Update_Relhastriggers",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Update_Relhastriggers_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Update_Relispartition",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Update_Relispartition_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Update_Relispopulated",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Update_Relispopulated_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Update_Relisshared",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Update_Relisshared_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Update_Relkind",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Update_Relkind_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Update_Relminmxid",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Update_Relminmxid_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Update_Relname",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Update_Relname_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Update_Relnamespace",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Update_Relnamespace_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Update_Relnatts",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Update_Relnatts_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Update_Reloftype",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Update_Reloftype_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Update_Relowner",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Update_Relowner_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Update_Relpages",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Update_Relpages_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Update_Relpersistence",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Update_Relpersistence_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Update_Relreplident",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Update_Relreplident_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Update_Relrewrite",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Update_Relrewrite_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Update_Relrowsecurity",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Update_Relrowsecurity_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Update_Reltablespace",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Update_Reltablespace_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Update_Reltoastrelid",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Update_Reltoastrelid_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Update_Reltuples",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Update_Reltuples_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Update_Reltype",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Update_Reltype_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_Update_VersionID",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_Update_VersionID_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_ReadFromCache",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_ReadFromCache_Handler,
		},
		{
			MethodName: "PostgresMigratePgClass_ReadObject",
			Handler:    _PostgresMigrate_PostgresMigratePgClass_ReadObject_Handler,
		},
		{
			MethodName: "PostgresMigratePgConstraint_Read",
			Handler:    _PostgresMigrate_PostgresMigratePgConstraint_Read_Handler,
		},
		{
			MethodName: "PostgresMigratePgConstraint_Create",
			Handler:    _PostgresMigrate_PostgresMigratePgConstraint_Create_Handler,
		},
		{
			MethodName: "PostgresMigratePgConstraint_Update",
			Handler:    _PostgresMigrate_PostgresMigratePgConstraint_Update_Handler,
		},
		{
			MethodName: "PostgresMigratePgConstraint_Save",
			Handler:    _PostgresMigrate_PostgresMigratePgConstraint_Save_Handler,
		},
		{
			MethodName: "PostgresMigratePgConstraint_UpdateManyFields",
			Handler:    _PostgresMigrate_PostgresMigratePgConstraint_UpdateManyFields_Handler,
		},
		{
			MethodName: "PostgresMigratePgConstraint_Update_Condeferrable",
			Handler:    _PostgresMigrate_PostgresMigratePgConstraint_Update_Condeferrable_Handler,
		},
		{
			MethodName: "PostgresMigratePgConstraint_Update_Condeferred",
			Handler:    _PostgresMigrate_PostgresMigratePgConstraint_Update_Condeferred_Handler,
		},
		{
			MethodName: "PostgresMigratePgConstraint_Update_Conexclop",
			Handler:    _PostgresMigrate_PostgresMigratePgConstraint_Update_Conexclop_Handler,
		},
		{
			MethodName: "PostgresMigratePgConstraint_Update_Confdeltype",
			Handler:    _PostgresMigrate_PostgresMigratePgConstraint_Update_Confdeltype_Handler,
		},
		{
			MethodName: "PostgresMigratePgConstraint_Update_Conffeqop",
			Handler:    _PostgresMigrate_PostgresMigratePgConstraint_Update_Conffeqop_Handler,
		},
		{
			MethodName: "PostgresMigratePgConstraint_Update_Confkey",
			Handler:    _PostgresMigrate_PostgresMigratePgConstraint_Update_Confkey_Handler,
		},
		{
			MethodName: "PostgresMigratePgConstraint_Update_Confmatchtype",
			Handler:    _PostgresMigrate_PostgresMigratePgConstraint_Update_Confmatchtype_Handler,
		},
		{
			MethodName: "PostgresMigratePgConstraint_Update_Confrelid",
			Handler:    _PostgresMigrate_PostgresMigratePgConstraint_Update_Confrelid_Handler,
		},
		{
			MethodName: "PostgresMigratePgConstraint_Update_Confupdtype",
			Handler:    _PostgresMigrate_PostgresMigratePgConstraint_Update_Confupdtype_Handler,
		},
		{
			MethodName: "PostgresMigratePgConstraint_Update_Conindid",
			Handler:    _PostgresMigrate_PostgresMigratePgConstraint_Update_Conindid_Handler,
		},
		{
			MethodName: "PostgresMigratePgConstraint_Update_Coninhcount",
			Handler:    _PostgresMigrate_PostgresMigratePgConstraint_Update_Coninhcount_Handler,
		},
		{
			MethodName: "PostgresMigratePgConstraint_Update_Conislocal",
			Handler:    _PostgresMigrate_PostgresMigratePgConstraint_Update_Conislocal_Handler,
		},
		{
			MethodName: "PostgresMigratePgConstraint_Update_Conkey",
			Handler:    _PostgresMigrate_PostgresMigratePgConstraint_Update_Conkey_Handler,
		},
		{
			MethodName: "PostgresMigratePgConstraint_Update_Conname",
			Handler:    _PostgresMigrate_PostgresMigratePgConstraint_Update_Conname_Handler,
		},
		{
			MethodName: "PostgresMigratePgConstraint_Update_Connamespace",
			Handler:    _PostgresMigrate_PostgresMigratePgConstraint_Update_Connamespace_Handler,
		},
		{
			MethodName: "PostgresMigratePgConstraint_Update_Connoinherit",
			Handler:    _PostgresMigrate_PostgresMigratePgConstraint_Update_Connoinherit_Handler,
		},
		{
			MethodName: "PostgresMigratePgConstraint_Update_Conparentid",
			Handler:    _PostgresMigrate_PostgresMigratePgConstraint_Update_Conparentid_Handler,
		},
		{
			MethodName: "PostgresMigratePgConstraint_Update_Conpfeqop",
			Handler:    _PostgresMigrate_PostgresMigratePgConstraint_Update_Conpfeqop_Handler,
		},
		{
			MethodName: "PostgresMigratePgConstraint_Update_Conppeqop",
			Handler:    _PostgresMigrate_PostgresMigratePgConstraint_Update_Conppeqop_Handler,
		},
		{
			MethodName: "PostgresMigratePgConstraint_Update_Conrelid",
			Handler:    _PostgresMigrate_PostgresMigratePgConstraint_Update_Conrelid_Handler,
		},
		{
			MethodName: "PostgresMigratePgConstraint_Update_Contype",
			Handler:    _PostgresMigrate_PostgresMigratePgConstraint_Update_Contype_Handler,
		},
		{
			MethodName: "PostgresMigratePgConstraint_Update_Contypid",
			Handler:    _PostgresMigrate_PostgresMigratePgConstraint_Update_Contypid_Handler,
		},
		{
			MethodName: "PostgresMigratePgConstraint_Update_Convalidated",
			Handler:    _PostgresMigrate_PostgresMigratePgConstraint_Update_Convalidated_Handler,
		},
		{
			MethodName: "PostgresMigratePgConstraint_Update_Oid",
			Handler:    _PostgresMigrate_PostgresMigratePgConstraint_Update_Oid_Handler,
		},
		{
			MethodName: "PostgresMigratePgConstraint_Update_VersionID",
			Handler:    _PostgresMigrate_PostgresMigratePgConstraint_Update_VersionID_Handler,
		},
		{
			MethodName: "PostgresMigratePgConstraint_ReadFromCache",
			Handler:    _PostgresMigrate_PostgresMigratePgConstraint_ReadFromCache_Handler,
		},
		{
			MethodName: "PostgresMigratePgConstraint_ReadObject",
			Handler:    _PostgresMigrate_PostgresMigratePgConstraint_ReadObject_Handler,
		},
		{
			MethodName: "PostgresMigratePgDescription_Read",
			Handler:    _PostgresMigrate_PostgresMigratePgDescription_Read_Handler,
		},
		{
			MethodName: "PostgresMigratePgDescription_Create",
			Handler:    _PostgresMigrate_PostgresMigratePgDescription_Create_Handler,
		},
		{
			MethodName: "PostgresMigratePgDescription_Update",
			Handler:    _PostgresMigrate_PostgresMigratePgDescription_Update_Handler,
		},
		{
			MethodName: "PostgresMigratePgDescription_Save",
			Handler:    _PostgresMigrate_PostgresMigratePgDescription_Save_Handler,
		},
		{
			MethodName: "PostgresMigratePgDescription_UpdateManyFields",
			Handler:    _PostgresMigrate_PostgresMigratePgDescription_UpdateManyFields_Handler,
		},
		{
			MethodName: "PostgresMigratePgDescription_Update_Classoid",
			Handler:    _PostgresMigrate_PostgresMigratePgDescription_Update_Classoid_Handler,
		},
		{
			MethodName: "PostgresMigratePgDescription_Update_Description",
			Handler:    _PostgresMigrate_PostgresMigratePgDescription_Update_Description_Handler,
		},
		{
			MethodName: "PostgresMigratePgDescription_Update_Objoid",
			Handler:    _PostgresMigrate_PostgresMigratePgDescription_Update_Objoid_Handler,
		},
		{
			MethodName: "PostgresMigratePgDescription_Update_Objsubid",
			Handler:    _PostgresMigrate_PostgresMigratePgDescription_Update_Objsubid_Handler,
		},
		{
			MethodName: "PostgresMigratePgDescription_Update_VersionID",
			Handler:    _PostgresMigrate_PostgresMigratePgDescription_Update_VersionID_Handler,
		},
		{
			MethodName: "PostgresMigratePgDescription_ReadFromCache",
			Handler:    _PostgresMigrate_PostgresMigratePgDescription_ReadFromCache_Handler,
		},
		{
			MethodName: "PostgresMigratePgDescription_ReadObject",
			Handler:    _PostgresMigrate_PostgresMigratePgDescription_ReadObject_Handler,
		},
		{
			MethodName: "PostgresMigratePgIndex_Read",
			Handler:    _PostgresMigrate_PostgresMigratePgIndex_Read_Handler,
		},
		{
			MethodName: "PostgresMigratePgIndex_Create",
			Handler:    _PostgresMigrate_PostgresMigratePgIndex_Create_Handler,
		},
		{
			MethodName: "PostgresMigratePgIndex_Update",
			Handler:    _PostgresMigrate_PostgresMigratePgIndex_Update_Handler,
		},
		{
			MethodName: "PostgresMigratePgIndex_Save",
			Handler:    _PostgresMigrate_PostgresMigratePgIndex_Save_Handler,
		},
		{
			MethodName: "PostgresMigratePgIndex_UpdateManyFields",
			Handler:    _PostgresMigrate_PostgresMigratePgIndex_UpdateManyFields_Handler,
		},
		{
			MethodName: "PostgresMigratePgIndex_Update_Indcheckxmin",
			Handler:    _PostgresMigrate_PostgresMigratePgIndex_Update_Indcheckxmin_Handler,
		},
		{
			MethodName: "PostgresMigratePgIndex_Update_Indclass",
			Handler:    _PostgresMigrate_PostgresMigratePgIndex_Update_Indclass_Handler,
		},
		{
			MethodName: "PostgresMigratePgIndex_Update_Indcollation",
			Handler:    _PostgresMigrate_PostgresMigratePgIndex_Update_Indcollation_Handler,
		},
		{
			MethodName: "PostgresMigratePgIndex_Update_Indexprs",
			Handler:    _PostgresMigrate_PostgresMigratePgIndex_Update_Indexprs_Handler,
		},
		{
			MethodName: "PostgresMigratePgIndex_Update_Indexrelid",
			Handler:    _PostgresMigrate_PostgresMigratePgIndex_Update_Indexrelid_Handler,
		},
		{
			MethodName: "PostgresMigratePgIndex_Update_Indimmediate",
			Handler:    _PostgresMigrate_PostgresMigratePgIndex_Update_Indimmediate_Handler,
		},
		{
			MethodName: "PostgresMigratePgIndex_Update_Indisclustered",
			Handler:    _PostgresMigrate_PostgresMigratePgIndex_Update_Indisclustered_Handler,
		},
		{
			MethodName: "PostgresMigratePgIndex_Update_Indisexclusion",
			Handler:    _PostgresMigrate_PostgresMigratePgIndex_Update_Indisexclusion_Handler,
		},
		{
			MethodName: "PostgresMigratePgIndex_Update_Indislive",
			Handler:    _PostgresMigrate_PostgresMigratePgIndex_Update_Indislive_Handler,
		},
		{
			MethodName: "PostgresMigratePgIndex_Update_Indisprimary",
			Handler:    _PostgresMigrate_PostgresMigratePgIndex_Update_Indisprimary_Handler,
		},
		{
			MethodName: "PostgresMigratePgIndex_Update_Indisready",
			Handler:    _PostgresMigrate_PostgresMigratePgIndex_Update_Indisready_Handler,
		},
		{
			MethodName: "PostgresMigratePgIndex_Update_Indisreplident",
			Handler:    _PostgresMigrate_PostgresMigratePgIndex_Update_Indisreplident_Handler,
		},
		{
			MethodName: "PostgresMigratePgIndex_Update_Indisunique",
			Handler:    _PostgresMigrate_PostgresMigratePgIndex_Update_Indisunique_Handler,
		},
		{
			MethodName: "PostgresMigratePgIndex_Update_Indisvalid",
			Handler:    _PostgresMigrate_PostgresMigratePgIndex_Update_Indisvalid_Handler,
		},
		{
			MethodName: "PostgresMigratePgIndex_Update_Indkey",
			Handler:    _PostgresMigrate_PostgresMigratePgIndex_Update_Indkey_Handler,
		},
		{
			MethodName: "PostgresMigratePgIndex_Update_Indnatts",
			Handler:    _PostgresMigrate_PostgresMigratePgIndex_Update_Indnatts_Handler,
		},
		{
			MethodName: "PostgresMigratePgIndex_Update_Indnkeyatts",
			Handler:    _PostgresMigrate_PostgresMigratePgIndex_Update_Indnkeyatts_Handler,
		},
		{
			MethodName: "PostgresMigratePgIndex_Update_Indoption",
			Handler:    _PostgresMigrate_PostgresMigratePgIndex_Update_Indoption_Handler,
		},
		{
			MethodName: "PostgresMigratePgIndex_Update_Indpred",
			Handler:    _PostgresMigrate_PostgresMigratePgIndex_Update_Indpred_Handler,
		},
		{
			MethodName: "PostgresMigratePgIndex_Update_Indrelid",
			Handler:    _PostgresMigrate_PostgresMigratePgIndex_Update_Indrelid_Handler,
		},
		{
			MethodName: "PostgresMigratePgIndex_Update_VersionID",
			Handler:    _PostgresMigrate_PostgresMigratePgIndex_Update_VersionID_Handler,
		},
		{
			MethodName: "PostgresMigratePgIndex_ReadFromCache",
			Handler:    _PostgresMigrate_PostgresMigratePgIndex_ReadFromCache_Handler,
		},
		{
			MethodName: "PostgresMigratePgIndex_ReadObject",
			Handler:    _PostgresMigrate_PostgresMigratePgIndex_ReadObject_Handler,
		},
		{
			MethodName: "PostgresMigratePgNamespace_Read",
			Handler:    _PostgresMigrate_PostgresMigratePgNamespace_Read_Handler,
		},
		{
			MethodName: "PostgresMigratePgNamespace_Create",
			Handler:    _PostgresMigrate_PostgresMigratePgNamespace_Create_Handler,
		},
		{
			MethodName: "PostgresMigratePgNamespace_Update",
			Handler:    _PostgresMigrate_PostgresMigratePgNamespace_Update_Handler,
		},
		{
			MethodName: "PostgresMigratePgNamespace_Save",
			Handler:    _PostgresMigrate_PostgresMigratePgNamespace_Save_Handler,
		},
		{
			MethodName: "PostgresMigratePgNamespace_UpdateManyFields",
			Handler:    _PostgresMigrate_PostgresMigratePgNamespace_UpdateManyFields_Handler,
		},
		{
			MethodName: "PostgresMigratePgNamespace_Update_Nspacl",
			Handler:    _PostgresMigrate_PostgresMigratePgNamespace_Update_Nspacl_Handler,
		},
		{
			MethodName: "PostgresMigratePgNamespace_Update_Nspname",
			Handler:    _PostgresMigrate_PostgresMigratePgNamespace_Update_Nspname_Handler,
		},
		{
			MethodName: "PostgresMigratePgNamespace_Update_Nspowner",
			Handler:    _PostgresMigrate_PostgresMigratePgNamespace_Update_Nspowner_Handler,
		},
		{
			MethodName: "PostgresMigratePgNamespace_Update_Oid",
			Handler:    _PostgresMigrate_PostgresMigratePgNamespace_Update_Oid_Handler,
		},
		{
			MethodName: "PostgresMigratePgNamespace_Update_VersionID",
			Handler:    _PostgresMigrate_PostgresMigratePgNamespace_Update_VersionID_Handler,
		},
		{
			MethodName: "PostgresMigratePgNamespace_ReadFromCache",
			Handler:    _PostgresMigrate_PostgresMigratePgNamespace_ReadFromCache_Handler,
		},
		{
			MethodName: "PostgresMigratePgNamespace_ReadObject",
			Handler:    _PostgresMigrate_PostgresMigratePgNamespace_ReadObject_Handler,
		},
		{
			MethodName: "PostgresMigrateVersion_Read",
			Handler:    _PostgresMigrate_PostgresMigrateVersion_Read_Handler,
		},
		{
			MethodName: "PostgresMigrateVersion_Create",
			Handler:    _PostgresMigrate_PostgresMigrateVersion_Create_Handler,
		},
		{
			MethodName: "PostgresMigrateVersion_Update",
			Handler:    _PostgresMigrate_PostgresMigrateVersion_Update_Handler,
		},
		{
			MethodName: "PostgresMigrateVersion_Save",
			Handler:    _PostgresMigrate_PostgresMigrateVersion_Save_Handler,
		},
		{
			MethodName: "PostgresMigrateVersion_UpdateManyFields",
			Handler:    _PostgresMigrate_PostgresMigrateVersion_UpdateManyFields_Handler,
		},
		{
			MethodName: "PostgresMigrateVersion_Update_Description",
			Handler:    _PostgresMigrate_PostgresMigrateVersion_Update_Description_Handler,
		},
		{
			MethodName: "PostgresMigrateVersion_Update_Name",
			Handler:    _PostgresMigrate_PostgresMigrateVersion_Update_Name_Handler,
		},
		{
			MethodName: "PostgresMigrateVersion_ReadFromCache",
			Handler:    _PostgresMigrate_PostgresMigrateVersion_ReadFromCache_Handler,
		},
		{
			MethodName: "PostgresMigrateVersion_ReadObject",
			Handler:    _PostgresMigrate_PostgresMigrateVersion_ReadObject_Handler,
		},
		{
			MethodName: "AccountingArea_Read",
			Handler:    _PostgresMigrate_AccountingArea_Read_Handler,
		},
		{
			MethodName: "AccountingArea_Create",
			Handler:    _PostgresMigrate_AccountingArea_Create_Handler,
		},
		{
			MethodName: "AccountingArea_Update",
			Handler:    _PostgresMigrate_AccountingArea_Update_Handler,
		},
		{
			MethodName: "AccountingArea_Save",
			Handler:    _PostgresMigrate_AccountingArea_Save_Handler,
		},
		{
			MethodName: "AccountingArea_FindByExtID",
			Handler:    _PostgresMigrate_AccountingArea_FindByExtID_Handler,
		},
		{
			MethodName: "AccountingArea_Delete",
			Handler:    _PostgresMigrate_AccountingArea_Delete_Handler,
		},
		{
			MethodName: "AccountingArea_Restore",
			Handler:    _PostgresMigrate_AccountingArea_Restore_Handler,
		},
		{
			MethodName: "AccountingArea_Update_Code",
			Handler:    _PostgresMigrate_AccountingArea_Update_Code_Handler,
		},
		{
			MethodName: "AccountingArea_Update_ConnectionID",
			Handler:    _PostgresMigrate_AccountingArea_Update_ConnectionID_Handler,
		},
		{
			MethodName: "AccountingArea_Update_Description",
			Handler:    _PostgresMigrate_AccountingArea_Update_Description_Handler,
		},
		{
			MethodName: "AccountingArea_Update_Name",
			Handler:    _PostgresMigrate_AccountingArea_Update_Name_Handler,
		},
		{
			MethodName: "AccountingArea_ReadFromCache",
			Handler:    _PostgresMigrate_AccountingArea_ReadFromCache_Handler,
		},
		{
			MethodName: "AccountingArea_UpdateManyFields",
			Handler:    _PostgresMigrate_AccountingArea_UpdateManyFields_Handler,
		},
		{
			MethodName: "AccountingArea_ReadObject",
			Handler:    _PostgresMigrate_AccountingArea_ReadObject_Handler,
		},
		{
			MethodName: "AccrualType_Read",
			Handler:    _PostgresMigrate_AccrualType_Read_Handler,
		},
		{
			MethodName: "AccrualType_Create",
			Handler:    _PostgresMigrate_AccrualType_Create_Handler,
		},
		{
			MethodName: "AccrualType_Update",
			Handler:    _PostgresMigrate_AccrualType_Update_Handler,
		},
		{
			MethodName: "AccrualType_Save",
			Handler:    _PostgresMigrate_AccrualType_Save_Handler,
		},
		{
			MethodName: "AccrualType_Delete",
			Handler:    _PostgresMigrate_AccrualType_Delete_Handler,
		},
		{
			MethodName: "AccrualType_Restore",
			Handler:    _PostgresMigrate_AccrualType_Restore_Handler,
		},
		{
			MethodName: "AccrualType_Update_Description",
			Handler:    _PostgresMigrate_AccrualType_Update_Description_Handler,
		},
		{
			MethodName: "AccrualType_Update_Name",
			Handler:    _PostgresMigrate_AccrualType_Update_Name_Handler,
		},
		{
			MethodName: "AccrualType_ReadFromCache",
			Handler:    _PostgresMigrate_AccrualType_ReadFromCache_Handler,
		},
		{
			MethodName: "AccrualType_UpdateManyFields",
			Handler:    _PostgresMigrate_AccrualType_UpdateManyFields_Handler,
		},
		{
			MethodName: "AccrualType_ReadObject",
			Handler:    _PostgresMigrate_AccrualType_ReadObject_Handler,
		},
		{
			MethodName: "Balance_Read",
			Handler:    _PostgresMigrate_Balance_Read_Handler,
		},
		{
			MethodName: "Balance_Create",
			Handler:    _PostgresMigrate_Balance_Create_Handler,
		},
		{
			MethodName: "Balance_Update",
			Handler:    _PostgresMigrate_Balance_Update_Handler,
		},
		{
			MethodName: "Balance_Save",
			Handler:    _PostgresMigrate_Balance_Save_Handler,
		},
		{
			MethodName: "Balance_FindByExtID",
			Handler:    _PostgresMigrate_Balance_FindByExtID_Handler,
		},
		{
			MethodName: "Balance_Delete",
			Handler:    _PostgresMigrate_Balance_Delete_Handler,
		},
		{
			MethodName: "Balance_Restore",
			Handler:    _PostgresMigrate_Balance_Restore_Handler,
		},
		{
			MethodName: "Balance_Update_BillingMonth",
			Handler:    _PostgresMigrate_Balance_Update_BillingMonth_Handler,
		},
		{
			MethodName: "Balance_Update_ConnectionID",
			Handler:    _PostgresMigrate_Balance_Update_ConnectionID_Handler,
		},
		{
			MethodName: "Balance_Update_ContractID",
			Handler:    _PostgresMigrate_Balance_Update_ContractID_Handler,
		},
		{
			MethodName: "Balance_Update_DebtTypeID",
			Handler:    _PostgresMigrate_Balance_Update_DebtTypeID_Handler,
		},
		{
			MethodName: "Balance_Update_DocumentAt",
			Handler:    _PostgresMigrate_Balance_Update_DocumentAt_Handler,
		},
		{
			MethodName: "Balance_Update_DocumentInvoiceID",
			Handler:    _PostgresMigrate_Balance_Update_DocumentInvoiceID_Handler,
		},
		{
			MethodName: "Balance_Update_DocumentPaymentID",
			Handler:    _PostgresMigrate_Balance_Update_DocumentPaymentID_Handler,
		},
		{
			MethodName: "Balance_Update_Sum",
			Handler:    _PostgresMigrate_Balance_Update_Sum_Handler,
		},
		{
			MethodName: "Balance_ReadFromCache",
			Handler:    _PostgresMigrate_Balance_ReadFromCache_Handler,
		},
		{
			MethodName: "Balance_UpdateManyFields",
			Handler:    _PostgresMigrate_Balance_UpdateManyFields_Handler,
		},
		{
			MethodName: "Balance_ReadObject",
			Handler:    _PostgresMigrate_Balance_ReadObject_Handler,
		},
		{
			MethodName: "BankAccountOrganization_Read",
			Handler:    _PostgresMigrate_BankAccountOrganization_Read_Handler,
		},
		{
			MethodName: "BankAccountOrganization_Create",
			Handler:    _PostgresMigrate_BankAccountOrganization_Create_Handler,
		},
		{
			MethodName: "BankAccountOrganization_Update",
			Handler:    _PostgresMigrate_BankAccountOrganization_Update_Handler,
		},
		{
			MethodName: "BankAccountOrganization_Save",
			Handler:    _PostgresMigrate_BankAccountOrganization_Save_Handler,
		},
		{
			MethodName: "BankAccountOrganization_FindByExtID",
			Handler:    _PostgresMigrate_BankAccountOrganization_FindByExtID_Handler,
		},
		{
			MethodName: "BankAccountOrganization_Delete",
			Handler:    _PostgresMigrate_BankAccountOrganization_Delete_Handler,
		},
		{
			MethodName: "BankAccountOrganization_Restore",
			Handler:    _PostgresMigrate_BankAccountOrganization_Restore_Handler,
		},
		{
			MethodName: "BankAccountOrganization_Update_AccountNumber",
			Handler:    _PostgresMigrate_BankAccountOrganization_Update_AccountNumber_Handler,
		},
		{
			MethodName: "BankAccountOrganization_Update_BankID",
			Handler:    _PostgresMigrate_BankAccountOrganization_Update_BankID_Handler,
		},
		{
			MethodName: "BankAccountOrganization_Update_ConnectionID",
			Handler:    _PostgresMigrate_BankAccountOrganization_Update_ConnectionID_Handler,
		},
		{
			MethodName: "BankAccountOrganization_Update_OrganizationID",
			Handler:    _PostgresMigrate_BankAccountOrganization_Update_OrganizationID_Handler,
		},
		{
			MethodName: "BankAccountOrganization_ReadFromCache",
			Handler:    _PostgresMigrate_BankAccountOrganization_ReadFromCache_Handler,
		},
		{
			MethodName: "BankAccountOrganization_UpdateManyFields",
			Handler:    _PostgresMigrate_BankAccountOrganization_UpdateManyFields_Handler,
		},
		{
			MethodName: "BankAccountOrganization_ReadObject",
			Handler:    _PostgresMigrate_BankAccountOrganization_ReadObject_Handler,
		},
		{
			MethodName: "Bank_Read",
			Handler:    _PostgresMigrate_Bank_Read_Handler,
		},
		{
			MethodName: "Bank_Create",
			Handler:    _PostgresMigrate_Bank_Create_Handler,
		},
		{
			MethodName: "Bank_Update",
			Handler:    _PostgresMigrate_Bank_Update_Handler,
		},
		{
			MethodName: "Bank_Save",
			Handler:    _PostgresMigrate_Bank_Save_Handler,
		},
		{
			MethodName: "Bank_FindByExtID",
			Handler:    _PostgresMigrate_Bank_FindByExtID_Handler,
		},
		{
			MethodName: "Bank_Delete",
			Handler:    _PostgresMigrate_Bank_Delete_Handler,
		},
		{
			MethodName: "Bank_Restore",
			Handler:    _PostgresMigrate_Bank_Restore_Handler,
		},
		{
			MethodName: "Bank_Update_BIK",
			Handler:    _PostgresMigrate_Bank_Update_BIK_Handler,
		},
		{
			MethodName: "Bank_Update_City",
			Handler:    _PostgresMigrate_Bank_Update_City_Handler,
		},
		{
			MethodName: "Bank_Update_ConnectionID",
			Handler:    _PostgresMigrate_Bank_Update_ConnectionID_Handler,
		},
		{
			MethodName: "Bank_Update_CorrespondentAccount",
			Handler:    _PostgresMigrate_Bank_Update_CorrespondentAccount_Handler,
		},
		{
			MethodName: "Bank_Update_Description",
			Handler:    _PostgresMigrate_Bank_Update_Description_Handler,
		},
		{
			MethodName: "Bank_Update_Name",
			Handler:    _PostgresMigrate_Bank_Update_Name_Handler,
		},
		{
			MethodName: "Bank_Update_OrganizationID",
			Handler:    _PostgresMigrate_Bank_Update_OrganizationID_Handler,
		},
		{
			MethodName: "Bank_ReadFromCache",
			Handler:    _PostgresMigrate_Bank_ReadFromCache_Handler,
		},
		{
			MethodName: "Bank_UpdateManyFields",
			Handler:    _PostgresMigrate_Bank_UpdateManyFields_Handler,
		},
		{
			MethodName: "Bank_ReadObject",
			Handler:    _PostgresMigrate_Bank_ReadObject_Handler,
		},
		{
			MethodName: "BeforeTimeType_Read",
			Handler:    _PostgresMigrate_BeforeTimeType_Read_Handler,
		},
		{
			MethodName: "BeforeTimeType_Create",
			Handler:    _PostgresMigrate_BeforeTimeType_Create_Handler,
		},
		{
			MethodName: "BeforeTimeType_Update",
			Handler:    _PostgresMigrate_BeforeTimeType_Update_Handler,
		},
		{
			MethodName: "BeforeTimeType_Save",
			Handler:    _PostgresMigrate_BeforeTimeType_Save_Handler,
		},
		{
			MethodName: "BeforeTimeType_Delete",
			Handler:    _PostgresMigrate_BeforeTimeType_Delete_Handler,
		},
		{
			MethodName: "BeforeTimeType_Restore",
			Handler:    _PostgresMigrate_BeforeTimeType_Restore_Handler,
		},
		{
			MethodName: "BeforeTimeType_Update_Code",
			Handler:    _PostgresMigrate_BeforeTimeType_Update_Code_Handler,
		},
		{
			MethodName: "BeforeTimeType_Update_Description",
			Handler:    _PostgresMigrate_BeforeTimeType_Update_Description_Handler,
		},
		{
			MethodName: "BeforeTimeType_Update_Name",
			Handler:    _PostgresMigrate_BeforeTimeType_Update_Name_Handler,
		},
		{
			MethodName: "BeforeTimeType_Update_Value",
			Handler:    _PostgresMigrate_BeforeTimeType_Update_Value_Handler,
		},
		{
			MethodName: "BeforeTimeType_ReadFromCache",
			Handler:    _PostgresMigrate_BeforeTimeType_ReadFromCache_Handler,
		},
		{
			MethodName: "BeforeTimeType_UpdateManyFields",
			Handler:    _PostgresMigrate_BeforeTimeType_UpdateManyFields_Handler,
		},
		{
			MethodName: "BeforeTimeType_ReadObject",
			Handler:    _PostgresMigrate_BeforeTimeType_ReadObject_Handler,
		},
		{
			MethodName: "BillKindType_Read",
			Handler:    _PostgresMigrate_BillKindType_Read_Handler,
		},
		{
			MethodName: "BillKindType_Create",
			Handler:    _PostgresMigrate_BillKindType_Create_Handler,
		},
		{
			MethodName: "BillKindType_Update",
			Handler:    _PostgresMigrate_BillKindType_Update_Handler,
		},
		{
			MethodName: "BillKindType_Save",
			Handler:    _PostgresMigrate_BillKindType_Save_Handler,
		},
		{
			MethodName: "BillKindType_Delete",
			Handler:    _PostgresMigrate_BillKindType_Delete_Handler,
		},
		{
			MethodName: "BillKindType_Restore",
			Handler:    _PostgresMigrate_BillKindType_Restore_Handler,
		},
		{
			MethodName: "BillKindType_Update_Code",
			Handler:    _PostgresMigrate_BillKindType_Update_Code_Handler,
		},
		{
			MethodName: "BillKindType_Update_Description",
			Handler:    _PostgresMigrate_BillKindType_Update_Description_Handler,
		},
		{
			MethodName: "BillKindType_Update_Name",
			Handler:    _PostgresMigrate_BillKindType_Update_Name_Handler,
		},
		{
			MethodName: "BillKindType_ReadFromCache",
			Handler:    _PostgresMigrate_BillKindType_ReadFromCache_Handler,
		},
		{
			MethodName: "BillKindType_UpdateManyFields",
			Handler:    _PostgresMigrate_BillKindType_UpdateManyFields_Handler,
		},
		{
			MethodName: "BillKindType_ReadObject",
			Handler:    _PostgresMigrate_BillKindType_ReadObject_Handler,
		},
		{
			MethodName: "Branch_Read",
			Handler:    _PostgresMigrate_Branch_Read_Handler,
		},
		{
			MethodName: "Branch_Create",
			Handler:    _PostgresMigrate_Branch_Create_Handler,
		},
		{
			MethodName: "Branch_Update",
			Handler:    _PostgresMigrate_Branch_Update_Handler,
		},
		{
			MethodName: "Branch_Save",
			Handler:    _PostgresMigrate_Branch_Save_Handler,
		},
		{
			MethodName: "Branch_Delete",
			Handler:    _PostgresMigrate_Branch_Delete_Handler,
		},
		{
			MethodName: "Branch_Restore",
			Handler:    _PostgresMigrate_Branch_Restore_Handler,
		},
		{
			MethodName: "Branch_Update_Code",
			Handler:    _PostgresMigrate_Branch_Update_Code_Handler,
		},
		{
			MethodName: "Branch_Update_Description",
			Handler:    _PostgresMigrate_Branch_Update_Description_Handler,
		},
		{
			MethodName: "Branch_Update_Name",
			Handler:    _PostgresMigrate_Branch_Update_Name_Handler,
		},
		{
			MethodName: "Branch_Update_OrganizationID",
			Handler:    _PostgresMigrate_Branch_Update_OrganizationID_Handler,
		},
		{
			MethodName: "Branch_Update_PersonalAreaLink",
			Handler:    _PostgresMigrate_Branch_Update_PersonalAreaLink_Handler,
		},
		{
			MethodName: "Branch_ReadFromCache",
			Handler:    _PostgresMigrate_Branch_ReadFromCache_Handler,
		},
		{
			MethodName: "Branch_UpdateManyFields",
			Handler:    _PostgresMigrate_Branch_UpdateManyFields_Handler,
		},
		{
			MethodName: "Branch_ReadObject",
			Handler:    _PostgresMigrate_Branch_ReadObject_Handler,
		},
		{
			MethodName: "Briefcase_Read",
			Handler:    _PostgresMigrate_Briefcase_Read_Handler,
		},
		{
			MethodName: "Briefcase_Create",
			Handler:    _PostgresMigrate_Briefcase_Create_Handler,
		},
		{
			MethodName: "Briefcase_Update",
			Handler:    _PostgresMigrate_Briefcase_Update_Handler,
		},
		{
			MethodName: "Briefcase_Save",
			Handler:    _PostgresMigrate_Briefcase_Save_Handler,
		},
		{
			MethodName: "Briefcase_Delete",
			Handler:    _PostgresMigrate_Briefcase_Delete_Handler,
		},
		{
			MethodName: "Briefcase_Restore",
			Handler:    _PostgresMigrate_Briefcase_Restore_Handler,
		},
		{
			MethodName: "Briefcase_UpdateManyFields",
			Handler:    _PostgresMigrate_Briefcase_UpdateManyFields_Handler,
		},
		{
			MethodName: "Briefcase_ReadFromCache",
			Handler:    _PostgresMigrate_Briefcase_ReadFromCache_Handler,
		},
		{
			MethodName: "Briefcase_Update_LawerID",
			Handler:    _PostgresMigrate_Briefcase_Update_LawerID_Handler,
		},
		{
			MethodName: "Briefcase_Update_BranchID",
			Handler:    _PostgresMigrate_Briefcase_Update_BranchID_Handler,
		},
		{
			MethodName: "Briefcase_Update_Number",
			Handler:    _PostgresMigrate_Briefcase_Update_Number_Handler,
		},
		{
			MethodName: "Briefcase_Update_StatusID",
			Handler:    _PostgresMigrate_Briefcase_Update_StatusID_Handler,
		},
		{
			MethodName: "Briefcase_SetLawer_ChangeItems",
			Handler:    _PostgresMigrate_Briefcase_SetLawer_ChangeItems_Handler,
		},
		{
			MethodName: "Briefcase_FindEmployeeBy_LawerID",
			Handler:    _PostgresMigrate_Briefcase_FindEmployeeBy_LawerID_Handler,
		},
		{
			MethodName: "Briefcase_ReadObject",
			Handler:    _PostgresMigrate_Briefcase_ReadObject_Handler,
		},
		{
			MethodName: "BriefcaseComment_Read",
			Handler:    _PostgresMigrate_BriefcaseComment_Read_Handler,
		},
		{
			MethodName: "BriefcaseComment_Create",
			Handler:    _PostgresMigrate_BriefcaseComment_Create_Handler,
		},
		{
			MethodName: "BriefcaseComment_Update",
			Handler:    _PostgresMigrate_BriefcaseComment_Update_Handler,
		},
		{
			MethodName: "BriefcaseComment_Save",
			Handler:    _PostgresMigrate_BriefcaseComment_Save_Handler,
		},
		{
			MethodName: "BriefcaseComment_Delete",
			Handler:    _PostgresMigrate_BriefcaseComment_Delete_Handler,
		},
		{
			MethodName: "BriefcaseComment_Restore",
			Handler:    _PostgresMigrate_BriefcaseComment_Restore_Handler,
		},
		{
			MethodName: "BriefcaseComment_UpdateManyFields",
			Handler:    _PostgresMigrate_BriefcaseComment_UpdateManyFields_Handler,
		},
		{
			MethodName: "BriefcaseComment_Update_BriefcaseID",
			Handler:    _PostgresMigrate_BriefcaseComment_Update_BriefcaseID_Handler,
		},
		{
			MethodName: "BriefcaseComment_Update_CommentTypeID",
			Handler:    _PostgresMigrate_BriefcaseComment_Update_CommentTypeID_Handler,
		},
		{
			MethodName: "BriefcaseComment_Update_EmployeeID",
			Handler:    _PostgresMigrate_BriefcaseComment_Update_EmployeeID_Handler,
		},
		{
			MethodName: "BriefcaseComment_Update_Message",
			Handler:    _PostgresMigrate_BriefcaseComment_Update_Message_Handler,
		},
		{
			MethodName: "BriefcaseComment_ReadFromCache",
			Handler:    _PostgresMigrate_BriefcaseComment_ReadFromCache_Handler,
		},
		{
			MethodName: "BriefcaseComment_ReadObject",
			Handler:    _PostgresMigrate_BriefcaseComment_ReadObject_Handler,
		},
		{
			MethodName: "BriefcaseComment_FindMassBy_BriefcaseID_CommentTypeID",
			Handler:    _PostgresMigrate_BriefcaseComment_FindMassBy_BriefcaseID_CommentTypeID_Handler,
		},
		{
			MethodName: "BriefcasesFile_Read",
			Handler:    _PostgresMigrate_BriefcasesFile_Read_Handler,
		},
		{
			MethodName: "BriefcasesFile_Create",
			Handler:    _PostgresMigrate_BriefcasesFile_Create_Handler,
		},
		{
			MethodName: "BriefcasesFile_Update",
			Handler:    _PostgresMigrate_BriefcasesFile_Update_Handler,
		},
		{
			MethodName: "BriefcasesFile_Save",
			Handler:    _PostgresMigrate_BriefcasesFile_Save_Handler,
		},
		{
			MethodName: "BriefcasesFile_Delete",
			Handler:    _PostgresMigrate_BriefcasesFile_Delete_Handler,
		},
		{
			MethodName: "BriefcasesFile_Restore",
			Handler:    _PostgresMigrate_BriefcasesFile_Restore_Handler,
		},
		{
			MethodName: "BriefcasesFile_UpdateManyFields",
			Handler:    _PostgresMigrate_BriefcasesFile_UpdateManyFields_Handler,
		},
		{
			MethodName: "BriefcasesFile_Update_BriefcaseID",
			Handler:    _PostgresMigrate_BriefcasesFile_Update_BriefcaseID_Handler,
		},
		{
			MethodName: "BriefcasesFile_Update_FileID",
			Handler:    _PostgresMigrate_BriefcasesFile_Update_FileID_Handler,
		},
		{
			MethodName: "BriefcasesFile_ReadFromCache",
			Handler:    _PostgresMigrate_BriefcasesFile_ReadFromCache_Handler,
		},
		{
			MethodName: "BriefcasesFile_ReadObject",
			Handler:    _PostgresMigrate_BriefcasesFile_ReadObject_Handler,
		},
		{
			MethodName: "BriefcasesFile_FindMassBy_BriefcaseID",
			Handler:    _PostgresMigrate_BriefcasesFile_FindMassBy_BriefcaseID_Handler,
		},
		{
			MethodName: "BriefcasesFile_FindMassObjectBy_BriefcaseID",
			Handler:    _PostgresMigrate_BriefcasesFile_FindMassObjectBy_BriefcaseID_Handler,
		},
		{
			MethodName: "BriefcasesHashtag_Read",
			Handler:    _PostgresMigrate_BriefcasesHashtag_Read_Handler,
		},
		{
			MethodName: "BriefcasesHashtag_Create",
			Handler:    _PostgresMigrate_BriefcasesHashtag_Create_Handler,
		},
		{
			MethodName: "BriefcasesHashtag_Update",
			Handler:    _PostgresMigrate_BriefcasesHashtag_Update_Handler,
		},
		{
			MethodName: "BriefcasesHashtag_Save",
			Handler:    _PostgresMigrate_BriefcasesHashtag_Save_Handler,
		},
		{
			MethodName: "BriefcasesHashtag_Delete",
			Handler:    _PostgresMigrate_BriefcasesHashtag_Delete_Handler,
		},
		{
			MethodName: "BriefcasesHashtag_Restore",
			Handler:    _PostgresMigrate_BriefcasesHashtag_Restore_Handler,
		},
		{
			MethodName: "BriefcasesHashtag_UpdateManyFields",
			Handler:    _PostgresMigrate_BriefcasesHashtag_UpdateManyFields_Handler,
		},
		{
			MethodName: "BriefcasesHashtag_Update_BriefcaseID",
			Handler:    _PostgresMigrate_BriefcasesHashtag_Update_BriefcaseID_Handler,
		},
		{
			MethodName: "BriefcasesHashtag_Update_HashtagID",
			Handler:    _PostgresMigrate_BriefcasesHashtag_Update_HashtagID_Handler,
		},
		{
			MethodName: "BriefcasesHashtag_ReadFromCache",
			Handler:    _PostgresMigrate_BriefcasesHashtag_ReadFromCache_Handler,
		},
		{
			MethodName: "BriefcasesHashtag_FindMassBy_BriefcaseID",
			Handler:    _PostgresMigrate_BriefcasesHashtag_FindMassBy_BriefcaseID_Handler,
		},
		{
			MethodName: "BriefcasesHashtag_ReadObject",
			Handler:    _PostgresMigrate_BriefcasesHashtag_ReadObject_Handler,
		},
		{
			MethodName: "BriefcasesLawsuit_Read",
			Handler:    _PostgresMigrate_BriefcasesLawsuit_Read_Handler,
		},
		{
			MethodName: "BriefcasesLawsuit_Create",
			Handler:    _PostgresMigrate_BriefcasesLawsuit_Create_Handler,
		},
		{
			MethodName: "BriefcasesLawsuit_Update",
			Handler:    _PostgresMigrate_BriefcasesLawsuit_Update_Handler,
		},
		{
			MethodName: "BriefcasesLawsuit_Save",
			Handler:    _PostgresMigrate_BriefcasesLawsuit_Save_Handler,
		},
		{
			MethodName: "BriefcasesLawsuit_Delete",
			Handler:    _PostgresMigrate_BriefcasesLawsuit_Delete_Handler,
		},
		{
			MethodName: "BriefcasesLawsuit_Restore",
			Handler:    _PostgresMigrate_BriefcasesLawsuit_Restore_Handler,
		},
		{
			MethodName: "BriefcasesLawsuit_UpdateManyFields",
			Handler:    _PostgresMigrate_BriefcasesLawsuit_UpdateManyFields_Handler,
		},
		{
			MethodName: "BriefcasesLawsuit_Update_BriefcaseID",
			Handler:    _PostgresMigrate_BriefcasesLawsuit_Update_BriefcaseID_Handler,
		},
		{
			MethodName: "BriefcasesLawsuit_Update_LawsuitID",
			Handler:    _PostgresMigrate_BriefcasesLawsuit_Update_LawsuitID_Handler,
		},
		{
			MethodName: "BriefcasesLawsuit_ReadFromCache",
			Handler:    _PostgresMigrate_BriefcasesLawsuit_ReadFromCache_Handler,
		},
		{
			MethodName: "BriefcasesLawsuit_ReadObject",
			Handler:    _PostgresMigrate_BriefcasesLawsuit_ReadObject_Handler,
		},
		{
			MethodName: "BriefcaseStatusState_Read",
			Handler:    _PostgresMigrate_BriefcaseStatusState_Read_Handler,
		},
		{
			MethodName: "BriefcaseStatusState_Create",
			Handler:    _PostgresMigrate_BriefcaseStatusState_Create_Handler,
		},
		{
			MethodName: "BriefcaseStatusState_Update",
			Handler:    _PostgresMigrate_BriefcaseStatusState_Update_Handler,
		},
		{
			MethodName: "BriefcaseStatusState_Save",
			Handler:    _PostgresMigrate_BriefcaseStatusState_Save_Handler,
		},
		{
			MethodName: "BriefcaseStatusState_Delete",
			Handler:    _PostgresMigrate_BriefcaseStatusState_Delete_Handler,
		},
		{
			MethodName: "BriefcaseStatusState_Restore",
			Handler:    _PostgresMigrate_BriefcaseStatusState_Restore_Handler,
		},
		{
			MethodName: "BriefcaseStatusState_UpdateManyFields",
			Handler:    _PostgresMigrate_BriefcaseStatusState_UpdateManyFields_Handler,
		},
		{
			MethodName: "BriefcaseStatusState_Update_BriefcaseDebtSum",
			Handler:    _PostgresMigrate_BriefcaseStatusState_Update_BriefcaseDebtSum_Handler,
		},
		{
			MethodName: "BriefcaseStatusState_Update_BriefcaseID",
			Handler:    _PostgresMigrate_BriefcaseStatusState_Update_BriefcaseID_Handler,
		},
		{
			MethodName: "BriefcaseStatusState_Update_BriefcaseInvoiceSum",
			Handler:    _PostgresMigrate_BriefcaseStatusState_Update_BriefcaseInvoiceSum_Handler,
		},
		{
			MethodName: "BriefcaseStatusState_Update_BriefcasePaySum",
			Handler:    _PostgresMigrate_BriefcaseStatusState_Update_BriefcasePaySum_Handler,
		},
		{
			MethodName: "BriefcaseStatusState_Update_ContractBillsTotalSum",
			Handler:    _PostgresMigrate_BriefcaseStatusState_Update_ContractBillsTotalSum_Handler,
		},
		{
			MethodName: "BriefcaseStatusState_Update_ContractDebtSumAllTypes",
			Handler:    _PostgresMigrate_BriefcaseStatusState_Update_ContractDebtSumAllTypes_Handler,
		},
		{
			MethodName: "BriefcaseStatusState_Update_ContractMainSum",
			Handler:    _PostgresMigrate_BriefcaseStatusState_Update_ContractMainSum_Handler,
		},
		{
			MethodName: "BriefcaseStatusState_Update_ContractPennySum",
			Handler:    _PostgresMigrate_BriefcaseStatusState_Update_ContractPennySum_Handler,
		},
		{
			MethodName: "BriefcaseStatusState_Update_ContractRestrictSum",
			Handler:    _PostgresMigrate_BriefcaseStatusState_Update_ContractRestrictSum_Handler,
		},
		{
			MethodName: "BriefcaseStatusState_Update_ContractStateDutySum",
			Handler:    _PostgresMigrate_BriefcaseStatusState_Update_ContractStateDutySum_Handler,
		},
		{
			MethodName: "BriefcaseStatusState_Update_StatusAt",
			Handler:    _PostgresMigrate_BriefcaseStatusState_Update_StatusAt_Handler,
		},
		{
			MethodName: "BriefcaseStatusState_Update_StatusID",
			Handler:    _PostgresMigrate_BriefcaseStatusState_Update_StatusID_Handler,
		},
		{
			MethodName: "BriefcaseStatusState_ReadFromCache",
			Handler:    _PostgresMigrate_BriefcaseStatusState_ReadFromCache_Handler,
		},
		{
			MethodName: "BriefcaseStatusState_ReadObject",
			Handler:    _PostgresMigrate_BriefcaseStatusState_ReadObject_Handler,
		},
		{
			MethodName: "Calendar_Read",
			Handler:    _PostgresMigrate_Calendar_Read_Handler,
		},
		{
			MethodName: "Calendar_Create",
			Handler:    _PostgresMigrate_Calendar_Create_Handler,
		},
		{
			MethodName: "Calendar_Update",
			Handler:    _PostgresMigrate_Calendar_Update_Handler,
		},
		{
			MethodName: "Calendar_Save",
			Handler:    _PostgresMigrate_Calendar_Save_Handler,
		},
		{
			MethodName: "Calendar_Delete",
			Handler:    _PostgresMigrate_Calendar_Delete_Handler,
		},
		{
			MethodName: "Calendar_Restore",
			Handler:    _PostgresMigrate_Calendar_Restore_Handler,
		},
		{
			MethodName: "Calendar_Update_Comment",
			Handler:    _PostgresMigrate_Calendar_Update_Comment_Handler,
		},
		{
			MethodName: "Calendar_Update_Date",
			Handler:    _PostgresMigrate_Calendar_Update_Date_Handler,
		},
		{
			MethodName: "Calendar_Update_DayTypeID",
			Handler:    _PostgresMigrate_Calendar_Update_DayTypeID_Handler,
		},
		{
			MethodName: "Calendar_Update_Days",
			Handler:    _PostgresMigrate_Calendar_Update_Days_Handler,
		},
		{
			MethodName: "Calendar_Update_Hours",
			Handler:    _PostgresMigrate_Calendar_Update_Hours_Handler,
		},
		{
			MethodName: "Calendar_ReadFromCache",
			Handler:    _PostgresMigrate_Calendar_ReadFromCache_Handler,
		},
		{
			MethodName: "Calendar_UpdateManyFields",
			Handler:    _PostgresMigrate_Calendar_UpdateManyFields_Handler,
		},
		{
			MethodName: "Calendar_ReadObject",
			Handler:    _PostgresMigrate_Calendar_ReadObject_Handler,
		},
		{
			MethodName: "ChangeItem_Read",
			Handler:    _PostgresMigrate_ChangeItem_Read_Handler,
		},
		{
			MethodName: "ChangeItem_Create",
			Handler:    _PostgresMigrate_ChangeItem_Create_Handler,
		},
		{
			MethodName: "ChangeItem_Update",
			Handler:    _PostgresMigrate_ChangeItem_Update_Handler,
		},
		{
			MethodName: "ChangeItem_Save",
			Handler:    _PostgresMigrate_ChangeItem_Save_Handler,
		},
		{
			MethodName: "ChangeItem_Delete",
			Handler:    _PostgresMigrate_ChangeItem_Delete_Handler,
		},
		{
			MethodName: "ChangeItem_Restore",
			Handler:    _PostgresMigrate_ChangeItem_Restore_Handler,
		},
		{
			MethodName: "ChangeItem_Update_Key",
			Handler:    _PostgresMigrate_ChangeItem_Update_Key_Handler,
		},
		{
			MethodName: "ChangeItem_Update_Prev",
			Handler:    _PostgresMigrate_ChangeItem_Update_Prev_Handler,
		},
		{
			MethodName: "ChangeItem_Update_Value",
			Handler:    _PostgresMigrate_ChangeItem_Update_Value_Handler,
		},
		{
			MethodName: "ChangeItem_ReadFromCache",
			Handler:    _PostgresMigrate_ChangeItem_ReadFromCache_Handler,
		},
		{
			MethodName: "ChangeItem_UpdateManyFields",
			Handler:    _PostgresMigrate_ChangeItem_UpdateManyFields_Handler,
		},
		{
			MethodName: "ChangeItem_Update_TableNameID",
			Handler:    _PostgresMigrate_ChangeItem_Update_TableNameID_Handler,
		},
		{
			MethodName: "ChangeItem_Update_TableRowID",
			Handler:    _PostgresMigrate_ChangeItem_Update_TableRowID_Handler,
		},
		{
			MethodName: "ChangeItem_ReadObject",
			Handler:    _PostgresMigrate_ChangeItem_ReadObject_Handler,
		},
		{
			MethodName: "ChannelType_Read",
			Handler:    _PostgresMigrate_ChannelType_Read_Handler,
		},
		{
			MethodName: "ChannelType_Create",
			Handler:    _PostgresMigrate_ChannelType_Create_Handler,
		},
		{
			MethodName: "ChannelType_Update",
			Handler:    _PostgresMigrate_ChannelType_Update_Handler,
		},
		{
			MethodName: "ChannelType_Save",
			Handler:    _PostgresMigrate_ChannelType_Save_Handler,
		},
		{
			MethodName: "ChannelType_Delete",
			Handler:    _PostgresMigrate_ChannelType_Delete_Handler,
		},
		{
			MethodName: "ChannelType_Restore",
			Handler:    _PostgresMigrate_ChannelType_Restore_Handler,
		},
		{
			MethodName: "ChannelType_Update_Code",
			Handler:    _PostgresMigrate_ChannelType_Update_Code_Handler,
		},
		{
			MethodName: "ChannelType_Update_Description",
			Handler:    _PostgresMigrate_ChannelType_Update_Description_Handler,
		},
		{
			MethodName: "ChannelType_Update_Name",
			Handler:    _PostgresMigrate_ChannelType_Update_Name_Handler,
		},
		{
			MethodName: "ChannelType_Update_NotifierID",
			Handler:    _PostgresMigrate_ChannelType_Update_NotifierID_Handler,
		},
		{
			MethodName: "ChannelType_ReadFromCache",
			Handler:    _PostgresMigrate_ChannelType_ReadFromCache_Handler,
		},
		{
			MethodName: "ChannelType_UpdateManyFields",
			Handler:    _PostgresMigrate_ChannelType_UpdateManyFields_Handler,
		},
		{
			MethodName: "ChannelType_ReadObject",
			Handler:    _PostgresMigrate_ChannelType_ReadObject_Handler,
		},
		{
			MethodName: "ClaimType_Read",
			Handler:    _PostgresMigrate_ClaimType_Read_Handler,
		},
		{
			MethodName: "ClaimType_Create",
			Handler:    _PostgresMigrate_ClaimType_Create_Handler,
		},
		{
			MethodName: "ClaimType_Update",
			Handler:    _PostgresMigrate_ClaimType_Update_Handler,
		},
		{
			MethodName: "ClaimType_Save",
			Handler:    _PostgresMigrate_ClaimType_Save_Handler,
		},
		{
			MethodName: "ClaimType_Delete",
			Handler:    _PostgresMigrate_ClaimType_Delete_Handler,
		},
		{
			MethodName: "ClaimType_Restore",
			Handler:    _PostgresMigrate_ClaimType_Restore_Handler,
		},
		{
			MethodName: "ClaimType_Update_Code",
			Handler:    _PostgresMigrate_ClaimType_Update_Code_Handler,
		},
		{
			MethodName: "ClaimType_Update_Description",
			Handler:    _PostgresMigrate_ClaimType_Update_Description_Handler,
		},
		{
			MethodName: "ClaimType_Update_Name",
			Handler:    _PostgresMigrate_ClaimType_Update_Name_Handler,
		},
		{
			MethodName: "ClaimType_ReadFromCache",
			Handler:    _PostgresMigrate_ClaimType_ReadFromCache_Handler,
		},
		{
			MethodName: "ClaimType_UpdateManyFields",
			Handler:    _PostgresMigrate_ClaimType_UpdateManyFields_Handler,
		},
		{
			MethodName: "ClaimType_ReadObject",
			Handler:    _PostgresMigrate_ClaimType_ReadObject_Handler,
		},
		{
			MethodName: "ColorType_Read",
			Handler:    _PostgresMigrate_ColorType_Read_Handler,
		},
		{
			MethodName: "ColorType_Create",
			Handler:    _PostgresMigrate_ColorType_Create_Handler,
		},
		{
			MethodName: "ColorType_Update",
			Handler:    _PostgresMigrate_ColorType_Update_Handler,
		},
		{
			MethodName: "ColorType_Save",
			Handler:    _PostgresMigrate_ColorType_Save_Handler,
		},
		{
			MethodName: "ColorType_Delete",
			Handler:    _PostgresMigrate_ColorType_Delete_Handler,
		},
		{
			MethodName: "ColorType_Restore",
			Handler:    _PostgresMigrate_ColorType_Restore_Handler,
		},
		{
			MethodName: "ColorType_Update_Code",
			Handler:    _PostgresMigrate_ColorType_Update_Code_Handler,
		},
		{
			MethodName: "ColorType_Update_Description",
			Handler:    _PostgresMigrate_ColorType_Update_Description_Handler,
		},
		{
			MethodName: "ColorType_Update_Name",
			Handler:    _PostgresMigrate_ColorType_Update_Name_Handler,
		},
		{
			MethodName: "ColorType_Update_Value",
			Handler:    _PostgresMigrate_ColorType_Update_Value_Handler,
		},
		{
			MethodName: "ColorType_ReadFromCache",
			Handler:    _PostgresMigrate_ColorType_ReadFromCache_Handler,
		},
		{
			MethodName: "ColorType_UpdateManyFields",
			Handler:    _PostgresMigrate_ColorType_UpdateManyFields_Handler,
		},
		{
			MethodName: "ColorType_Update_Blue",
			Handler:    _PostgresMigrate_ColorType_Update_Blue_Handler,
		},
		{
			MethodName: "ColorType_Update_Green",
			Handler:    _PostgresMigrate_ColorType_Update_Green_Handler,
		},
		{
			MethodName: "ColorType_Update_Red",
			Handler:    _PostgresMigrate_ColorType_Update_Red_Handler,
		},
		{
			MethodName: "ColorType_ReadObject",
			Handler:    _PostgresMigrate_ColorType_ReadObject_Handler,
		},
		{
			MethodName: "CommentType_Read",
			Handler:    _PostgresMigrate_CommentType_Read_Handler,
		},
		{
			MethodName: "CommentType_Create",
			Handler:    _PostgresMigrate_CommentType_Create_Handler,
		},
		{
			MethodName: "CommentType_Update",
			Handler:    _PostgresMigrate_CommentType_Update_Handler,
		},
		{
			MethodName: "CommentType_Save",
			Handler:    _PostgresMigrate_CommentType_Save_Handler,
		},
		{
			MethodName: "CommentType_Delete",
			Handler:    _PostgresMigrate_CommentType_Delete_Handler,
		},
		{
			MethodName: "CommentType_Restore",
			Handler:    _PostgresMigrate_CommentType_Restore_Handler,
		},
		{
			MethodName: "CommentType_UpdateManyFields",
			Handler:    _PostgresMigrate_CommentType_UpdateManyFields_Handler,
		},
		{
			MethodName: "CommentType_Update_Description",
			Handler:    _PostgresMigrate_CommentType_Update_Description_Handler,
		},
		{
			MethodName: "CommentType_Update_Name",
			Handler:    _PostgresMigrate_CommentType_Update_Name_Handler,
		},
		{
			MethodName: "CommentType_ReadFromCache",
			Handler:    _PostgresMigrate_CommentType_ReadFromCache_Handler,
		},
		{
			MethodName: "CommentType_ReadObject",
			Handler:    _PostgresMigrate_CommentType_ReadObject_Handler,
		},
		{
			MethodName: "CompletedMonth_Read",
			Handler:    _PostgresMigrate_CompletedMonth_Read_Handler,
		},
		{
			MethodName: "CompletedMonth_Create",
			Handler:    _PostgresMigrate_CompletedMonth_Create_Handler,
		},
		{
			MethodName: "CompletedMonth_Update",
			Handler:    _PostgresMigrate_CompletedMonth_Update_Handler,
		},
		{
			MethodName: "CompletedMonth_Save",
			Handler:    _PostgresMigrate_CompletedMonth_Save_Handler,
		},
		{
			MethodName: "CompletedMonth_FindByExtID",
			Handler:    _PostgresMigrate_CompletedMonth_FindByExtID_Handler,
		},
		{
			MethodName: "CompletedMonth_Delete",
			Handler:    _PostgresMigrate_CompletedMonth_Delete_Handler,
		},
		{
			MethodName: "CompletedMonth_Restore",
			Handler:    _PostgresMigrate_CompletedMonth_Restore_Handler,
		},
		{
			MethodName: "CompletedMonth_Update_AccountingAreaID",
			Handler:    _PostgresMigrate_CompletedMonth_Update_AccountingAreaID_Handler,
		},
		{
			MethodName: "CompletedMonth_Update_BillingMonth",
			Handler:    _PostgresMigrate_CompletedMonth_Update_BillingMonth_Handler,
		},
		{
			MethodName: "CompletedMonth_Update_ConnectionID",
			Handler:    _PostgresMigrate_CompletedMonth_Update_ConnectionID_Handler,
		},
		{
			MethodName: "CompletedMonth_ReadFromCache",
			Handler:    _PostgresMigrate_CompletedMonth_ReadFromCache_Handler,
		},
		{
			MethodName: "CompletedMonth_UpdateManyFields",
			Handler:    _PostgresMigrate_CompletedMonth_UpdateManyFields_Handler,
		},
		{
			MethodName: "CompletedMonth_ReadObject",
			Handler:    _PostgresMigrate_CompletedMonth_ReadObject_Handler,
		},
		{
			MethodName: "Connection_Read",
			Handler:    _PostgresMigrate_Connection_Read_Handler,
		},
		{
			MethodName: "Connection_Create",
			Handler:    _PostgresMigrate_Connection_Create_Handler,
		},
		{
			MethodName: "Connection_Update",
			Handler:    _PostgresMigrate_Connection_Update_Handler,
		},
		{
			MethodName: "Connection_Save",
			Handler:    _PostgresMigrate_Connection_Save_Handler,
		},
		{
			MethodName: "Connection_Update_BranchID",
			Handler:    _PostgresMigrate_Connection_Update_BranchID_Handler,
		},
		{
			MethodName: "Connection_Update_DbName",
			Handler:    _PostgresMigrate_Connection_Update_DbName_Handler,
		},
		{
			MethodName: "Connection_Update_DbScheme",
			Handler:    _PostgresMigrate_Connection_Update_DbScheme_Handler,
		},
		{
			MethodName: "Connection_Update_IsLegal",
			Handler:    _PostgresMigrate_Connection_Update_IsLegal_Handler,
		},
		{
			MethodName: "Connection_Update_Login",
			Handler:    _PostgresMigrate_Connection_Update_Login_Handler,
		},
		{
			MethodName: "Connection_Update_Name",
			Handler:    _PostgresMigrate_Connection_Update_Name_Handler,
		},
		{
			MethodName: "Connection_Update_Password",
			Handler:    _PostgresMigrate_Connection_Update_Password_Handler,
		},
		{
			MethodName: "Connection_Update_Port",
			Handler:    _PostgresMigrate_Connection_Update_Port_Handler,
		},
		{
			MethodName: "Connection_Update_Server",
			Handler:    _PostgresMigrate_Connection_Update_Server_Handler,
		},
		{
			MethodName: "Connection_ReadFromCache",
			Handler:    _PostgresMigrate_Connection_ReadFromCache_Handler,
		},
		{
			MethodName: "Connection_UpdateManyFields",
			Handler:    _PostgresMigrate_Connection_UpdateManyFields_Handler,
		},
		{
			MethodName: "Connection_FindBy_BranchID_IsLegal",
			Handler:    _PostgresMigrate_Connection_FindBy_BranchID_IsLegal_Handler,
		},
		{
			MethodName: "Connection_FindMassBy_BranchID",
			Handler:    _PostgresMigrate_Connection_FindMassBy_BranchID_Handler,
		},
		{
			MethodName: "Connection_ReadObject",
			Handler:    _PostgresMigrate_Connection_ReadObject_Handler,
		},
		{
			MethodName: "ContractBlackItem_Read",
			Handler:    _PostgresMigrate_ContractBlackItem_Read_Handler,
		},
		{
			MethodName: "ContractBlackItem_Create",
			Handler:    _PostgresMigrate_ContractBlackItem_Create_Handler,
		},
		{
			MethodName: "ContractBlackItem_Update",
			Handler:    _PostgresMigrate_ContractBlackItem_Update_Handler,
		},
		{
			MethodName: "ContractBlackItem_Save",
			Handler:    _PostgresMigrate_ContractBlackItem_Save_Handler,
		},
		{
			MethodName: "ContractBlackItem_Delete",
			Handler:    _PostgresMigrate_ContractBlackItem_Delete_Handler,
		},
		{
			MethodName: "ContractBlackItem_Restore",
			Handler:    _PostgresMigrate_ContractBlackItem_Restore_Handler,
		},
		{
			MethodName: "ContractBlackItem_Update_ContractID",
			Handler:    _PostgresMigrate_ContractBlackItem_Update_ContractID_Handler,
		},
		{
			MethodName: "ContractBlackItem_Update_ContractNumber",
			Handler:    _PostgresMigrate_ContractBlackItem_Update_ContractNumber_Handler,
		},
		{
			MethodName: "ContractBlackItem_Update_CreatedByID",
			Handler:    _PostgresMigrate_ContractBlackItem_Update_CreatedByID_Handler,
		},
		{
			MethodName: "ContractBlackItem_Update_DateFrom",
			Handler:    _PostgresMigrate_ContractBlackItem_Update_DateFrom_Handler,
		},
		{
			MethodName: "ContractBlackItem_Update_DateTo",
			Handler:    _PostgresMigrate_ContractBlackItem_Update_DateTo_Handler,
		},
		{
			MethodName: "ContractBlackItem_Update_EDMSLink",
			Handler:    _PostgresMigrate_ContractBlackItem_Update_EDMSLink_Handler,
		},
		{
			MethodName: "ContractBlackItem_Update_ModifiedByID",
			Handler:    _PostgresMigrate_ContractBlackItem_Update_ModifiedByID_Handler,
		},
		{
			MethodName: "ContractBlackItem_Update_Note",
			Handler:    _PostgresMigrate_ContractBlackItem_Update_Note_Handler,
		},
		{
			MethodName: "ContractBlackItem_Update_Reason",
			Handler:    _PostgresMigrate_ContractBlackItem_Update_Reason_Handler,
		},
		{
			MethodName: "ContractBlackItem_ReadFromCache",
			Handler:    _PostgresMigrate_ContractBlackItem_ReadFromCache_Handler,
		},
		{
			MethodName: "ContractBlackItem_UpdateManyFields",
			Handler:    _PostgresMigrate_ContractBlackItem_UpdateManyFields_Handler,
		},
		{
			MethodName: "ContractBlackItem_ReadObject",
			Handler:    _PostgresMigrate_ContractBlackItem_ReadObject_Handler,
		},
		{
			MethodName: "ContractCategoryType_Read",
			Handler:    _PostgresMigrate_ContractCategoryType_Read_Handler,
		},
		{
			MethodName: "ContractCategoryType_Create",
			Handler:    _PostgresMigrate_ContractCategoryType_Create_Handler,
		},
		{
			MethodName: "ContractCategoryType_Update",
			Handler:    _PostgresMigrate_ContractCategoryType_Update_Handler,
		},
		{
			MethodName: "ContractCategoryType_Save",
			Handler:    _PostgresMigrate_ContractCategoryType_Save_Handler,
		},
		{
			MethodName: "ContractCategoryType_FindByExtID",
			Handler:    _PostgresMigrate_ContractCategoryType_FindByExtID_Handler,
		},
		{
			MethodName: "ContractCategoryType_Delete",
			Handler:    _PostgresMigrate_ContractCategoryType_Delete_Handler,
		},
		{
			MethodName: "ContractCategoryType_Restore",
			Handler:    _PostgresMigrate_ContractCategoryType_Restore_Handler,
		},
		{
			MethodName: "ContractCategoryType_Update_Code",
			Handler:    _PostgresMigrate_ContractCategoryType_Update_Code_Handler,
		},
		{
			MethodName: "ContractCategoryType_Update_ConnectionID",
			Handler:    _PostgresMigrate_ContractCategoryType_Update_ConnectionID_Handler,
		},
		{
			MethodName: "ContractCategoryType_Update_Description",
			Handler:    _PostgresMigrate_ContractCategoryType_Update_Description_Handler,
		},
		{
			MethodName: "ContractCategoryType_Update_Name",
			Handler:    _PostgresMigrate_ContractCategoryType_Update_Name_Handler,
		},
		{
			MethodName: "ContractCategoryType_ReadFromCache",
			Handler:    _PostgresMigrate_ContractCategoryType_ReadFromCache_Handler,
		},
		{
			MethodName: "ContractCategoryType_UpdateManyFields",
			Handler:    _PostgresMigrate_ContractCategoryType_UpdateManyFields_Handler,
		},
		{
			MethodName: "ContractCategoryType_ReadObject",
			Handler:    _PostgresMigrate_ContractCategoryType_ReadObject_Handler,
		},
		{
			MethodName: "ContractType_Read",
			Handler:    _PostgresMigrate_ContractType_Read_Handler,
		},
		{
			MethodName: "ContractType_Create",
			Handler:    _PostgresMigrate_ContractType_Create_Handler,
		},
		{
			MethodName: "ContractType_Update",
			Handler:    _PostgresMigrate_ContractType_Update_Handler,
		},
		{
			MethodName: "ContractType_Save",
			Handler:    _PostgresMigrate_ContractType_Save_Handler,
		},
		{
			MethodName: "ContractType_Delete",
			Handler:    _PostgresMigrate_ContractType_Delete_Handler,
		},
		{
			MethodName: "ContractType_Restore",
			Handler:    _PostgresMigrate_ContractType_Restore_Handler,
		},
		{
			MethodName: "ContractType_UpdateManyFields",
			Handler:    _PostgresMigrate_ContractType_UpdateManyFields_Handler,
		},
		{
			MethodName: "ContractType_Update_Description",
			Handler:    _PostgresMigrate_ContractType_Update_Description_Handler,
		},
		{
			MethodName: "ContractType_Update_Name",
			Handler:    _PostgresMigrate_ContractType_Update_Name_Handler,
		},
		{
			MethodName: "ContractType_ReadFromCache",
			Handler:    _PostgresMigrate_ContractType_ReadFromCache_Handler,
		},
		{
			MethodName: "ContractType_ReadObject",
			Handler:    _PostgresMigrate_ContractType_ReadObject_Handler,
		},
		{
			MethodName: "ContractWhiteItem_Read",
			Handler:    _PostgresMigrate_ContractWhiteItem_Read_Handler,
		},
		{
			MethodName: "ContractWhiteItem_Create",
			Handler:    _PostgresMigrate_ContractWhiteItem_Create_Handler,
		},
		{
			MethodName: "ContractWhiteItem_Update",
			Handler:    _PostgresMigrate_ContractWhiteItem_Update_Handler,
		},
		{
			MethodName: "ContractWhiteItem_Save",
			Handler:    _PostgresMigrate_ContractWhiteItem_Save_Handler,
		},
		{
			MethodName: "ContractWhiteItem_Delete",
			Handler:    _PostgresMigrate_ContractWhiteItem_Delete_Handler,
		},
		{
			MethodName: "ContractWhiteItem_Restore",
			Handler:    _PostgresMigrate_ContractWhiteItem_Restore_Handler,
		},
		{
			MethodName: "ContractWhiteItem_Update_ContractID",
			Handler:    _PostgresMigrate_ContractWhiteItem_Update_ContractID_Handler,
		},
		{
			MethodName: "ContractWhiteItem_Update_ContractNumber",
			Handler:    _PostgresMigrate_ContractWhiteItem_Update_ContractNumber_Handler,
		},
		{
			MethodName: "ContractWhiteItem_Update_CreatedByID",
			Handler:    _PostgresMigrate_ContractWhiteItem_Update_CreatedByID_Handler,
		},
		{
			MethodName: "ContractWhiteItem_Update_DateFrom",
			Handler:    _PostgresMigrate_ContractWhiteItem_Update_DateFrom_Handler,
		},
		{
			MethodName: "ContractWhiteItem_Update_DateTo",
			Handler:    _PostgresMigrate_ContractWhiteItem_Update_DateTo_Handler,
		},
		{
			MethodName: "ContractWhiteItem_Update_EDMSLink",
			Handler:    _PostgresMigrate_ContractWhiteItem_Update_EDMSLink_Handler,
		},
		{
			MethodName: "ContractWhiteItem_Update_ModifiedByID",
			Handler:    _PostgresMigrate_ContractWhiteItem_Update_ModifiedByID_Handler,
		},
		{
			MethodName: "ContractWhiteItem_Update_Note",
			Handler:    _PostgresMigrate_ContractWhiteItem_Update_Note_Handler,
		},
		{
			MethodName: "ContractWhiteItem_Update_Reason",
			Handler:    _PostgresMigrate_ContractWhiteItem_Update_Reason_Handler,
		},
		{
			MethodName: "ContractWhiteItem_ReadFromCache",
			Handler:    _PostgresMigrate_ContractWhiteItem_ReadFromCache_Handler,
		},
		{
			MethodName: "ContractWhiteItem_UpdateManyFields",
			Handler:    _PostgresMigrate_ContractWhiteItem_UpdateManyFields_Handler,
		},
		{
			MethodName: "ContractWhiteItem_ReadObject",
			Handler:    _PostgresMigrate_ContractWhiteItem_ReadObject_Handler,
		},
		{
			MethodName: "Contract_Read",
			Handler:    _PostgresMigrate_Contract_Read_Handler,
		},
		{
			MethodName: "Contract_Create",
			Handler:    _PostgresMigrate_Contract_Create_Handler,
		},
		{
			MethodName: "Contract_Update",
			Handler:    _PostgresMigrate_Contract_Update_Handler,
		},
		{
			MethodName: "Contract_Save",
			Handler:    _PostgresMigrate_Contract_Save_Handler,
		},
		{
			MethodName: "Contract_FindByExtID",
			Handler:    _PostgresMigrate_Contract_FindByExtID_Handler,
		},
		{
			MethodName: "Contract_Delete",
			Handler:    _PostgresMigrate_Contract_Delete_Handler,
		},
		{
			MethodName: "Contract_Restore",
			Handler:    _PostgresMigrate_Contract_Restore_Handler,
		},
		{
			MethodName: "Contract_FindBy_Number",
			Handler:    _PostgresMigrate_Contract_FindBy_Number_Handler,
		},
		{
			MethodName: "Contract_Update_BeginAt",
			Handler:    _PostgresMigrate_Contract_Update_BeginAt_Handler,
		},
		{
			MethodName: "Contract_Update_BranchID",
			Handler:    _PostgresMigrate_Contract_Update_BranchID_Handler,
		},
		{
			MethodName: "Contract_Update_CategoryID",
			Handler:    _PostgresMigrate_Contract_Update_CategoryID_Handler,
		},
		{
			MethodName: "Contract_Update_ConnectionID",
			Handler:    _PostgresMigrate_Contract_Update_ConnectionID_Handler,
		},
		{
			MethodName: "Contract_Update_CuratorClaimID",
			Handler:    _PostgresMigrate_Contract_Update_CuratorClaimID_Handler,
		},
		{
			MethodName: "Contract_Update_CuratorContractID",
			Handler:    _PostgresMigrate_Contract_Update_CuratorContractID_Handler,
		},
		{
			MethodName: "Contract_Update_CuratorLegalID",
			Handler:    _PostgresMigrate_Contract_Update_CuratorLegalID_Handler,
		},
		{
			MethodName: "Contract_Update_CuratorPaymentID",
			Handler:    _PostgresMigrate_Contract_Update_CuratorPaymentID_Handler,
		},
		{
			MethodName: "Contract_Update_CuratorTechAuditID",
			Handler:    _PostgresMigrate_Contract_Update_CuratorTechAuditID_Handler,
		},
		{
			MethodName: "Contract_Update_DaysToResolveClaim",
			Handler:    _PostgresMigrate_Contract_Update_DaysToResolveClaim_Handler,
		},
		{
			MethodName: "Contract_Update_Description",
			Handler:    _PostgresMigrate_Contract_Update_Description_Handler,
		},
		{
			MethodName: "Contract_Update_Email",
			Handler:    _PostgresMigrate_Contract_Update_Email_Handler,
		},
		{
			MethodName: "Contract_Update_EndAt",
			Handler:    _PostgresMigrate_Contract_Update_EndAt_Handler,
		},
		{
			MethodName: "Contract_Update_ErrorFromStackAt",
			Handler:    _PostgresMigrate_Contract_Update_ErrorFromStackAt_Handler,
		},
		{
			MethodName: "Contract_Update_IndividualID",
			Handler:    _PostgresMigrate_Contract_Update_IndividualID_Handler,
		},
		{
			MethodName: "Contract_Update_IsErrorFromStack",
			Handler:    _PostgresMigrate_Contract_Update_IsErrorFromStack_Handler,
		},
		{
			MethodName: "Contract_Update_IsIndOrganization",
			Handler:    _PostgresMigrate_Contract_Update_IsIndOrganization_Handler,
		},
		{
			MethodName: "Contract_Update_IsOrganization",
			Handler:    _PostgresMigrate_Contract_Update_IsOrganization_Handler,
		},
		{
			MethodName: "Contract_Update_IsValidEmail",
			Handler:    _PostgresMigrate_Contract_Update_IsValidEmail_Handler,
		},
		{
			MethodName: "Contract_Update_Number",
			Handler:    _PostgresMigrate_Contract_Update_Number_Handler,
		},
		{
			MethodName: "Contract_Update_OrganizationConsigneeID",
			Handler:    _PostgresMigrate_Contract_Update_OrganizationConsigneeID_Handler,
		},
		{
			MethodName: "Contract_Update_OrganizationCustomerID",
			Handler:    _PostgresMigrate_Contract_Update_OrganizationCustomerID_Handler,
		},
		{
			MethodName: "Contract_Update_OrganizationPayerID",
			Handler:    _PostgresMigrate_Contract_Update_OrganizationPayerID_Handler,
		},
		{
			MethodName: "Contract_Update_PostAddress",
			Handler:    _PostgresMigrate_Contract_Update_PostAddress_Handler,
		},
		{
			MethodName: "Contract_Update_SignAt",
			Handler:    _PostgresMigrate_Contract_Update_SignAt_Handler,
		},
		{
			MethodName: "Contract_Update_Status",
			Handler:    _PostgresMigrate_Contract_Update_Status_Handler,
		},
		{
			MethodName: "Contract_Update_TerminateAt",
			Handler:    _PostgresMigrate_Contract_Update_TerminateAt_Handler,
		},
		{
			MethodName: "Contract_ReadFromCache",
			Handler:    _PostgresMigrate_Contract_ReadFromCache_Handler,
		},
		{
			MethodName: "Contract_UpdateManyFields",
			Handler:    _PostgresMigrate_Contract_UpdateManyFields_Handler,
		},
		{
			MethodName: "Contract_Update_IsBelongsRosatom",
			Handler:    _PostgresMigrate_Contract_Update_IsBelongsRosatom_Handler,
		},
		{
			MethodName: "Contract_Update_DepartmentID",
			Handler:    _PostgresMigrate_Contract_Update_DepartmentID_Handler,
		},
		{
			MethodName: "Contract_Update_Note",
			Handler:    _PostgresMigrate_Contract_Update_Note_Handler,
		},
		{
			MethodName: "Contract_Update_SectorID",
			Handler:    _PostgresMigrate_Contract_Update_SectorID_Handler,
		},
		{
			MethodName: "Contract_Update_TypeID",
			Handler:    _PostgresMigrate_Contract_Update_TypeID_Handler,
		},
		{
			MethodName: "Contract_ReadObject",
			Handler:    _PostgresMigrate_Contract_ReadObject_Handler,
		},
		{
			MethodName: "ContractsTotalSum_Read",
			Handler:    _PostgresMigrate_ContractsTotalSum_Read_Handler,
		},
		{
			MethodName: "ContractsTotalSum_Create",
			Handler:    _PostgresMigrate_ContractsTotalSum_Create_Handler,
		},
		{
			MethodName: "ContractsTotalSum_Update",
			Handler:    _PostgresMigrate_ContractsTotalSum_Update_Handler,
		},
		{
			MethodName: "ContractsTotalSum_Save",
			Handler:    _PostgresMigrate_ContractsTotalSum_Save_Handler,
		},
		{
			MethodName: "ContractsTotalSum_Delete",
			Handler:    _PostgresMigrate_ContractsTotalSum_Delete_Handler,
		},
		{
			MethodName: "ContractsTotalSum_Restore",
			Handler:    _PostgresMigrate_ContractsTotalSum_Restore_Handler,
		},
		{
			MethodName: "ContractsTotalSum_UpdateManyFields",
			Handler:    _PostgresMigrate_ContractsTotalSum_UpdateManyFields_Handler,
		},
		{
			MethodName: "ContractsTotalSum_Update_ContractID",
			Handler:    _PostgresMigrate_ContractsTotalSum_Update_ContractID_Handler,
		},
		{
			MethodName: "ContractsTotalSum_Update_MainSum",
			Handler:    _PostgresMigrate_ContractsTotalSum_Update_MainSum_Handler,
		},
		{
			MethodName: "ContractsTotalSum_Update_PennySum",
			Handler:    _PostgresMigrate_ContractsTotalSum_Update_PennySum_Handler,
		},
		{
			MethodName: "ContractsTotalSum_Update_RestrictSum",
			Handler:    _PostgresMigrate_ContractsTotalSum_Update_RestrictSum_Handler,
		},
		{
			MethodName: "ContractsTotalSum_Update_StateDutySum",
			Handler:    _PostgresMigrate_ContractsTotalSum_Update_StateDutySum_Handler,
		},
		{
			MethodName: "ContractsTotalSum_Update_TotalSum",
			Handler:    _PostgresMigrate_ContractsTotalSum_Update_TotalSum_Handler,
		},
		{
			MethodName: "ContractsTotalSum_ReadFromCache",
			Handler:    _PostgresMigrate_ContractsTotalSum_ReadFromCache_Handler,
		},
		{
			MethodName: "ContractsTotalSum_Update_BillsSum",
			Handler:    _PostgresMigrate_ContractsTotalSum_Update_BillsSum_Handler,
		},
		{
			MethodName: "ContractsTotalSum_ReadObject",
			Handler:    _PostgresMigrate_ContractsTotalSum_ReadObject_Handler,
		},
		{
			MethodName: "ContractIndividual_Read",
			Handler:    _PostgresMigrate_ContractIndividual_Read_Handler,
		},
		{
			MethodName: "ContractIndividual_Create",
			Handler:    _PostgresMigrate_ContractIndividual_Create_Handler,
		},
		{
			MethodName: "ContractIndividual_Update",
			Handler:    _PostgresMigrate_ContractIndividual_Update_Handler,
		},
		{
			MethodName: "ContractIndividual_Save",
			Handler:    _PostgresMigrate_ContractIndividual_Save_Handler,
		},
		{
			MethodName: "ContractIndividual_UpdateManyFields",
			Handler:    _PostgresMigrate_ContractIndividual_UpdateManyFields_Handler,
		},
		{
			MethodName: "ContractIndividual_Update_ContractID",
			Handler:    _PostgresMigrate_ContractIndividual_Update_ContractID_Handler,
		},
		{
			MethodName: "ContractIndividual_Update_IndividualID",
			Handler:    _PostgresMigrate_ContractIndividual_Update_IndividualID_Handler,
		},
		{
			MethodName: "ContractIndividual_ReadFromCache",
			Handler:    _PostgresMigrate_ContractIndividual_ReadFromCache_Handler,
		},
		{
			MethodName: "ContractIndividual_ReadObject",
			Handler:    _PostgresMigrate_ContractIndividual_ReadObject_Handler,
		},
		{
			MethodName: "ContractOrganization_Read",
			Handler:    _PostgresMigrate_ContractOrganization_Read_Handler,
		},
		{
			MethodName: "ContractOrganization_Create",
			Handler:    _PostgresMigrate_ContractOrganization_Create_Handler,
		},
		{
			MethodName: "ContractOrganization_Update",
			Handler:    _PostgresMigrate_ContractOrganization_Update_Handler,
		},
		{
			MethodName: "ContractOrganization_Save",
			Handler:    _PostgresMigrate_ContractOrganization_Save_Handler,
		},
		{
			MethodName: "ContractOrganization_UpdateManyFields",
			Handler:    _PostgresMigrate_ContractOrganization_UpdateManyFields_Handler,
		},
		{
			MethodName: "ContractOrganization_Update_ContractID",
			Handler:    _PostgresMigrate_ContractOrganization_Update_ContractID_Handler,
		},
		{
			MethodName: "ContractOrganization_Update_OrganizationID",
			Handler:    _PostgresMigrate_ContractOrganization_Update_OrganizationID_Handler,
		},
		{
			MethodName: "ContractOrganization_ReadFromCache",
			Handler:    _PostgresMigrate_ContractOrganization_ReadFromCache_Handler,
		},
		{
			MethodName: "ContractOrganization_ReadObject",
			Handler:    _PostgresMigrate_ContractOrganization_ReadObject_Handler,
		},
		{
			MethodName: "CourtSuit_Read",
			Handler:    _PostgresMigrate_CourtSuit_Read_Handler,
		},
		{
			MethodName: "CourtSuit_Create",
			Handler:    _PostgresMigrate_CourtSuit_Create_Handler,
		},
		{
			MethodName: "CourtSuit_Update",
			Handler:    _PostgresMigrate_CourtSuit_Update_Handler,
		},
		{
			MethodName: "CourtSuit_Save",
			Handler:    _PostgresMigrate_CourtSuit_Save_Handler,
		},
		{
			MethodName: "CourtSuit_Delete",
			Handler:    _PostgresMigrate_CourtSuit_Delete_Handler,
		},
		{
			MethodName: "CourtSuit_Restore",
			Handler:    _PostgresMigrate_CourtSuit_Restore_Handler,
		},
		{
			MethodName: "CourtSuit_UpdateManyFields",
			Handler:    _PostgresMigrate_CourtSuit_UpdateManyFields_Handler,
		},
		{
			MethodName: "CourtSuit_Update_BriefcaseID",
			Handler:    _PostgresMigrate_CourtSuit_Update_BriefcaseID_Handler,
		},
		{
			MethodName: "CourtSuit_Update_CourtID",
			Handler:    _PostgresMigrate_CourtSuit_Update_CourtID_Handler,
		},
		{
			MethodName: "CourtSuit_Update_LawerID",
			Handler:    _PostgresMigrate_CourtSuit_Update_LawerID_Handler,
		},
		{
			MethodName: "CourtSuit_ReadFromCache",
			Handler:    _PostgresMigrate_CourtSuit_ReadFromCache_Handler,
		},
		{
			MethodName: "CourtSuit_Update_LitigationTypeID",
			Handler:    _PostgresMigrate_CourtSuit_Update_LitigationTypeID_Handler,
		},
		{
			MethodName: "CourtSuit_ReadObject",
			Handler:    _PostgresMigrate_CourtSuit_ReadObject_Handler,
		},
		{
			MethodName: "CourtSuitsFile_Read",
			Handler:    _PostgresMigrate_CourtSuitsFile_Read_Handler,
		},
		{
			MethodName: "CourtSuitsFile_Create",
			Handler:    _PostgresMigrate_CourtSuitsFile_Create_Handler,
		},
		{
			MethodName: "CourtSuitsFile_Update",
			Handler:    _PostgresMigrate_CourtSuitsFile_Update_Handler,
		},
		{
			MethodName: "CourtSuitsFile_Save",
			Handler:    _PostgresMigrate_CourtSuitsFile_Save_Handler,
		},
		{
			MethodName: "CourtSuitsFile_Delete",
			Handler:    _PostgresMigrate_CourtSuitsFile_Delete_Handler,
		},
		{
			MethodName: "CourtSuitsFile_Restore",
			Handler:    _PostgresMigrate_CourtSuitsFile_Restore_Handler,
		},
		{
			MethodName: "CourtSuitsFile_UpdateManyFields",
			Handler:    _PostgresMigrate_CourtSuitsFile_UpdateManyFields_Handler,
		},
		{
			MethodName: "CourtSuitsFile_Update_CourtSuitID",
			Handler:    _PostgresMigrate_CourtSuitsFile_Update_CourtSuitID_Handler,
		},
		{
			MethodName: "CourtSuitsFile_Update_FileID",
			Handler:    _PostgresMigrate_CourtSuitsFile_Update_FileID_Handler,
		},
		{
			MethodName: "CourtSuitsFile_ReadFromCache",
			Handler:    _PostgresMigrate_CourtSuitsFile_ReadFromCache_Handler,
		},
		{
			MethodName: "CourtSuitsFile_ReadObject",
			Handler:    _PostgresMigrate_CourtSuitsFile_ReadObject_Handler,
		},
		{
			MethodName: "CourtSuitsFile_FindMassBy_CourtSuitID",
			Handler:    _PostgresMigrate_CourtSuitsFile_FindMassBy_CourtSuitID_Handler,
		},
		{
			MethodName: "CourtSuitsFile_FindMassObjectBy_CourtSuitID",
			Handler:    _PostgresMigrate_CourtSuitsFile_FindMassObjectBy_CourtSuitID_Handler,
		},
		{
			MethodName: "Court_Read",
			Handler:    _PostgresMigrate_Court_Read_Handler,
		},
		{
			MethodName: "Court_Create",
			Handler:    _PostgresMigrate_Court_Create_Handler,
		},
		{
			MethodName: "Court_Update",
			Handler:    _PostgresMigrate_Court_Update_Handler,
		},
		{
			MethodName: "Court_Save",
			Handler:    _PostgresMigrate_Court_Save_Handler,
		},
		{
			MethodName: "Court_Delete",
			Handler:    _PostgresMigrate_Court_Delete_Handler,
		},
		{
			MethodName: "Court_Restore",
			Handler:    _PostgresMigrate_Court_Restore_Handler,
		},
		{
			MethodName: "Court_Update_City",
			Handler:    _PostgresMigrate_Court_Update_City_Handler,
		},
		{
			MethodName: "Court_Update_Description",
			Handler:    _PostgresMigrate_Court_Update_Description_Handler,
		},
		{
			MethodName: "Court_Update_Name",
			Handler:    _PostgresMigrate_Court_Update_Name_Handler,
		},
		{
			MethodName: "Court_Update_OrganizationID",
			Handler:    _PostgresMigrate_Court_Update_OrganizationID_Handler,
		},
		{
			MethodName: "Court_ReadFromCache",
			Handler:    _PostgresMigrate_Court_ReadFromCache_Handler,
		},
		{
			MethodName: "Court_UpdateManyFields",
			Handler:    _PostgresMigrate_Court_UpdateManyFields_Handler,
		},
		{
			MethodName: "Court_ReadObject",
			Handler:    _PostgresMigrate_Court_ReadObject_Handler,
		},
		{
			MethodName: "CourtSuitComment_Read",
			Handler:    _PostgresMigrate_CourtSuitComment_Read_Handler,
		},
		{
			MethodName: "CourtSuitComment_Create",
			Handler:    _PostgresMigrate_CourtSuitComment_Create_Handler,
		},
		{
			MethodName: "CourtSuitComment_Update",
			Handler:    _PostgresMigrate_CourtSuitComment_Update_Handler,
		},
		{
			MethodName: "CourtSuitComment_Save",
			Handler:    _PostgresMigrate_CourtSuitComment_Save_Handler,
		},
		{
			MethodName: "CourtSuitComment_Delete",
			Handler:    _PostgresMigrate_CourtSuitComment_Delete_Handler,
		},
		{
			MethodName: "CourtSuitComment_Restore",
			Handler:    _PostgresMigrate_CourtSuitComment_Restore_Handler,
		},
		{
			MethodName: "CourtSuitComment_UpdateManyFields",
			Handler:    _PostgresMigrate_CourtSuitComment_UpdateManyFields_Handler,
		},
		{
			MethodName: "CourtSuitComment_Update_CommentTypeID",
			Handler:    _PostgresMigrate_CourtSuitComment_Update_CommentTypeID_Handler,
		},
		{
			MethodName: "CourtSuitComment_Update_CourtSuitID",
			Handler:    _PostgresMigrate_CourtSuitComment_Update_CourtSuitID_Handler,
		},
		{
			MethodName: "CourtSuitComment_Update_EmployeeID",
			Handler:    _PostgresMigrate_CourtSuitComment_Update_EmployeeID_Handler,
		},
		{
			MethodName: "CourtSuitComment_Update_Message",
			Handler:    _PostgresMigrate_CourtSuitComment_Update_Message_Handler,
		},
		{
			MethodName: "CourtSuitComment_ReadFromCache",
			Handler:    _PostgresMigrate_CourtSuitComment_ReadFromCache_Handler,
		},
		{
			MethodName: "CourtSuitComment_FindMassBy_CourtSuitID_CommentTypeID",
			Handler:    _PostgresMigrate_CourtSuitComment_FindMassBy_CourtSuitID_CommentTypeID_Handler,
		},
		{
			MethodName: "CourtSuitComment_ReadObject",
			Handler:    _PostgresMigrate_CourtSuitComment_ReadObject_Handler,
		},
		{
			MethodName: "DayType_Read",
			Handler:    _PostgresMigrate_DayType_Read_Handler,
		},
		{
			MethodName: "DayType_Create",
			Handler:    _PostgresMigrate_DayType_Create_Handler,
		},
		{
			MethodName: "DayType_Update",
			Handler:    _PostgresMigrate_DayType_Update_Handler,
		},
		{
			MethodName: "DayType_Save",
			Handler:    _PostgresMigrate_DayType_Save_Handler,
		},
		{
			MethodName: "DayType_Delete",
			Handler:    _PostgresMigrate_DayType_Delete_Handler,
		},
		{
			MethodName: "DayType_Restore",
			Handler:    _PostgresMigrate_DayType_Restore_Handler,
		},
		{
			MethodName: "DayType_Update_Description",
			Handler:    _PostgresMigrate_DayType_Update_Description_Handler,
		},
		{
			MethodName: "DayType_Update_IsWorkDay",
			Handler:    _PostgresMigrate_DayType_Update_IsWorkDay_Handler,
		},
		{
			MethodName: "DayType_Update_Name",
			Handler:    _PostgresMigrate_DayType_Update_Name_Handler,
		},
		{
			MethodName: "DayType_Update_ShortName",
			Handler:    _PostgresMigrate_DayType_Update_ShortName_Handler,
		},
		{
			MethodName: "DayType_ReadFromCache",
			Handler:    _PostgresMigrate_DayType_ReadFromCache_Handler,
		},
		{
			MethodName: "DayType_UpdateManyFields",
			Handler:    _PostgresMigrate_DayType_UpdateManyFields_Handler,
		},
		{
			MethodName: "DayType_ReadObject",
			Handler:    _PostgresMigrate_DayType_ReadObject_Handler,
		},
		{
			MethodName: "DebtType_Read",
			Handler:    _PostgresMigrate_DebtType_Read_Handler,
		},
		{
			MethodName: "DebtType_Create",
			Handler:    _PostgresMigrate_DebtType_Create_Handler,
		},
		{
			MethodName: "DebtType_Update",
			Handler:    _PostgresMigrate_DebtType_Update_Handler,
		},
		{
			MethodName: "DebtType_Save",
			Handler:    _PostgresMigrate_DebtType_Save_Handler,
		},
		{
			MethodName: "DebtType_FindByExtID",
			Handler:    _PostgresMigrate_DebtType_FindByExtID_Handler,
		},
		{
			MethodName: "DebtType_Delete",
			Handler:    _PostgresMigrate_DebtType_Delete_Handler,
		},
		{
			MethodName: "DebtType_Restore",
			Handler:    _PostgresMigrate_DebtType_Restore_Handler,
		},
		{
			MethodName: "DebtType_Update_CodeNSI",
			Handler:    _PostgresMigrate_DebtType_Update_CodeNSI_Handler,
		},
		{
			MethodName: "DebtType_Update_ConnectionID",
			Handler:    _PostgresMigrate_DebtType_Update_ConnectionID_Handler,
		},
		{
			MethodName: "DebtType_Update_Description",
			Handler:    _PostgresMigrate_DebtType_Update_Description_Handler,
		},
		{
			MethodName: "DebtType_Update_ExtCode",
			Handler:    _PostgresMigrate_DebtType_Update_ExtCode_Handler,
		},
		{
			MethodName: "DebtType_Update_Name",
			Handler:    _PostgresMigrate_DebtType_Update_Name_Handler,
		},
		{
			MethodName: "DebtType_ReadFromCache",
			Handler:    _PostgresMigrate_DebtType_ReadFromCache_Handler,
		},
		{
			MethodName: "DebtType_UpdateManyFields",
			Handler:    _PostgresMigrate_DebtType_UpdateManyFields_Handler,
		},
		{
			MethodName: "DebtType_ReadObject",
			Handler:    _PostgresMigrate_DebtType_ReadObject_Handler,
		},
		{
			MethodName: "DirectionType_Read",
			Handler:    _PostgresMigrate_DirectionType_Read_Handler,
		},
		{
			MethodName: "DirectionType_Create",
			Handler:    _PostgresMigrate_DirectionType_Create_Handler,
		},
		{
			MethodName: "DirectionType_Update",
			Handler:    _PostgresMigrate_DirectionType_Update_Handler,
		},
		{
			MethodName: "DirectionType_Save",
			Handler:    _PostgresMigrate_DirectionType_Save_Handler,
		},
		{
			MethodName: "DirectionType_Delete",
			Handler:    _PostgresMigrate_DirectionType_Delete_Handler,
		},
		{
			MethodName: "DirectionType_Restore",
			Handler:    _PostgresMigrate_DirectionType_Restore_Handler,
		},
		{
			MethodName: "DirectionType_Update_Description",
			Handler:    _PostgresMigrate_DirectionType_Update_Description_Handler,
		},
		{
			MethodName: "DirectionType_Update_Name",
			Handler:    _PostgresMigrate_DirectionType_Update_Name_Handler,
		},
		{
			MethodName: "DirectionType_ReadFromCache",
			Handler:    _PostgresMigrate_DirectionType_ReadFromCache_Handler,
		},
		{
			MethodName: "DirectionType_UpdateManyFields",
			Handler:    _PostgresMigrate_DirectionType_UpdateManyFields_Handler,
		},
		{
			MethodName: "DirectionType_ReadObject",
			Handler:    _PostgresMigrate_DirectionType_ReadObject_Handler,
		},
		{
			MethodName: "DocumentLinkType_Read",
			Handler:    _PostgresMigrate_DocumentLinkType_Read_Handler,
		},
		{
			MethodName: "DocumentLinkType_Create",
			Handler:    _PostgresMigrate_DocumentLinkType_Create_Handler,
		},
		{
			MethodName: "DocumentLinkType_Update",
			Handler:    _PostgresMigrate_DocumentLinkType_Update_Handler,
		},
		{
			MethodName: "DocumentLinkType_Save",
			Handler:    _PostgresMigrate_DocumentLinkType_Save_Handler,
		},
		{
			MethodName: "DocumentLinkType_Delete",
			Handler:    _PostgresMigrate_DocumentLinkType_Delete_Handler,
		},
		{
			MethodName: "DocumentLinkType_Restore",
			Handler:    _PostgresMigrate_DocumentLinkType_Restore_Handler,
		},
		{
			MethodName: "DocumentLinkType_Update_Code",
			Handler:    _PostgresMigrate_DocumentLinkType_Update_Code_Handler,
		},
		{
			MethodName: "DocumentLinkType_Update_Description",
			Handler:    _PostgresMigrate_DocumentLinkType_Update_Description_Handler,
		},
		{
			MethodName: "DocumentLinkType_Update_Name",
			Handler:    _PostgresMigrate_DocumentLinkType_Update_Name_Handler,
		},
		{
			MethodName: "DocumentLinkType_ReadFromCache",
			Handler:    _PostgresMigrate_DocumentLinkType_ReadFromCache_Handler,
		},
		{
			MethodName: "DocumentLinkType_UpdateManyFields",
			Handler:    _PostgresMigrate_DocumentLinkType_UpdateManyFields_Handler,
		},
		{
			MethodName: "DocumentLinkType_ReadObject",
			Handler:    _PostgresMigrate_DocumentLinkType_ReadObject_Handler,
		},
		{
			MethodName: "DocumentLink_Read",
			Handler:    _PostgresMigrate_DocumentLink_Read_Handler,
		},
		{
			MethodName: "DocumentLink_Create",
			Handler:    _PostgresMigrate_DocumentLink_Create_Handler,
		},
		{
			MethodName: "DocumentLink_Update",
			Handler:    _PostgresMigrate_DocumentLink_Update_Handler,
		},
		{
			MethodName: "DocumentLink_Save",
			Handler:    _PostgresMigrate_DocumentLink_Save_Handler,
		},
		{
			MethodName: "DocumentLink_FindByExtID",
			Handler:    _PostgresMigrate_DocumentLink_FindByExtID_Handler,
		},
		{
			MethodName: "DocumentLink_Delete",
			Handler:    _PostgresMigrate_DocumentLink_Delete_Handler,
		},
		{
			MethodName: "DocumentLink_Restore",
			Handler:    _PostgresMigrate_DocumentLink_Restore_Handler,
		},
		{
			MethodName: "DocumentLink_Update_ConnectionID",
			Handler:    _PostgresMigrate_DocumentLink_Update_ConnectionID_Handler,
		},
		{
			MethodName: "DocumentLink_Update_ContractID",
			Handler:    _PostgresMigrate_DocumentLink_Update_ContractID_Handler,
		},
		{
			MethodName: "DocumentLink_Update_CorrectionSum",
			Handler:    _PostgresMigrate_DocumentLink_Update_CorrectionSum_Handler,
		},
		{
			MethodName: "DocumentLink_Update_Document1ID",
			Handler:    _PostgresMigrate_DocumentLink_Update_Document1ID_Handler,
		},
		{
			MethodName: "DocumentLink_Update_Document2ID",
			Handler:    _PostgresMigrate_DocumentLink_Update_Document2ID_Handler,
		},
		{
			MethodName: "DocumentLink_Update_LinkTypeID",
			Handler:    _PostgresMigrate_DocumentLink_Update_LinkTypeID_Handler,
		},
		{
			MethodName: "DocumentLink_Update_DateFrom",
			Handler:    _PostgresMigrate_DocumentLink_Update_DateFrom_Handler,
		},
		{
			MethodName: "DocumentLink_ReadFromCache",
			Handler:    _PostgresMigrate_DocumentLink_ReadFromCache_Handler,
		},
		{
			MethodName: "DocumentLink_UpdateManyFields",
			Handler:    _PostgresMigrate_DocumentLink_UpdateManyFields_Handler,
		},
		{
			MethodName: "DocumentLink_ReadObject",
			Handler:    _PostgresMigrate_DocumentLink_ReadObject_Handler,
		},
		{
			MethodName: "DocumentLinksRapira_Read",
			Handler:    _PostgresMigrate_DocumentLinksRapira_Read_Handler,
		},
		{
			MethodName: "DocumentLinksRapira_Create",
			Handler:    _PostgresMigrate_DocumentLinksRapira_Create_Handler,
		},
		{
			MethodName: "DocumentLinksRapira_Update",
			Handler:    _PostgresMigrate_DocumentLinksRapira_Update_Handler,
		},
		{
			MethodName: "DocumentLinksRapira_Save",
			Handler:    _PostgresMigrate_DocumentLinksRapira_Save_Handler,
		},
		{
			MethodName: "DocumentLinksRapira_Delete",
			Handler:    _PostgresMigrate_DocumentLinksRapira_Delete_Handler,
		},
		{
			MethodName: "DocumentLinksRapira_Restore",
			Handler:    _PostgresMigrate_DocumentLinksRapira_Restore_Handler,
		},
		{
			MethodName: "DocumentLinksRapira_UpdateManyFields",
			Handler:    _PostgresMigrate_DocumentLinksRapira_UpdateManyFields_Handler,
		},
		{
			MethodName: "DocumentLinksRapira_Update_ConnectionID",
			Handler:    _PostgresMigrate_DocumentLinksRapira_Update_ConnectionID_Handler,
		},
		{
			MethodName: "DocumentLinksRapira_Update_ContractID",
			Handler:    _PostgresMigrate_DocumentLinksRapira_Update_ContractID_Handler,
		},
		{
			MethodName: "DocumentLinksRapira_Update_CorrectionSum",
			Handler:    _PostgresMigrate_DocumentLinksRapira_Update_CorrectionSum_Handler,
		},
		{
			MethodName: "DocumentLinksRapira_Update_DateFrom",
			Handler:    _PostgresMigrate_DocumentLinksRapira_Update_DateFrom_Handler,
		},
		{
			MethodName: "DocumentLinksRapira_Update_Document1ID",
			Handler:    _PostgresMigrate_DocumentLinksRapira_Update_Document1ID_Handler,
		},
		{
			MethodName: "DocumentLinksRapira_Update_Document2ID",
			Handler:    _PostgresMigrate_DocumentLinksRapira_Update_Document2ID_Handler,
		},
		{
			MethodName: "DocumentLinksRapira_Update_LinkTypeID",
			Handler:    _PostgresMigrate_DocumentLinksRapira_Update_LinkTypeID_Handler,
		},
		{
			MethodName: "DocumentLinksRapira_ReadFromCache",
			Handler:    _PostgresMigrate_DocumentLinksRapira_ReadFromCache_Handler,
		},
		{
			MethodName: "DocumentLinksRapira_ReadObject",
			Handler:    _PostgresMigrate_DocumentLinksRapira_ReadObject_Handler,
		},
		{
			MethodName: "DocumentLinksRapira_Update_ModifiedAtStack",
			Handler:    _PostgresMigrate_DocumentLinksRapira_Update_ModifiedAtStack_Handler,
		},
		{
			MethodName: "DocumentLinksRapira_Update_CreatedAtStack",
			Handler:    _PostgresMigrate_DocumentLinksRapira_Update_CreatedAtStack_Handler,
		},
		{
			MethodName: "DocumentLinksRapira_FindByExtID",
			Handler:    _PostgresMigrate_DocumentLinksRapira_FindByExtID_Handler,
		},
		{
			MethodName: "DocumentRequired_Read",
			Handler:    _PostgresMigrate_DocumentRequired_Read_Handler,
		},
		{
			MethodName: "DocumentRequired_Create",
			Handler:    _PostgresMigrate_DocumentRequired_Create_Handler,
		},
		{
			MethodName: "DocumentRequired_Update",
			Handler:    _PostgresMigrate_DocumentRequired_Update_Handler,
		},
		{
			MethodName: "DocumentRequired_Save",
			Handler:    _PostgresMigrate_DocumentRequired_Save_Handler,
		},
		{
			MethodName: "DocumentRequired_Delete",
			Handler:    _PostgresMigrate_DocumentRequired_Delete_Handler,
		},
		{
			MethodName: "DocumentRequired_Restore",
			Handler:    _PostgresMigrate_DocumentRequired_Restore_Handler,
		},
		{
			MethodName: "DocumentRequired_UpdateManyFields",
			Handler:    _PostgresMigrate_DocumentRequired_UpdateManyFields_Handler,
		},
		{
			MethodName: "DocumentRequired_Update_Code",
			Handler:    _PostgresMigrate_DocumentRequired_Update_Code_Handler,
		},
		{
			MethodName: "DocumentRequired_Update_Name",
			Handler:    _PostgresMigrate_DocumentRequired_Update_Name_Handler,
		},
		{
			MethodName: "DocumentRequired_ReadFromCache",
			Handler:    _PostgresMigrate_DocumentRequired_ReadFromCache_Handler,
		},
		{
			MethodName: "DocumentRequired_ReadObject",
			Handler:    _PostgresMigrate_DocumentRequired_ReadObject_Handler,
		},
		{
			MethodName: "DocumentReturnReason_Read",
			Handler:    _PostgresMigrate_DocumentReturnReason_Read_Handler,
		},
		{
			MethodName: "DocumentReturnReason_Create",
			Handler:    _PostgresMigrate_DocumentReturnReason_Create_Handler,
		},
		{
			MethodName: "DocumentReturnReason_Update",
			Handler:    _PostgresMigrate_DocumentReturnReason_Update_Handler,
		},
		{
			MethodName: "DocumentReturnReason_Save",
			Handler:    _PostgresMigrate_DocumentReturnReason_Save_Handler,
		},
		{
			MethodName: "DocumentReturnReason_Delete",
			Handler:    _PostgresMigrate_DocumentReturnReason_Delete_Handler,
		},
		{
			MethodName: "DocumentReturnReason_Restore",
			Handler:    _PostgresMigrate_DocumentReturnReason_Restore_Handler,
		},
		{
			MethodName: "DocumentReturnReason_UpdateManyFields",
			Handler:    _PostgresMigrate_DocumentReturnReason_UpdateManyFields_Handler,
		},
		{
			MethodName: "DocumentReturnReason_Update_Description",
			Handler:    _PostgresMigrate_DocumentReturnReason_Update_Description_Handler,
		},
		{
			MethodName: "DocumentReturnReason_Update_Name",
			Handler:    _PostgresMigrate_DocumentReturnReason_Update_Name_Handler,
		},
		{
			MethodName: "DocumentReturnReason_ReadFromCache",
			Handler:    _PostgresMigrate_DocumentReturnReason_ReadFromCache_Handler,
		},
		{
			MethodName: "DocumentReturnReason_ReadObject",
			Handler:    _PostgresMigrate_DocumentReturnReason_ReadObject_Handler,
		},
		{
			MethodName: "DocumentStatus_Read",
			Handler:    _PostgresMigrate_DocumentStatus_Read_Handler,
		},
		{
			MethodName: "DocumentStatus_Create",
			Handler:    _PostgresMigrate_DocumentStatus_Create_Handler,
		},
		{
			MethodName: "DocumentStatus_Update",
			Handler:    _PostgresMigrate_DocumentStatus_Update_Handler,
		},
		{
			MethodName: "DocumentStatus_Save",
			Handler:    _PostgresMigrate_DocumentStatus_Save_Handler,
		},
		{
			MethodName: "DocumentStatus_Delete",
			Handler:    _PostgresMigrate_DocumentStatus_Delete_Handler,
		},
		{
			MethodName: "DocumentStatus_Restore",
			Handler:    _PostgresMigrate_DocumentStatus_Restore_Handler,
		},
		{
			MethodName: "DocumentStatus_UpdateManyFields",
			Handler:    _PostgresMigrate_DocumentStatus_UpdateManyFields_Handler,
		},
		{
			MethodName: "DocumentStatus_Update_Code",
			Handler:    _PostgresMigrate_DocumentStatus_Update_Code_Handler,
		},
		{
			MethodName: "DocumentStatus_Update_Name",
			Handler:    _PostgresMigrate_DocumentStatus_Update_Name_Handler,
		},
		{
			MethodName: "DocumentStatus_ReadFromCache",
			Handler:    _PostgresMigrate_DocumentStatus_ReadFromCache_Handler,
		},
		{
			MethodName: "DocumentStatus_ReadObject",
			Handler:    _PostgresMigrate_DocumentStatus_ReadObject_Handler,
		},
		{
			MethodName: "DocumentType_Read",
			Handler:    _PostgresMigrate_DocumentType_Read_Handler,
		},
		{
			MethodName: "DocumentType_Create",
			Handler:    _PostgresMigrate_DocumentType_Create_Handler,
		},
		{
			MethodName: "DocumentType_Update",
			Handler:    _PostgresMigrate_DocumentType_Update_Handler,
		},
		{
			MethodName: "DocumentType_Save",
			Handler:    _PostgresMigrate_DocumentType_Save_Handler,
		},
		{
			MethodName: "DocumentType_FindByExtID",
			Handler:    _PostgresMigrate_DocumentType_FindByExtID_Handler,
		},
		{
			MethodName: "DocumentType_Delete",
			Handler:    _PostgresMigrate_DocumentType_Delete_Handler,
		},
		{
			MethodName: "DocumentType_Restore",
			Handler:    _PostgresMigrate_DocumentType_Restore_Handler,
		},
		{
			MethodName: "DocumentType_Update_ConnectionID",
			Handler:    _PostgresMigrate_DocumentType_Update_ConnectionID_Handler,
		},
		{
			MethodName: "DocumentType_Update_Description",
			Handler:    _PostgresMigrate_DocumentType_Update_Description_Handler,
		},
		{
			MethodName: "DocumentType_Update_IncomeExpense",
			Handler:    _PostgresMigrate_DocumentType_Update_IncomeExpense_Handler,
		},
		{
			MethodName: "DocumentType_Update_IsService",
			Handler:    _PostgresMigrate_DocumentType_Update_IsService_Handler,
		},
		{
			MethodName: "DocumentType_Update_IsVisible",
			Handler:    _PostgresMigrate_DocumentType_Update_IsVisible_Handler,
		},
		{
			MethodName: "DocumentType_Update_Name",
			Handler:    _PostgresMigrate_DocumentType_Update_Name_Handler,
		},
		{
			MethodName: "DocumentType_Update_ShortName",
			Handler:    _PostgresMigrate_DocumentType_Update_ShortName_Handler,
		},
		{
			MethodName: "DocumentType_Update_Type",
			Handler:    _PostgresMigrate_DocumentType_Update_Type_Handler,
		},
		{
			MethodName: "DocumentType_ReadFromCache",
			Handler:    _PostgresMigrate_DocumentType_ReadFromCache_Handler,
		},
		{
			MethodName: "DocumentType_UpdateManyFields",
			Handler:    _PostgresMigrate_DocumentType_UpdateManyFields_Handler,
		},
		{
			MethodName: "DocumentType_ReadObject",
			Handler:    _PostgresMigrate_DocumentType_ReadObject_Handler,
		},
		{
			MethodName: "Document_Read",
			Handler:    _PostgresMigrate_Document_Read_Handler,
		},
		{
			MethodName: "Document_Create",
			Handler:    _PostgresMigrate_Document_Create_Handler,
		},
		{
			MethodName: "Document_Update",
			Handler:    _PostgresMigrate_Document_Update_Handler,
		},
		{
			MethodName: "Document_Save",
			Handler:    _PostgresMigrate_Document_Save_Handler,
		},
		{
			MethodName: "Document_FindByExtID",
			Handler:    _PostgresMigrate_Document_FindByExtID_Handler,
		},
		{
			MethodName: "Document_Delete",
			Handler:    _PostgresMigrate_Document_Delete_Handler,
		},
		{
			MethodName: "Document_Restore",
			Handler:    _PostgresMigrate_Document_Restore_Handler,
		},
		{
			MethodName: "Document_Update_Analytics",
			Handler:    _PostgresMigrate_Document_Update_Analytics_Handler,
		},
		{
			MethodName: "Document_Update_Balance",
			Handler:    _PostgresMigrate_Document_Update_Balance_Handler,
		},
		{
			MethodName: "Document_Update_BillKindID",
			Handler:    _PostgresMigrate_Document_Update_BillKindID_Handler,
		},
		{
			MethodName: "Document_Update_BillingMonth",
			Handler:    _PostgresMigrate_Document_Update_BillingMonth_Handler,
		},
		{
			MethodName: "Document_Update_ConnectionID",
			Handler:    _PostgresMigrate_Document_Update_ConnectionID_Handler,
		},
		{
			MethodName: "Document_Update_ContractID",
			Handler:    _PostgresMigrate_Document_Update_ContractID_Handler,
		},
		{
			MethodName: "Document_Update_Count",
			Handler:    _PostgresMigrate_Document_Update_Count_Handler,
		},
		{
			MethodName: "Document_Update_DebtSum",
			Handler:    _PostgresMigrate_Document_Update_DebtSum_Handler,
		},
		{
			MethodName: "Document_Update_DocumentAt",
			Handler:    _PostgresMigrate_Document_Update_DocumentAt_Handler,
		},
		{
			MethodName: "Document_Update_DocumentSum",
			Handler:    _PostgresMigrate_Document_Update_DocumentSum_Handler,
		},
		{
			MethodName: "Document_Update_DocumentTypeID",
			Handler:    _PostgresMigrate_Document_Update_DocumentTypeID_Handler,
		},
		{
			MethodName: "Document_Update_Note",
			Handler:    _PostgresMigrate_Document_Update_Note_Handler,
		},
		{
			MethodName: "Document_Update_Number",
			Handler:    _PostgresMigrate_Document_Update_Number_Handler,
		},
		{
			MethodName: "Document_Update_NumberFull",
			Handler:    _PostgresMigrate_Document_Update_NumberFull_Handler,
		},
		{
			MethodName: "Document_Update_PayDeadline",
			Handler:    _PostgresMigrate_Document_Update_PayDeadline_Handler,
		},
		{
			MethodName: "Document_Update_PayFrom",
			Handler:    _PostgresMigrate_Document_Update_PayFrom_Handler,
		},
		{
			MethodName: "Document_Update_PayTo",
			Handler:    _PostgresMigrate_Document_Update_PayTo_Handler,
		},
		{
			MethodName: "Document_Update_Payment",
			Handler:    _PostgresMigrate_Document_Update_Payment_Handler,
		},
		{
			MethodName: "Document_Update_Reason",
			Handler:    _PostgresMigrate_Document_Update_Reason_Handler,
		},
		{
			MethodName: "Document_Update_ReversalID",
			Handler:    _PostgresMigrate_Document_Update_ReversalID_Handler,
		},
		{
			MethodName: "Document_ReadFromCache",
			Handler:    _PostgresMigrate_Document_ReadFromCache_Handler,
		},
		{
			MethodName: "Document_UpdateManyFields",
			Handler:    _PostgresMigrate_Document_UpdateManyFields_Handler,
		},
		{
			MethodName: "Document_ReadObject",
			Handler:    _PostgresMigrate_Document_ReadObject_Handler,
		},
		{
			MethodName: "Employee_Read",
			Handler:    _PostgresMigrate_Employee_Read_Handler,
		},
		{
			MethodName: "Employee_Create",
			Handler:    _PostgresMigrate_Employee_Create_Handler,
		},
		{
			MethodName: "Employee_Update",
			Handler:    _PostgresMigrate_Employee_Update_Handler,
		},
		{
			MethodName: "Employee_Save",
			Handler:    _PostgresMigrate_Employee_Save_Handler,
		},
		{
			MethodName: "Employee_Delete",
			Handler:    _PostgresMigrate_Employee_Delete_Handler,
		},
		{
			MethodName: "Employee_Restore",
			Handler:    _PostgresMigrate_Employee_Restore_Handler,
		},
		{
			MethodName: "Employee_FindByExtId",
			Handler:    _PostgresMigrate_Employee_FindByExtId_Handler,
		},
		{
			MethodName: "Employee_FindByLogin",
			Handler:    _PostgresMigrate_Employee_FindByLogin_Handler,
		},
		{
			MethodName: "Employee_FindByEMail",
			Handler:    _PostgresMigrate_Employee_FindByEMail_Handler,
		},
		{
			MethodName: "Employee_FindByFIO",
			Handler:    _PostgresMigrate_Employee_FindByFIO_Handler,
		},
		{
			MethodName: "Employee_FindByExtID",
			Handler:    _PostgresMigrate_Employee_FindByExtID_Handler,
		},
		{
			MethodName: "Employee_Update_BranchID",
			Handler:    _PostgresMigrate_Employee_Update_BranchID_Handler,
		},
		{
			MethodName: "Employee_Update_ConnectionID",
			Handler:    _PostgresMigrate_Employee_Update_ConnectionID_Handler,
		},
		{
			MethodName: "Employee_Update_Description",
			Handler:    _PostgresMigrate_Employee_Update_Description_Handler,
		},
		{
			MethodName: "Employee_Update_Email",
			Handler:    _PostgresMigrate_Employee_Update_Email_Handler,
		},
		{
			MethodName: "Employee_Update_IsActive",
			Handler:    _PostgresMigrate_Employee_Update_IsActive_Handler,
		},
		{
			MethodName: "Employee_Update_Login",
			Handler:    _PostgresMigrate_Employee_Update_Login_Handler,
		},
		{
			MethodName: "Employee_Update_Name",
			Handler:    _PostgresMigrate_Employee_Update_Name_Handler,
		},
		{
			MethodName: "Employee_Update_ParentName",
			Handler:    _PostgresMigrate_Employee_Update_ParentName_Handler,
		},
		{
			MethodName: "Employee_Update_Phone",
			Handler:    _PostgresMigrate_Employee_Update_Phone_Handler,
		},
		{
			MethodName: "Employee_Update_Photo",
			Handler:    _PostgresMigrate_Employee_Update_Photo_Handler,
		},
		{
			MethodName: "Employee_Update_Position",
			Handler:    _PostgresMigrate_Employee_Update_Position_Handler,
		},
		{
			MethodName: "Employee_Update_SecondName",
			Handler:    _PostgresMigrate_Employee_Update_SecondName_Handler,
		},
		{
			MethodName: "Employee_Update_Tag",
			Handler:    _PostgresMigrate_Employee_Update_Tag_Handler,
		},
		{
			MethodName: "Employee_ReadFromCache",
			Handler:    _PostgresMigrate_Employee_ReadFromCache_Handler,
		},
		{
			MethodName: "Employee_UpdateManyFields",
			Handler:    _PostgresMigrate_Employee_UpdateManyFields_Handler,
		},
		{
			MethodName: "Employee_ReadObject",
			Handler:    _PostgresMigrate_Employee_ReadObject_Handler,
		},
		{
			MethodName: "EmployeesHashtag_Read",
			Handler:    _PostgresMigrate_EmployeesHashtag_Read_Handler,
		},
		{
			MethodName: "EmployeesHashtag_Create",
			Handler:    _PostgresMigrate_EmployeesHashtag_Create_Handler,
		},
		{
			MethodName: "EmployeesHashtag_Update",
			Handler:    _PostgresMigrate_EmployeesHashtag_Update_Handler,
		},
		{
			MethodName: "EmployeesHashtag_Save",
			Handler:    _PostgresMigrate_EmployeesHashtag_Save_Handler,
		},
		{
			MethodName: "EmployeesHashtag_Delete",
			Handler:    _PostgresMigrate_EmployeesHashtag_Delete_Handler,
		},
		{
			MethodName: "EmployeesHashtag_Restore",
			Handler:    _PostgresMigrate_EmployeesHashtag_Restore_Handler,
		},
		{
			MethodName: "EmployeesHashtag_UpdateManyFields",
			Handler:    _PostgresMigrate_EmployeesHashtag_UpdateManyFields_Handler,
		},
		{
			MethodName: "EmployeesHashtag_Update_EmployeeID",
			Handler:    _PostgresMigrate_EmployeesHashtag_Update_EmployeeID_Handler,
		},
		{
			MethodName: "EmployeesHashtag_Update_HashtagID",
			Handler:    _PostgresMigrate_EmployeesHashtag_Update_HashtagID_Handler,
		},
		{
			MethodName: "EmployeesHashtag_ReadFromCache",
			Handler:    _PostgresMigrate_EmployeesHashtag_ReadFromCache_Handler,
		},
		{
			MethodName: "EmployeesHashtag_FindMassBy_EmployeeID",
			Handler:    _PostgresMigrate_EmployeesHashtag_FindMassBy_EmployeeID_Handler,
		},
		{
			MethodName: "EmployeesHashtag_ReadObject",
			Handler:    _PostgresMigrate_EmployeesHashtag_ReadObject_Handler,
		},
		{
			MethodName: "EventType_Read",
			Handler:    _PostgresMigrate_EventType_Read_Handler,
		},
		{
			MethodName: "EventType_Create",
			Handler:    _PostgresMigrate_EventType_Create_Handler,
		},
		{
			MethodName: "EventType_Update",
			Handler:    _PostgresMigrate_EventType_Update_Handler,
		},
		{
			MethodName: "EventType_Save",
			Handler:    _PostgresMigrate_EventType_Save_Handler,
		},
		{
			MethodName: "EventType_Delete",
			Handler:    _PostgresMigrate_EventType_Delete_Handler,
		},
		{
			MethodName: "EventType_Restore",
			Handler:    _PostgresMigrate_EventType_Restore_Handler,
		},
		{
			MethodName: "EventType_Update_Code",
			Handler:    _PostgresMigrate_EventType_Update_Code_Handler,
		},
		{
			MethodName: "EventType_Update_Description",
			Handler:    _PostgresMigrate_EventType_Update_Description_Handler,
		},
		{
			MethodName: "EventType_Update_Name",
			Handler:    _PostgresMigrate_EventType_Update_Name_Handler,
		},
		{
			MethodName: "EventType_ReadFromCache",
			Handler:    _PostgresMigrate_EventType_ReadFromCache_Handler,
		},
		{
			MethodName: "EventType_UpdateManyFields",
			Handler:    _PostgresMigrate_EventType_UpdateManyFields_Handler,
		},
		{
			MethodName: "EventType_ReadObject",
			Handler:    _PostgresMigrate_EventType_ReadObject_Handler,
		},
		{
			MethodName: "Event_Read",
			Handler:    _PostgresMigrate_Event_Read_Handler,
		},
		{
			MethodName: "Event_Create",
			Handler:    _PostgresMigrate_Event_Create_Handler,
		},
		{
			MethodName: "Event_Update",
			Handler:    _PostgresMigrate_Event_Update_Handler,
		},
		{
			MethodName: "Event_Save",
			Handler:    _PostgresMigrate_Event_Save_Handler,
		},
		{
			MethodName: "Event_Delete",
			Handler:    _PostgresMigrate_Event_Delete_Handler,
		},
		{
			MethodName: "Event_Restore",
			Handler:    _PostgresMigrate_Event_Restore_Handler,
		},
		{
			MethodName: "Event_Update_ColorTypeID",
			Handler:    _PostgresMigrate_Event_Update_ColorTypeID_Handler,
		},
		{
			MethodName: "Event_Update_CreatedByID",
			Handler:    _PostgresMigrate_Event_Update_CreatedByID_Handler,
		},
		{
			MethodName: "Event_Update_DeletedByID",
			Handler:    _PostgresMigrate_Event_Update_DeletedByID_Handler,
		},
		{
			MethodName: "Event_Update_Description",
			Handler:    _PostgresMigrate_Event_Update_Description_Handler,
		},
		{
			MethodName: "Event_Update_EventTypeID",
			Handler:    _PostgresMigrate_Event_Update_EventTypeID_Handler,
		},
		{
			MethodName: "Event_Update_FinishAt",
			Handler:    _PostgresMigrate_Event_Update_FinishAt_Handler,
		},
		{
			MethodName: "Event_Update_IsAllDay",
			Handler:    _PostgresMigrate_Event_Update_IsAllDay_Handler,
		},
		{
			MethodName: "Event_Update_ModifiedByID",
			Handler:    _PostgresMigrate_Event_Update_ModifiedByID_Handler,
		},
		{
			MethodName: "Event_Update_Name",
			Handler:    _PostgresMigrate_Event_Update_Name_Handler,
		},
		{
			MethodName: "Event_Update_NotificationID",
			Handler:    _PostgresMigrate_Event_Update_NotificationID_Handler,
		},
		{
			MethodName: "Event_Update_PerformerID",
			Handler:    _PostgresMigrate_Event_Update_PerformerID_Handler,
		},
		{
			MethodName: "Event_Update_PriorityTypeID",
			Handler:    _PostgresMigrate_Event_Update_PriorityTypeID_Handler,
		},
		{
			MethodName: "Event_Update_RepeatTypeID",
			Handler:    _PostgresMigrate_Event_Update_RepeatTypeID_Handler,
		},
		{
			MethodName: "Event_Update_StartAt",
			Handler:    _PostgresMigrate_Event_Update_StartAt_Handler,
		},
		{
			MethodName: "Event_ReadFromCache",
			Handler:    _PostgresMigrate_Event_ReadFromCache_Handler,
		},
		{
			MethodName: "Event_UpdateManyFields",
			Handler:    _PostgresMigrate_Event_UpdateManyFields_Handler,
		},
		{
			MethodName: "Event_ReadObject",
			Handler:    _PostgresMigrate_Event_ReadObject_Handler,
		},
		{
			MethodName: "Facsimile_Read",
			Handler:    _PostgresMigrate_Facsimile_Read_Handler,
		},
		{
			MethodName: "Facsimile_Create",
			Handler:    _PostgresMigrate_Facsimile_Create_Handler,
		},
		{
			MethodName: "Facsimile_Update",
			Handler:    _PostgresMigrate_Facsimile_Update_Handler,
		},
		{
			MethodName: "Facsimile_Save",
			Handler:    _PostgresMigrate_Facsimile_Save_Handler,
		},
		{
			MethodName: "Facsimile_Delete",
			Handler:    _PostgresMigrate_Facsimile_Delete_Handler,
		},
		{
			MethodName: "Facsimile_Restore",
			Handler:    _PostgresMigrate_Facsimile_Restore_Handler,
		},
		{
			MethodName: "Facsimile_Update_Branch",
			Handler:    _PostgresMigrate_Facsimile_Update_Branch_Handler,
		},
		{
			MethodName: "Facsimile_Update_Contract",
			Handler:    _PostgresMigrate_Facsimile_Update_Contract_Handler,
		},
		{
			MethodName: "Facsimile_Update_Department",
			Handler:    _PostgresMigrate_Facsimile_Update_Department_Handler,
		},
		{
			MethodName: "Facsimile_Update_Post",
			Handler:    _PostgresMigrate_Facsimile_Update_Post_Handler,
		},
		{
			MethodName: "Facsimile_Update_Responsible",
			Handler:    _PostgresMigrate_Facsimile_Update_Responsible_Handler,
		},
		{
			MethodName: "Facsimile_ReadFromCache",
			Handler:    _PostgresMigrate_Facsimile_ReadFromCache_Handler,
		},
		{
			MethodName: "Facsimile_UpdateManyFields",
			Handler:    _PostgresMigrate_Facsimile_UpdateManyFields_Handler,
		},
		{
			MethodName: "Facsimile_ReadObject",
			Handler:    _PostgresMigrate_Facsimile_ReadObject_Handler,
		},
		{
			MethodName: "File_Read",
			Handler:    _PostgresMigrate_File_Read_Handler,
		},
		{
			MethodName: "File_Create",
			Handler:    _PostgresMigrate_File_Create_Handler,
		},
		{
			MethodName: "File_Update",
			Handler:    _PostgresMigrate_File_Update_Handler,
		},
		{
			MethodName: "File_Save",
			Handler:    _PostgresMigrate_File_Save_Handler,
		},
		{
			MethodName: "File_Delete",
			Handler:    _PostgresMigrate_File_Delete_Handler,
		},
		{
			MethodName: "File_Restore",
			Handler:    _PostgresMigrate_File_Restore_Handler,
		},
		{
			MethodName: "File_FindByFileID",
			Handler:    _PostgresMigrate_File_FindByFileID_Handler,
		},
		{
			MethodName: "File_FindByFullName",
			Handler:    _PostgresMigrate_File_FindByFullName_Handler,
		},
		{
			MethodName: "File_FindMassBy_TableNameID_TableRowID",
			Handler:    _PostgresMigrate_File_FindMassBy_TableNameID_TableRowID_Handler,
		},
		{
			MethodName: "File_FindMassBy_TableNameID_TableRowID_FileTypeID",
			Handler:    _PostgresMigrate_File_FindMassBy_TableNameID_TableRowID_FileTypeID_Handler,
		},
		{
			MethodName: "File_Update_BranchID",
			Handler:    _PostgresMigrate_File_Update_BranchID_Handler,
		},
		{
			MethodName: "File_Update_Description",
			Handler:    _PostgresMigrate_File_Update_Description_Handler,
		},
		{
			MethodName: "File_Update_EmployeeID",
			Handler:    _PostgresMigrate_File_Update_EmployeeID_Handler,
		},
		{
			MethodName: "File_Update_Extension",
			Handler:    _PostgresMigrate_File_Update_Extension_Handler,
		},
		{
			MethodName: "File_Update_FileID",
			Handler:    _PostgresMigrate_File_Update_FileID_Handler,
		},
		{
			MethodName: "File_Update_FileName",
			Handler:    _PostgresMigrate_File_Update_FileName_Handler,
		},
		{
			MethodName: "File_Update_FileTypeID",
			Handler:    _PostgresMigrate_File_Update_FileTypeID_Handler,
		},
		{
			MethodName: "File_Update_FullName",
			Handler:    _PostgresMigrate_File_Update_FullName_Handler,
		},
		{
			MethodName: "File_Update_Name",
			Handler:    _PostgresMigrate_File_Update_Name_Handler,
		},
		{
			MethodName: "File_Update_Size",
			Handler:    _PostgresMigrate_File_Update_Size_Handler,
		},
		{
			MethodName: "File_Update_TemplateID",
			Handler:    _PostgresMigrate_File_Update_TemplateID_Handler,
		},
		{
			MethodName: "File_Update_Version",
			Handler:    _PostgresMigrate_File_Update_Version_Handler,
		},
		{
			MethodName: "File_ReadFromCache",
			Handler:    _PostgresMigrate_File_ReadFromCache_Handler,
		},
		{
			MethodName: "File_UpdateManyFields",
			Handler:    _PostgresMigrate_File_UpdateManyFields_Handler,
		},
		{
			MethodName: "File_Save_SaveLink_SaveChangeItems",
			Handler:    _PostgresMigrate_File_Save_SaveLink_SaveChangeItems_Handler,
		},
		{
			MethodName: "File_SaveLinkDeleted_SaveChangeItems",
			Handler:    _PostgresMigrate_File_SaveLinkDeleted_SaveChangeItems_Handler,
		},
		{
			MethodName: "File_Update_TableNameID",
			Handler:    _PostgresMigrate_File_Update_TableNameID_Handler,
		},
		{
			MethodName: "File_Update_TableRowID",
			Handler:    _PostgresMigrate_File_Update_TableRowID_Handler,
		},
		{
			MethodName: "File_Update_BucketName",
			Handler:    _PostgresMigrate_File_Update_BucketName_Handler,
		},
		{
			MethodName: "File_ReadObject",
			Handler:    _PostgresMigrate_File_ReadObject_Handler,
		},
		{
			MethodName: "FileChange_Read",
			Handler:    _PostgresMigrate_FileChange_Read_Handler,
		},
		{
			MethodName: "FileChange_Create",
			Handler:    _PostgresMigrate_FileChange_Create_Handler,
		},
		{
			MethodName: "FileChange_Update",
			Handler:    _PostgresMigrate_FileChange_Update_Handler,
		},
		{
			MethodName: "FileChange_Save",
			Handler:    _PostgresMigrate_FileChange_Save_Handler,
		},
		{
			MethodName: "FileChange_Update_Description",
			Handler:    _PostgresMigrate_FileChange_Update_Description_Handler,
		},
		{
			MethodName: "FileChange_Update_EmployeeID",
			Handler:    _PostgresMigrate_FileChange_Update_EmployeeID_Handler,
		},
		{
			MethodName: "FileChange_Update_FileID",
			Handler:    _PostgresMigrate_FileChange_Update_FileID_Handler,
		},
		{
			MethodName: "FileChange_ReadFromCache",
			Handler:    _PostgresMigrate_FileChange_ReadFromCache_Handler,
		},
		{
			MethodName: "FileChange_UpdateManyFields",
			Handler:    _PostgresMigrate_FileChange_UpdateManyFields_Handler,
		},
		{
			MethodName: "FileChange_ReadObject",
			Handler:    _PostgresMigrate_FileChange_ReadObject_Handler,
		},
		{
			MethodName: "FileTemplate_Read",
			Handler:    _PostgresMigrate_FileTemplate_Read_Handler,
		},
		{
			MethodName: "FileTemplate_Create",
			Handler:    _PostgresMigrate_FileTemplate_Create_Handler,
		},
		{
			MethodName: "FileTemplate_Update",
			Handler:    _PostgresMigrate_FileTemplate_Update_Handler,
		},
		{
			MethodName: "FileTemplate_Save",
			Handler:    _PostgresMigrate_FileTemplate_Save_Handler,
		},
		{
			MethodName: "FileTemplate_Delete",
			Handler:    _PostgresMigrate_FileTemplate_Delete_Handler,
		},
		{
			MethodName: "FileTemplate_Restore",
			Handler:    _PostgresMigrate_FileTemplate_Restore_Handler,
		},
		{
			MethodName: "FileTemplate_Update_Description",
			Handler:    _PostgresMigrate_FileTemplate_Update_Description_Handler,
		},
		{
			MethodName: "FileTemplate_Update_FileID",
			Handler:    _PostgresMigrate_FileTemplate_Update_FileID_Handler,
		},
		{
			MethodName: "FileTemplate_Update_Name",
			Handler:    _PostgresMigrate_FileTemplate_Update_Name_Handler,
		},
		{
			MethodName: "FileTemplate_ReadFromCache",
			Handler:    _PostgresMigrate_FileTemplate_ReadFromCache_Handler,
		},
		{
			MethodName: "FileTemplate_UpdateManyFields",
			Handler:    _PostgresMigrate_FileTemplate_UpdateManyFields_Handler,
		},
		{
			MethodName: "FileTemplate_ReadObject",
			Handler:    _PostgresMigrate_FileTemplate_ReadObject_Handler,
		},
		{
			MethodName: "FilesClaim_Read",
			Handler:    _PostgresMigrate_FilesClaim_Read_Handler,
		},
		{
			MethodName: "FilesClaim_Create",
			Handler:    _PostgresMigrate_FilesClaim_Create_Handler,
		},
		{
			MethodName: "FilesClaim_Update",
			Handler:    _PostgresMigrate_FilesClaim_Update_Handler,
		},
		{
			MethodName: "FilesClaim_Save",
			Handler:    _PostgresMigrate_FilesClaim_Save_Handler,
		},
		{
			MethodName: "FilesClaim_Delete",
			Handler:    _PostgresMigrate_FilesClaim_Delete_Handler,
		},
		{
			MethodName: "FilesClaim_Restore",
			Handler:    _PostgresMigrate_FilesClaim_Restore_Handler,
		},
		{
			MethodName: "FilesClaim_UpdateManyFields",
			Handler:    _PostgresMigrate_FilesClaim_UpdateManyFields_Handler,
		},
		{
			MethodName: "FilesClaim_Update_CheckOfClaim",
			Handler:    _PostgresMigrate_FilesClaim_Update_CheckOfClaim_Handler,
		},
		{
			MethodName: "FilesClaim_Update_Code",
			Handler:    _PostgresMigrate_FilesClaim_Update_Code_Handler,
		},
		{
			MethodName: "FilesClaim_Update_ConsumerSignature",
			Handler:    _PostgresMigrate_FilesClaim_Update_ConsumerSignature_Handler,
		},
		{
			MethodName: "FilesClaim_Update_DateOfDocument",
			Handler:    _PostgresMigrate_FilesClaim_Update_DateOfDocument_Handler,
		},
		{
			MethodName: "FilesClaim_Update_DateOfDownload",
			Handler:    _PostgresMigrate_FilesClaim_Update_DateOfDownload_Handler,
		},
		{
			MethodName: "FilesClaim_Update_FilePath",
			Handler:    _PostgresMigrate_FilesClaim_Update_FilePath_Handler,
		},
		{
			MethodName: "FilesClaim_Update_Invoice",
			Handler:    _PostgresMigrate_FilesClaim_Update_Invoice_Handler,
		},
		{
			MethodName: "FilesClaim_Update_Name",
			Handler:    _PostgresMigrate_FilesClaim_Update_Name_Handler,
		},
		{
			MethodName: "FilesClaim_Update_Number",
			Handler:    _PostgresMigrate_FilesClaim_Update_Number_Handler,
		},
		{
			MethodName: "FilesClaim_Update_OriginalDocument",
			Handler:    _PostgresMigrate_FilesClaim_Update_OriginalDocument_Handler,
		},
		{
			MethodName: "FilesClaim_Update_Period",
			Handler:    _PostgresMigrate_FilesClaim_Update_Period_Handler,
		},
		{
			MethodName: "FilesClaim_Update_PersonDownloadID",
			Handler:    _PostgresMigrate_FilesClaim_Update_PersonDownloadID_Handler,
		},
		{
			MethodName: "FilesClaim_Update_SignOfObligation",
			Handler:    _PostgresMigrate_FilesClaim_Update_SignOfObligation_Handler,
		},
		{
			MethodName: "FilesClaim_Update_StatusOfDocument",
			Handler:    _PostgresMigrate_FilesClaim_Update_StatusOfDocument_Handler,
		},
		{
			MethodName: "FilesClaim_ReadFromCache",
			Handler:    _PostgresMigrate_FilesClaim_ReadFromCache_Handler,
		},
		{
			MethodName: "FileType_Read",
			Handler:    _PostgresMigrate_FileType_Read_Handler,
		},
		{
			MethodName: "FileType_Create",
			Handler:    _PostgresMigrate_FileType_Create_Handler,
		},
		{
			MethodName: "FileType_Update",
			Handler:    _PostgresMigrate_FileType_Update_Handler,
		},
		{
			MethodName: "FileType_Save",
			Handler:    _PostgresMigrate_FileType_Save_Handler,
		},
		{
			MethodName: "FileType_Delete",
			Handler:    _PostgresMigrate_FileType_Delete_Handler,
		},
		{
			MethodName: "FileType_Restore",
			Handler:    _PostgresMigrate_FileType_Restore_Handler,
		},
		{
			MethodName: "FileType_Update_Code",
			Handler:    _PostgresMigrate_FileType_Update_Code_Handler,
		},
		{
			MethodName: "FileType_Update_Description",
			Handler:    _PostgresMigrate_FileType_Update_Description_Handler,
		},
		{
			MethodName: "FileType_Update_Name",
			Handler:    _PostgresMigrate_FileType_Update_Name_Handler,
		},
		{
			MethodName: "FileType_ReadFromCache",
			Handler:    _PostgresMigrate_FileType_ReadFromCache_Handler,
		},
		{
			MethodName: "FileType_UpdateManyFields",
			Handler:    _PostgresMigrate_FileType_UpdateManyFields_Handler,
		},
		{
			MethodName: "FileType_Update_CanBeSynced",
			Handler:    _PostgresMigrate_FileType_Update_CanBeSynced_Handler,
		},
		{
			MethodName: "FileType_Update_MimeType",
			Handler:    _PostgresMigrate_FileType_Update_MimeType_Handler,
		},
		{
			MethodName: "FileType_Update_RequireUpload",
			Handler:    _PostgresMigrate_FileType_Update_RequireUpload_Handler,
		},
		{
			MethodName: "FileType_ReadAll",
			Handler:    _PostgresMigrate_FileType_ReadAll_Handler,
		},
		{
			MethodName: "FileType_Update_TableNameID",
			Handler:    _PostgresMigrate_FileType_Update_TableNameID_Handler,
		},
		{
			MethodName: "FileType_FindBy_Code",
			Handler:    _PostgresMigrate_FileType_FindBy_Code_Handler,
		},
		{
			MethodName: "FileType_Update_ExistsBankMark",
			Handler:    _PostgresMigrate_FileType_Update_ExistsBankMark_Handler,
		},
		{
			MethodName: "FileType_Update_ExistsSignature",
			Handler:    _PostgresMigrate_FileType_Update_ExistsSignature_Handler,
		},
		{
			MethodName: "FileType_Update_FilenameTemplate",
			Handler:    _PostgresMigrate_FileType_Update_FilenameTemplate_Handler,
		},
		{
			MethodName: "FileType_Update_MultipleLoad",
			Handler:    _PostgresMigrate_FileType_Update_MultipleLoad_Handler,
		},
		{
			MethodName: "FileType_ReadObject",
			Handler:    _PostgresMigrate_FileType_ReadObject_Handler,
		},
		{
			MethodName: "GenderType_Read",
			Handler:    _PostgresMigrate_GenderType_Read_Handler,
		},
		{
			MethodName: "GenderType_Create",
			Handler:    _PostgresMigrate_GenderType_Create_Handler,
		},
		{
			MethodName: "GenderType_Update",
			Handler:    _PostgresMigrate_GenderType_Update_Handler,
		},
		{
			MethodName: "GenderType_Save",
			Handler:    _PostgresMigrate_GenderType_Save_Handler,
		},
		{
			MethodName: "GenderType_Delete",
			Handler:    _PostgresMigrate_GenderType_Delete_Handler,
		},
		{
			MethodName: "GenderType_Restore",
			Handler:    _PostgresMigrate_GenderType_Restore_Handler,
		},
		{
			MethodName: "GenderType_Update_Name",
			Handler:    _PostgresMigrate_GenderType_Update_Name_Handler,
		},
		{
			MethodName: "GenderType_ReadFromCache",
			Handler:    _PostgresMigrate_GenderType_ReadFromCache_Handler,
		},
		{
			MethodName: "GenderType_UpdateManyFields",
			Handler:    _PostgresMigrate_GenderType_UpdateManyFields_Handler,
		},
		{
			MethodName: "GenderType_ReadObject",
			Handler:    _PostgresMigrate_GenderType_ReadObject_Handler,
		},
		{
			MethodName: "Hashtag_Read",
			Handler:    _PostgresMigrate_Hashtag_Read_Handler,
		},
		{
			MethodName: "Hashtag_Create",
			Handler:    _PostgresMigrate_Hashtag_Create_Handler,
		},
		{
			MethodName: "Hashtag_Update",
			Handler:    _PostgresMigrate_Hashtag_Update_Handler,
		},
		{
			MethodName: "Hashtag_Save",
			Handler:    _PostgresMigrate_Hashtag_Save_Handler,
		},
		{
			MethodName: "Hashtag_Delete",
			Handler:    _PostgresMigrate_Hashtag_Delete_Handler,
		},
		{
			MethodName: "Hashtag_Restore",
			Handler:    _PostgresMigrate_Hashtag_Restore_Handler,
		},
		{
			MethodName: "Hashtag_Update_Description",
			Handler:    _PostgresMigrate_Hashtag_Update_Description_Handler,
		},
		{
			MethodName: "Hashtag_Update_Name",
			Handler:    _PostgresMigrate_Hashtag_Update_Name_Handler,
		},
		{
			MethodName: "Hashtag_ReadFromCache",
			Handler:    _PostgresMigrate_Hashtag_ReadFromCache_Handler,
		},
		{
			MethodName: "Hashtag_UpdateManyFields",
			Handler:    _PostgresMigrate_Hashtag_UpdateManyFields_Handler,
		},
		{
			MethodName: "Hashtag_ReadAll",
			Handler:    _PostgresMigrate_Hashtag_ReadAll_Handler,
		},
		{
			MethodName: "Hashtag_ReadObject",
			Handler:    _PostgresMigrate_Hashtag_ReadObject_Handler,
		},
		{
			MethodName: "Individual_Read",
			Handler:    _PostgresMigrate_Individual_Read_Handler,
		},
		{
			MethodName: "Individual_Create",
			Handler:    _PostgresMigrate_Individual_Create_Handler,
		},
		{
			MethodName: "Individual_Update",
			Handler:    _PostgresMigrate_Individual_Update_Handler,
		},
		{
			MethodName: "Individual_Save",
			Handler:    _PostgresMigrate_Individual_Save_Handler,
		},
		{
			MethodName: "Individual_FindByExtID",
			Handler:    _PostgresMigrate_Individual_FindByExtID_Handler,
		},
		{
			MethodName: "Individual_Delete",
			Handler:    _PostgresMigrate_Individual_Delete_Handler,
		},
		{
			MethodName: "Individual_Restore",
			Handler:    _PostgresMigrate_Individual_Restore_Handler,
		},
		{
			MethodName: "Individual_Update_BirthDate",
			Handler:    _PostgresMigrate_Individual_Update_BirthDate_Handler,
		},
		{
			MethodName: "Individual_Update_ConnectionID",
			Handler:    _PostgresMigrate_Individual_Update_ConnectionID_Handler,
		},
		{
			MethodName: "Individual_Update_DeathDate",
			Handler:    _PostgresMigrate_Individual_Update_DeathDate_Handler,
		},
		{
			MethodName: "Individual_Update_Description",
			Handler:    _PostgresMigrate_Individual_Update_Description_Handler,
		},
		{
			MethodName: "Individual_Update_Email",
			Handler:    _PostgresMigrate_Individual_Update_Email_Handler,
		},
		{
			MethodName: "Individual_Update_GenderID",
			Handler:    _PostgresMigrate_Individual_Update_GenderID_Handler,
		},
		{
			MethodName: "Individual_Update_INN",
			Handler:    _PostgresMigrate_Individual_Update_INN_Handler,
		},
		{
			MethodName: "Individual_Update_Name",
			Handler:    _PostgresMigrate_Individual_Update_Name_Handler,
		},
		{
			MethodName: "Individual_Update_ParentName",
			Handler:    _PostgresMigrate_Individual_Update_ParentName_Handler,
		},
		{
			MethodName: "Individual_Update_Phone",
			Handler:    _PostgresMigrate_Individual_Update_Phone_Handler,
		},
		{
			MethodName: "Individual_Update_SecondName",
			Handler:    _PostgresMigrate_Individual_Update_SecondName_Handler,
		},
		{
			MethodName: "Individual_Update_Snils",
			Handler:    _PostgresMigrate_Individual_Update_Snils_Handler,
		},
		{
			MethodName: "Individual_ReadFromCache",
			Handler:    _PostgresMigrate_Individual_ReadFromCache_Handler,
		},
		{
			MethodName: "Individual_UpdateManyFields",
			Handler:    _PostgresMigrate_Individual_UpdateManyFields_Handler,
		},
		{
			MethodName: "Individual_ReadObject",
			Handler:    _PostgresMigrate_Individual_ReadObject_Handler,
		},
		{
			MethodName: "InnerNotifyMessage_Read",
			Handler:    _PostgresMigrate_InnerNotifyMessage_Read_Handler,
		},
		{
			MethodName: "InnerNotifyMessage_Create",
			Handler:    _PostgresMigrate_InnerNotifyMessage_Create_Handler,
		},
		{
			MethodName: "InnerNotifyMessage_Update",
			Handler:    _PostgresMigrate_InnerNotifyMessage_Update_Handler,
		},
		{
			MethodName: "InnerNotifyMessage_Save",
			Handler:    _PostgresMigrate_InnerNotifyMessage_Save_Handler,
		},
		{
			MethodName: "InnerNotifyMessage_Delete",
			Handler:    _PostgresMigrate_InnerNotifyMessage_Delete_Handler,
		},
		{
			MethodName: "InnerNotifyMessage_Restore",
			Handler:    _PostgresMigrate_InnerNotifyMessage_Restore_Handler,
		},
		{
			MethodName: "InnerNotifyMessage_UpdateManyFields",
			Handler:    _PostgresMigrate_InnerNotifyMessage_UpdateManyFields_Handler,
		},
		{
			MethodName: "InnerNotifyMessage_Update_Body",
			Handler:    _PostgresMigrate_InnerNotifyMessage_Update_Body_Handler,
		},
		{
			MethodName: "InnerNotifyMessage_Update_ContractID",
			Handler:    _PostgresMigrate_InnerNotifyMessage_Update_ContractID_Handler,
		},
		{
			MethodName: "InnerNotifyMessage_Update_MessageType",
			Handler:    _PostgresMigrate_InnerNotifyMessage_Update_MessageType_Handler,
		},
		{
			MethodName: "InnerNotifyMessage_Update_RecipientEmail",
			Handler:    _PostgresMigrate_InnerNotifyMessage_Update_RecipientEmail_Handler,
		},
		{
			MethodName: "InnerNotifyMessage_Update_SendResult",
			Handler:    _PostgresMigrate_InnerNotifyMessage_Update_SendResult_Handler,
		},
		{
			MethodName: "InnerNotifyMessage_Update_SenderEmail",
			Handler:    _PostgresMigrate_InnerNotifyMessage_Update_SenderEmail_Handler,
		},
		{
			MethodName: "InnerNotifyMessage_Update_Subject",
			Handler:    _PostgresMigrate_InnerNotifyMessage_Update_Subject_Handler,
		},
		{
			MethodName: "InnerNotifyMessage_Update_Title",
			Handler:    _PostgresMigrate_InnerNotifyMessage_Update_Title_Handler,
		},
		{
			MethodName: "InnerNotifyMessage_ReadFromCache",
			Handler:    _PostgresMigrate_InnerNotifyMessage_ReadFromCache_Handler,
		},
		{
			MethodName: "InnerNotifyMessage_ReadObject",
			Handler:    _PostgresMigrate_InnerNotifyMessage_ReadObject_Handler,
		},
		{
			MethodName: "InvoiceDebtTypeStat_Read",
			Handler:    _PostgresMigrate_InvoiceDebtTypeStat_Read_Handler,
		},
		{
			MethodName: "InvoiceDebtTypeStat_Create",
			Handler:    _PostgresMigrate_InvoiceDebtTypeStat_Create_Handler,
		},
		{
			MethodName: "InvoiceDebtTypeStat_Update",
			Handler:    _PostgresMigrate_InvoiceDebtTypeStat_Update_Handler,
		},
		{
			MethodName: "InvoiceDebtTypeStat_Save",
			Handler:    _PostgresMigrate_InvoiceDebtTypeStat_Save_Handler,
		},
		{
			MethodName: "InvoiceDebtTypeStat_Delete",
			Handler:    _PostgresMigrate_InvoiceDebtTypeStat_Delete_Handler,
		},
		{
			MethodName: "InvoiceDebtTypeStat_Restore",
			Handler:    _PostgresMigrate_InvoiceDebtTypeStat_Restore_Handler,
		},
		{
			MethodName: "InvoiceDebtTypeStat_Update_DebtTypeID",
			Handler:    _PostgresMigrate_InvoiceDebtTypeStat_Update_DebtTypeID_Handler,
		},
		{
			MethodName: "InvoiceDebtTypeStat_Update_InvoiceID",
			Handler:    _PostgresMigrate_InvoiceDebtTypeStat_Update_InvoiceID_Handler,
		},
		{
			MethodName: "InvoiceDebtTypeStat_Update_StateAt",
			Handler:    _PostgresMigrate_InvoiceDebtTypeStat_Update_StateAt_Handler,
		},
		{
			MethodName: "InvoiceDebtTypeStat_ReadFromCache",
			Handler:    _PostgresMigrate_InvoiceDebtTypeStat_ReadFromCache_Handler,
		},
		{
			MethodName: "InvoiceDebtTypeStat_UpdateManyFields",
			Handler:    _PostgresMigrate_InvoiceDebtTypeStat_UpdateManyFields_Handler,
		},
		{
			MethodName: "InvoiceDebtTypeStat_ReadObject",
			Handler:    _PostgresMigrate_InvoiceDebtTypeStat_ReadObject_Handler,
		},
		{
			MethodName: "Lawsuit_Read",
			Handler:    _PostgresMigrate_Lawsuit_Read_Handler,
		},
		{
			MethodName: "Lawsuit_Create",
			Handler:    _PostgresMigrate_Lawsuit_Create_Handler,
		},
		{
			MethodName: "Lawsuit_Update",
			Handler:    _PostgresMigrate_Lawsuit_Update_Handler,
		},
		{
			MethodName: "Lawsuit_Save",
			Handler:    _PostgresMigrate_Lawsuit_Save_Handler,
		},
		{
			MethodName: "Lawsuit_Delete",
			Handler:    _PostgresMigrate_Lawsuit_Delete_Handler,
		},
		{
			MethodName: "Lawsuit_Restore",
			Handler:    _PostgresMigrate_Lawsuit_Restore_Handler,
		},
		{
			MethodName: "Lawsuit_FindByExtID",
			Handler:    _PostgresMigrate_Lawsuit_FindByExtID_Handler,
		},
		{
			MethodName: "Lawsuit_FindBy_Number",
			Handler:    _PostgresMigrate_Lawsuit_FindBy_Number_Handler,
		},
		{
			MethodName: "Lawsuit_FindBy_NumberClaim",
			Handler:    _PostgresMigrate_Lawsuit_FindBy_NumberClaim_Handler,
		},
		{
			MethodName: "Lawsuit_Update_BranchID",
			Handler:    _PostgresMigrate_Lawsuit_Update_BranchID_Handler,
		},
		{
			MethodName: "Lawsuit_Update_Chance",
			Handler:    _PostgresMigrate_Lawsuit_Update_Chance_Handler,
		},
		{
			MethodName: "Lawsuit_Update_ClaimAt",
			Handler:    _PostgresMigrate_Lawsuit_Update_ClaimAt_Handler,
		},
		{
			MethodName: "Lawsuit_Update_ClaimPeriodStr",
			Handler:    _PostgresMigrate_Lawsuit_Update_ClaimPeriodStr_Handler,
		},
		{
			MethodName: "Lawsuit_Update_ClaimTypeID",
			Handler:    _PostgresMigrate_Lawsuit_Update_ClaimTypeID_Handler,
		},
		{
			MethodName: "Lawsuit_Update_ClosedAt",
			Handler:    _PostgresMigrate_Lawsuit_Update_ClosedAt_Handler,
		},
		{
			MethodName: "Lawsuit_Update_ConnectionID",
			Handler:    _PostgresMigrate_Lawsuit_Update_ConnectionID_Handler,
		},
		{
			MethodName: "Lawsuit_Update_ContractID",
			Handler:    _PostgresMigrate_Lawsuit_Update_ContractID_Handler,
		},
		{
			MethodName: "Lawsuit_Update_ControlledAt",
			Handler:    _PostgresMigrate_Lawsuit_Update_ControlledAt_Handler,
		},
		{
			MethodName: "Lawsuit_Update_CourtID",
			Handler:    _PostgresMigrate_Lawsuit_Update_CourtID_Handler,
		},
		{
			MethodName: "Lawsuit_Update_CuratorClaimID",
			Handler:    _PostgresMigrate_Lawsuit_Update_CuratorClaimID_Handler,
		},
		{
			MethodName: "Lawsuit_Update_CuratorContractID",
			Handler:    _PostgresMigrate_Lawsuit_Update_CuratorContractID_Handler,
		},
		{
			MethodName: "Lawsuit_Update_CuratorLegalID",
			Handler:    _PostgresMigrate_Lawsuit_Update_CuratorLegalID_Handler,
		},
		{
			MethodName: "Lawsuit_Update_CuratorPaymentID",
			Handler:    _PostgresMigrate_Lawsuit_Update_CuratorPaymentID_Handler,
		},
		{
			MethodName: "Lawsuit_Update_CuratorTechAuditID",
			Handler:    _PostgresMigrate_Lawsuit_Update_CuratorTechAuditID_Handler,
		},
		{
			MethodName: "Lawsuit_Update_DateFrom",
			Handler:    _PostgresMigrate_Lawsuit_Update_DateFrom_Handler,
		},
		{
			MethodName: "Lawsuit_Update_DateTo",
			Handler:    _PostgresMigrate_Lawsuit_Update_DateTo_Handler,
		},
		{
			MethodName: "Lawsuit_Update_DebtSum",
			Handler:    _PostgresMigrate_Lawsuit_Update_DebtSum_Handler,
		},
		{
			MethodName: "Lawsuit_Update_DebtSumAllTypes",
			Handler:    _PostgresMigrate_Lawsuit_Update_DebtSumAllTypes_Handler,
		},
		{
			MethodName: "Lawsuit_Update_Description",
			Handler:    _PostgresMigrate_Lawsuit_Update_Description_Handler,
		},
		{
			MethodName: "Lawsuit_Update_ErrorText",
			Handler:    _PostgresMigrate_Lawsuit_Update_ErrorText_Handler,
		},
		{
			MethodName: "Lawsuit_Update_InvoiceSum",
			Handler:    _PostgresMigrate_Lawsuit_Update_InvoiceSum_Handler,
		},
		{
			MethodName: "Lawsuit_Update_IsClosed",
			Handler:    _PostgresMigrate_Lawsuit_Update_IsClosed_Handler,
		},
		{
			MethodName: "Lawsuit_Update_MainSum",
			Handler:    _PostgresMigrate_Lawsuit_Update_MainSum_Handler,
		},
		{
			MethodName: "Lawsuit_Update_Name",
			Handler:    _PostgresMigrate_Lawsuit_Update_Name_Handler,
		},
		{
			MethodName: "Lawsuit_Update_NotifyClaimAt",
			Handler:    _PostgresMigrate_Lawsuit_Update_NotifyClaimAt_Handler,
		},
		{
			MethodName: "Lawsuit_Update_NotifyClaimChannel",
			Handler:    _PostgresMigrate_Lawsuit_Update_NotifyClaimChannel_Handler,
		},
		{
			MethodName: "Lawsuit_Update_NotifyClaimCode",
			Handler:    _PostgresMigrate_Lawsuit_Update_NotifyClaimCode_Handler,
		},
		{
			MethodName: "Lawsuit_Update_NotifyClaimDone",
			Handler:    _PostgresMigrate_Lawsuit_Update_NotifyClaimDone_Handler,
		},
		{
			MethodName: "Lawsuit_Update_NotifyClaimMailingCode",
			Handler:    _PostgresMigrate_Lawsuit_Update_NotifyClaimMailingCode_Handler,
		},
		{
			MethodName: "Lawsuit_Update_NotifyPretrialAt",
			Handler:    _PostgresMigrate_Lawsuit_Update_NotifyPretrialAt_Handler,
		},
		{
			MethodName: "Lawsuit_Update_NotifyPretrialChannel",
			Handler:    _PostgresMigrate_Lawsuit_Update_NotifyPretrialChannel_Handler,
		},
		{
			MethodName: "Lawsuit_Update_NotifyPretrialCode",
			Handler:    _PostgresMigrate_Lawsuit_Update_NotifyPretrialCode_Handler,
		},
		{
			MethodName: "Lawsuit_Update_NotifyPretrialDone",
			Handler:    _PostgresMigrate_Lawsuit_Update_NotifyPretrialDone_Handler,
		},
		{
			MethodName: "Lawsuit_Update_NotifyPretrialMailingCode",
			Handler:    _PostgresMigrate_Lawsuit_Update_NotifyPretrialMailingCode_Handler,
		},
		{
			MethodName: "Lawsuit_Update_Number",
			Handler:    _PostgresMigrate_Lawsuit_Update_Number_Handler,
		},
		{
			MethodName: "Lawsuit_Update_NumberClaim",
			Handler:    _PostgresMigrate_Lawsuit_Update_NumberClaim_Handler,
		},
		{
			MethodName: "Lawsuit_Update_NumberTrial",
			Handler:    _PostgresMigrate_Lawsuit_Update_NumberTrial_Handler,
		},
		{
			MethodName: "Lawsuit_Update_PaySum",
			Handler:    _PostgresMigrate_Lawsuit_Update_PaySum_Handler,
		},
		{
			MethodName: "Lawsuit_Update_Penalty",
			Handler:    _PostgresMigrate_Lawsuit_Update_Penalty_Handler,
		},
		{
			MethodName: "Lawsuit_Update_Penny",
			Handler:    _PostgresMigrate_Lawsuit_Update_Penny_Handler,
		},
		{
			MethodName: "Lawsuit_Update_Percent317",
			Handler:    _PostgresMigrate_Lawsuit_Update_Percent317_Handler,
		},
		{
			MethodName: "Lawsuit_Update_Percent395",
			Handler:    _PostgresMigrate_Lawsuit_Update_Percent395_Handler,
		},
		{
			MethodName: "Lawsuit_Update_PretrialAt",
			Handler:    _PostgresMigrate_Lawsuit_Update_PretrialAt_Handler,
		},
		{
			MethodName: "Lawsuit_Update_ProcessKey",
			Handler:    _PostgresMigrate_Lawsuit_Update_ProcessKey_Handler,
		},
		{
			MethodName: "Lawsuit_Update_ProcessStartedAt",
			Handler:    _PostgresMigrate_Lawsuit_Update_ProcessStartedAt_Handler,
		},
		{
			MethodName: "Lawsuit_Update_ReasonID",
			Handler:    _PostgresMigrate_Lawsuit_Update_ReasonID_Handler,
		},
		{
			MethodName: "Lawsuit_Update_RestrictSum",
			Handler:    _PostgresMigrate_Lawsuit_Update_RestrictSum_Handler,
		},
		{
			MethodName: "Lawsuit_Update_StageAt",
			Handler:    _PostgresMigrate_Lawsuit_Update_StageAt_Handler,
		},
		{
			MethodName: "Lawsuit_Update_StageID",
			Handler:    _PostgresMigrate_Lawsuit_Update_StageID_Handler,
		},
		{
			MethodName: "Lawsuit_Update_StateDuty",
			Handler:    _PostgresMigrate_Lawsuit_Update_StateDuty_Handler,
		},
		{
			MethodName: "Lawsuit_Update_StatusAt",
			Handler:    _PostgresMigrate_Lawsuit_Update_StatusAt_Handler,
		},
		{
			MethodName: "Lawsuit_Update_StatusID",
			Handler:    _PostgresMigrate_Lawsuit_Update_StatusID_Handler,
		},
		{
			MethodName: "Lawsuit_Update_Tag",
			Handler:    _PostgresMigrate_Lawsuit_Update_Tag_Handler,
		},
		{
			MethodName: "Lawsuit_Update_TypeID",
			Handler:    _PostgresMigrate_Lawsuit_Update_TypeID_Handler,
		},
		{
			MethodName: "Lawsuit_Update_UnknownPayments",
			Handler:    _PostgresMigrate_Lawsuit_Update_UnknownPayments_Handler,
		},
		{
			MethodName: "Lawsuit_Update_TrialAt",
			Handler:    _PostgresMigrate_Lawsuit_Update_TrialAt_Handler,
		},
		{
			MethodName: "Lawsuit_ReadFromCache",
			Handler:    _PostgresMigrate_Lawsuit_ReadFromCache_Handler,
		},
		{
			MethodName: "Lawsuit_UpdateManyFields",
			Handler:    _PostgresMigrate_Lawsuit_UpdateManyFields_Handler,
		},
		{
			MethodName: "Lawsuit_Update_NotifyPostBarcode",
			Handler:    _PostgresMigrate_Lawsuit_Update_NotifyPostBarcode_Handler,
		},
		{
			MethodName: "Lawsuit_Update_NotifyPostReq",
			Handler:    _PostgresMigrate_Lawsuit_Update_NotifyPostReq_Handler,
		},
		{
			MethodName: "Lawsuit_ReadObject",
			Handler:    _PostgresMigrate_Lawsuit_ReadObject_Handler,
		},
		{
			MethodName: "LawsuitComment_Read",
			Handler:    _PostgresMigrate_LawsuitComment_Read_Handler,
		},
		{
			MethodName: "LawsuitComment_Create",
			Handler:    _PostgresMigrate_LawsuitComment_Create_Handler,
		},
		{
			MethodName: "LawsuitComment_Update",
			Handler:    _PostgresMigrate_LawsuitComment_Update_Handler,
		},
		{
			MethodName: "LawsuitComment_Save",
			Handler:    _PostgresMigrate_LawsuitComment_Save_Handler,
		},
		{
			MethodName: "LawsuitComment_Delete",
			Handler:    _PostgresMigrate_LawsuitComment_Delete_Handler,
		},
		{
			MethodName: "LawsuitComment_Restore",
			Handler:    _PostgresMigrate_LawsuitComment_Restore_Handler,
		},
		{
			MethodName: "LawsuitComment_UpdateManyFields",
			Handler:    _PostgresMigrate_LawsuitComment_UpdateManyFields_Handler,
		},
		{
			MethodName: "LawsuitComment_Update_CommentTypeID",
			Handler:    _PostgresMigrate_LawsuitComment_Update_CommentTypeID_Handler,
		},
		{
			MethodName: "LawsuitComment_Update_EmployeeID",
			Handler:    _PostgresMigrate_LawsuitComment_Update_EmployeeID_Handler,
		},
		{
			MethodName: "LawsuitComment_Update_LawsuitID",
			Handler:    _PostgresMigrate_LawsuitComment_Update_LawsuitID_Handler,
		},
		{
			MethodName: "LawsuitComment_Update_Message",
			Handler:    _PostgresMigrate_LawsuitComment_Update_Message_Handler,
		},
		{
			MethodName: "LawsuitComment_ReadFromCache",
			Handler:    _PostgresMigrate_LawsuitComment_ReadFromCache_Handler,
		},
		{
			MethodName: "LawsuitComment_ReadObject",
			Handler:    _PostgresMigrate_LawsuitComment_ReadObject_Handler,
		},
		{
			MethodName: "LawsuitComment_FindMassBy_LawsuitID_CommentTypeID",
			Handler:    _PostgresMigrate_LawsuitComment_FindMassBy_LawsuitID_CommentTypeID_Handler,
		},
		{
			MethodName: "LawsuitsFile_Read",
			Handler:    _PostgresMigrate_LawsuitsFile_Read_Handler,
		},
		{
			MethodName: "LawsuitsFile_Create",
			Handler:    _PostgresMigrate_LawsuitsFile_Create_Handler,
		},
		{
			MethodName: "LawsuitsFile_Update",
			Handler:    _PostgresMigrate_LawsuitsFile_Update_Handler,
		},
		{
			MethodName: "LawsuitsFile_Save",
			Handler:    _PostgresMigrate_LawsuitsFile_Save_Handler,
		},
		{
			MethodName: "LawsuitsFile_Delete",
			Handler:    _PostgresMigrate_LawsuitsFile_Delete_Handler,
		},
		{
			MethodName: "LawsuitsFile_Restore",
			Handler:    _PostgresMigrate_LawsuitsFile_Restore_Handler,
		},
		{
			MethodName: "LawsuitsFile_UpdateManyFields",
			Handler:    _PostgresMigrate_LawsuitsFile_UpdateManyFields_Handler,
		},
		{
			MethodName: "LawsuitsFile_Update_FileID",
			Handler:    _PostgresMigrate_LawsuitsFile_Update_FileID_Handler,
		},
		{
			MethodName: "LawsuitsFile_Update_LawsuitID",
			Handler:    _PostgresMigrate_LawsuitsFile_Update_LawsuitID_Handler,
		},
		{
			MethodName: "LawsuitsFile_ReadFromCache",
			Handler:    _PostgresMigrate_LawsuitsFile_ReadFromCache_Handler,
		},
		{
			MethodName: "LawsuitsFile_ReadObject",
			Handler:    _PostgresMigrate_LawsuitsFile_ReadObject_Handler,
		},
		{
			MethodName: "LawsuitsFile_FindMassBy_LawsuitID",
			Handler:    _PostgresMigrate_LawsuitsFile_FindMassBy_LawsuitID_Handler,
		},
		{
			MethodName: "LawsuitsFile_FindMassObjectBy_LawsuitID",
			Handler:    _PostgresMigrate_LawsuitsFile_FindMassObjectBy_LawsuitID_Handler,
		},
		{
			MethodName: "LawsuitInvoiceCorrection_Read",
			Handler:    _PostgresMigrate_LawsuitInvoiceCorrection_Read_Handler,
		},
		{
			MethodName: "LawsuitInvoiceCorrection_Create",
			Handler:    _PostgresMigrate_LawsuitInvoiceCorrection_Create_Handler,
		},
		{
			MethodName: "LawsuitInvoiceCorrection_Update",
			Handler:    _PostgresMigrate_LawsuitInvoiceCorrection_Update_Handler,
		},
		{
			MethodName: "LawsuitInvoiceCorrection_Save",
			Handler:    _PostgresMigrate_LawsuitInvoiceCorrection_Save_Handler,
		},
		{
			MethodName: "LawsuitInvoiceCorrection_Delete",
			Handler:    _PostgresMigrate_LawsuitInvoiceCorrection_Delete_Handler,
		},
		{
			MethodName: "LawsuitInvoiceCorrection_Restore",
			Handler:    _PostgresMigrate_LawsuitInvoiceCorrection_Restore_Handler,
		},
		{
			MethodName: "LawsuitInvoiceCorrection_Update_CorrectionDocumentID",
			Handler:    _PostgresMigrate_LawsuitInvoiceCorrection_Update_CorrectionDocumentID_Handler,
		},
		{
			MethodName: "LawsuitInvoiceCorrection_Update_CorrectionDocumentSum",
			Handler:    _PostgresMigrate_LawsuitInvoiceCorrection_Update_CorrectionDocumentSum_Handler,
		},
		{
			MethodName: "LawsuitInvoiceCorrection_Update_InvoiceDocumentID",
			Handler:    _PostgresMigrate_LawsuitInvoiceCorrection_Update_InvoiceDocumentID_Handler,
		},
		{
			MethodName: "LawsuitInvoiceCorrection_Update_LawsuitID",
			Handler:    _PostgresMigrate_LawsuitInvoiceCorrection_Update_LawsuitID_Handler,
		},
		{
			MethodName: "LawsuitInvoiceCorrection_ReadFromCache",
			Handler:    _PostgresMigrate_LawsuitInvoiceCorrection_ReadFromCache_Handler,
		},
		{
			MethodName: "LawsuitInvoiceCorrection_UpdateManyFields",
			Handler:    _PostgresMigrate_LawsuitInvoiceCorrection_UpdateManyFields_Handler,
		},
		{
			MethodName: "LawsuitInvoiceCorrection_ReadObject",
			Handler:    _PostgresMigrate_LawsuitInvoiceCorrection_ReadObject_Handler,
		},
		{
			MethodName: "LawsuitInvoice_Read",
			Handler:    _PostgresMigrate_LawsuitInvoice_Read_Handler,
		},
		{
			MethodName: "LawsuitInvoice_Create",
			Handler:    _PostgresMigrate_LawsuitInvoice_Create_Handler,
		},
		{
			MethodName: "LawsuitInvoice_Update",
			Handler:    _PostgresMigrate_LawsuitInvoice_Update_Handler,
		},
		{
			MethodName: "LawsuitInvoice_Save",
			Handler:    _PostgresMigrate_LawsuitInvoice_Save_Handler,
		},
		{
			MethodName: "LawsuitInvoice_Delete",
			Handler:    _PostgresMigrate_LawsuitInvoice_Delete_Handler,
		},
		{
			MethodName: "LawsuitInvoice_Restore",
			Handler:    _PostgresMigrate_LawsuitInvoice_Restore_Handler,
		},
		{
			MethodName: "LawsuitInvoice_Update_ClosedAt",
			Handler:    _PostgresMigrate_LawsuitInvoice_Update_ClosedAt_Handler,
		},
		{
			MethodName: "LawsuitInvoice_Update_ClosedSum",
			Handler:    _PostgresMigrate_LawsuitInvoice_Update_ClosedSum_Handler,
		},
		{
			MethodName: "LawsuitInvoice_Update_Count",
			Handler:    _PostgresMigrate_LawsuitInvoice_Update_Count_Handler,
		},
		{
			MethodName: "LawsuitInvoice_Update_DocumentID",
			Handler:    _PostgresMigrate_LawsuitInvoice_Update_DocumentID_Handler,
		},
		{
			MethodName: "LawsuitInvoice_Update_DocumentSum",
			Handler:    _PostgresMigrate_LawsuitInvoice_Update_DocumentSum_Handler,
		},
		{
			MethodName: "LawsuitInvoice_Update_IsClosed",
			Handler:    _PostgresMigrate_LawsuitInvoice_Update_IsClosed_Handler,
		},
		{
			MethodName: "LawsuitInvoice_Update_IsCorrective",
			Handler:    _PostgresMigrate_LawsuitInvoice_Update_IsCorrective_Handler,
		},
		{
			MethodName: "LawsuitInvoice_Update_LawsuitID",
			Handler:    _PostgresMigrate_LawsuitInvoice_Update_LawsuitID_Handler,
		},
		{
			MethodName: "LawsuitInvoice_Update_Sum",
			Handler:    _PostgresMigrate_LawsuitInvoice_Update_Sum_Handler,
		},
		{
			MethodName: "LawsuitInvoice_ReadFromCache",
			Handler:    _PostgresMigrate_LawsuitInvoice_ReadFromCache_Handler,
		},
		{
			MethodName: "LawsuitInvoice_UpdateManyFields",
			Handler:    _PostgresMigrate_LawsuitInvoice_UpdateManyFields_Handler,
		},
		{
			MethodName: "LawsuitInvoice_Update_BriefcaseID",
			Handler:    _PostgresMigrate_LawsuitInvoice_Update_BriefcaseID_Handler,
		},
		{
			MethodName: "LawsuitInvoice_ReadObject",
			Handler:    _PostgresMigrate_LawsuitInvoice_ReadObject_Handler,
		},
		{
			MethodName: "LawsuitPaymentCorrection_Read",
			Handler:    _PostgresMigrate_LawsuitPaymentCorrection_Read_Handler,
		},
		{
			MethodName: "LawsuitPaymentCorrection_Create",
			Handler:    _PostgresMigrate_LawsuitPaymentCorrection_Create_Handler,
		},
		{
			MethodName: "LawsuitPaymentCorrection_Update",
			Handler:    _PostgresMigrate_LawsuitPaymentCorrection_Update_Handler,
		},
		{
			MethodName: "LawsuitPaymentCorrection_Save",
			Handler:    _PostgresMigrate_LawsuitPaymentCorrection_Save_Handler,
		},
		{
			MethodName: "LawsuitPaymentCorrection_Delete",
			Handler:    _PostgresMigrate_LawsuitPaymentCorrection_Delete_Handler,
		},
		{
			MethodName: "LawsuitPaymentCorrection_Restore",
			Handler:    _PostgresMigrate_LawsuitPaymentCorrection_Restore_Handler,
		},
		{
			MethodName: "LawsuitPaymentCorrection_Update_CorrectionDocumentID",
			Handler:    _PostgresMigrate_LawsuitPaymentCorrection_Update_CorrectionDocumentID_Handler,
		},
		{
			MethodName: "LawsuitPaymentCorrection_Update_CorrectionDocumentSum",
			Handler:    _PostgresMigrate_LawsuitPaymentCorrection_Update_CorrectionDocumentSum_Handler,
		},
		{
			MethodName: "LawsuitPaymentCorrection_Update_LawsuitID",
			Handler:    _PostgresMigrate_LawsuitPaymentCorrection_Update_LawsuitID_Handler,
		},
		{
			MethodName: "LawsuitPaymentCorrection_Update_PaymentDocumentID",
			Handler:    _PostgresMigrate_LawsuitPaymentCorrection_Update_PaymentDocumentID_Handler,
		},
		{
			MethodName: "LawsuitPaymentCorrection_ReadFromCache",
			Handler:    _PostgresMigrate_LawsuitPaymentCorrection_ReadFromCache_Handler,
		},
		{
			MethodName: "LawsuitPaymentCorrection_UpdateManyFields",
			Handler:    _PostgresMigrate_LawsuitPaymentCorrection_UpdateManyFields_Handler,
		},
		{
			MethodName: "LawsuitPaymentCorrection_ReadObject",
			Handler:    _PostgresMigrate_LawsuitPaymentCorrection_ReadObject_Handler,
		},
		{
			MethodName: "LawsuitPayment_Read",
			Handler:    _PostgresMigrate_LawsuitPayment_Read_Handler,
		},
		{
			MethodName: "LawsuitPayment_Create",
			Handler:    _PostgresMigrate_LawsuitPayment_Create_Handler,
		},
		{
			MethodName: "LawsuitPayment_Update",
			Handler:    _PostgresMigrate_LawsuitPayment_Update_Handler,
		},
		{
			MethodName: "LawsuitPayment_Save",
			Handler:    _PostgresMigrate_LawsuitPayment_Save_Handler,
		},
		{
			MethodName: "LawsuitPayment_Delete",
			Handler:    _PostgresMigrate_LawsuitPayment_Delete_Handler,
		},
		{
			MethodName: "LawsuitPayment_Restore",
			Handler:    _PostgresMigrate_LawsuitPayment_Restore_Handler,
		},
		{
			MethodName: "LawsuitPayment_Update_DocumentID",
			Handler:    _PostgresMigrate_LawsuitPayment_Update_DocumentID_Handler,
		},
		{
			MethodName: "LawsuitPayment_Update_DocumentSum",
			Handler:    _PostgresMigrate_LawsuitPayment_Update_DocumentSum_Handler,
		},
		{
			MethodName: "LawsuitPayment_Update_InvoiceID",
			Handler:    _PostgresMigrate_LawsuitPayment_Update_InvoiceID_Handler,
		},
		{
			MethodName: "LawsuitPayment_Update_IsCorrective",
			Handler:    _PostgresMigrate_LawsuitPayment_Update_IsCorrective_Handler,
		},
		{
			MethodName: "LawsuitPayment_Update_LawsuitID",
			Handler:    _PostgresMigrate_LawsuitPayment_Update_LawsuitID_Handler,
		},
		{
			MethodName: "LawsuitPayment_Update_Sum",
			Handler:    _PostgresMigrate_LawsuitPayment_Update_Sum_Handler,
		},
		{
			MethodName: "LawsuitPayment_Update_LinkedAt",
			Handler:    _PostgresMigrate_LawsuitPayment_Update_LinkedAt_Handler,
		},
		{
			MethodName: "LawsuitPayment_ReadFromCache",
			Handler:    _PostgresMigrate_LawsuitPayment_ReadFromCache_Handler,
		},
		{
			MethodName: "LawsuitPayment_UpdateManyFields",
			Handler:    _PostgresMigrate_LawsuitPayment_UpdateManyFields_Handler,
		},
		{
			MethodName: "LawsuitPayment_ReadObject",
			Handler:    _PostgresMigrate_LawsuitPayment_ReadObject_Handler,
		},
		{
			MethodName: "LawsuitReasonType_Read",
			Handler:    _PostgresMigrate_LawsuitReasonType_Read_Handler,
		},
		{
			MethodName: "LawsuitReasonType_Create",
			Handler:    _PostgresMigrate_LawsuitReasonType_Create_Handler,
		},
		{
			MethodName: "LawsuitReasonType_Update",
			Handler:    _PostgresMigrate_LawsuitReasonType_Update_Handler,
		},
		{
			MethodName: "LawsuitReasonType_Save",
			Handler:    _PostgresMigrate_LawsuitReasonType_Save_Handler,
		},
		{
			MethodName: "LawsuitReasonType_Delete",
			Handler:    _PostgresMigrate_LawsuitReasonType_Delete_Handler,
		},
		{
			MethodName: "LawsuitReasonType_Restore",
			Handler:    _PostgresMigrate_LawsuitReasonType_Restore_Handler,
		},
		{
			MethodName: "LawsuitReasonType_Update_Code",
			Handler:    _PostgresMigrate_LawsuitReasonType_Update_Code_Handler,
		},
		{
			MethodName: "LawsuitReasonType_Update_Description",
			Handler:    _PostgresMigrate_LawsuitReasonType_Update_Description_Handler,
		},
		{
			MethodName: "LawsuitReasonType_Update_Name",
			Handler:    _PostgresMigrate_LawsuitReasonType_Update_Name_Handler,
		},
		{
			MethodName: "LawsuitReasonType_ReadFromCache",
			Handler:    _PostgresMigrate_LawsuitReasonType_ReadFromCache_Handler,
		},
		{
			MethodName: "LawsuitReasonType_UpdateManyFields",
			Handler:    _PostgresMigrate_LawsuitReasonType_UpdateManyFields_Handler,
		},
		{
			MethodName: "LawsuitReasonType_ReadObject",
			Handler:    _PostgresMigrate_LawsuitReasonType_ReadObject_Handler,
		},
		{
			MethodName: "LawsuitStageType_Read",
			Handler:    _PostgresMigrate_LawsuitStageType_Read_Handler,
		},
		{
			MethodName: "LawsuitStageType_Create",
			Handler:    _PostgresMigrate_LawsuitStageType_Create_Handler,
		},
		{
			MethodName: "LawsuitStageType_Update",
			Handler:    _PostgresMigrate_LawsuitStageType_Update_Handler,
		},
		{
			MethodName: "LawsuitStageType_Save",
			Handler:    _PostgresMigrate_LawsuitStageType_Save_Handler,
		},
		{
			MethodName: "LawsuitStageType_Delete",
			Handler:    _PostgresMigrate_LawsuitStageType_Delete_Handler,
		},
		{
			MethodName: "LawsuitStageType_Restore",
			Handler:    _PostgresMigrate_LawsuitStageType_Restore_Handler,
		},
		{
			MethodName: "LawsuitStageType_Update_Code",
			Handler:    _PostgresMigrate_LawsuitStageType_Update_Code_Handler,
		},
		{
			MethodName: "LawsuitStageType_Update_Description",
			Handler:    _PostgresMigrate_LawsuitStageType_Update_Description_Handler,
		},
		{
			MethodName: "LawsuitStageType_Update_Name",
			Handler:    _PostgresMigrate_LawsuitStageType_Update_Name_Handler,
		},
		{
			MethodName: "LawsuitStageType_ReadFromCache",
			Handler:    _PostgresMigrate_LawsuitStageType_ReadFromCache_Handler,
		},
		{
			MethodName: "LawsuitStageType_UpdateManyFields",
			Handler:    _PostgresMigrate_LawsuitStageType_UpdateManyFields_Handler,
		},
		{
			MethodName: "LawsuitStageType_ReadObject",
			Handler:    _PostgresMigrate_LawsuitStageType_ReadObject_Handler,
		},
		{
			MethodName: "LawsuitStatusState_Read",
			Handler:    _PostgresMigrate_LawsuitStatusState_Read_Handler,
		},
		{
			MethodName: "LawsuitStatusState_Create",
			Handler:    _PostgresMigrate_LawsuitStatusState_Create_Handler,
		},
		{
			MethodName: "LawsuitStatusState_Update",
			Handler:    _PostgresMigrate_LawsuitStatusState_Update_Handler,
		},
		{
			MethodName: "LawsuitStatusState_Save",
			Handler:    _PostgresMigrate_LawsuitStatusState_Save_Handler,
		},
		{
			MethodName: "LawsuitStatusState_Delete",
			Handler:    _PostgresMigrate_LawsuitStatusState_Delete_Handler,
		},
		{
			MethodName: "LawsuitStatusState_Restore",
			Handler:    _PostgresMigrate_LawsuitStatusState_Restore_Handler,
		},
		{
			MethodName: "LawsuitStatusState_FillFromLawsuit",
			Handler:    _PostgresMigrate_LawsuitStatusState_FillFromLawsuit_Handler,
		},
		{
			MethodName: "LawsuitStatusState_FindDebtSum",
			Handler:    _PostgresMigrate_LawsuitStatusState_FindDebtSum_Handler,
		},
		{
			MethodName: "LawsuitStatusState_FindPreviousStatus",
			Handler:    _PostgresMigrate_LawsuitStatusState_FindPreviousStatus_Handler,
		},
		{
			MethodName: "LawsuitStatusState_Update_CommentID",
			Handler:    _PostgresMigrate_LawsuitStatusState_Update_CommentID_Handler,
		},
		{
			MethodName: "LawsuitStatusState_Update_InvoiceSum",
			Handler:    _PostgresMigrate_LawsuitStatusState_Update_InvoiceSum_Handler,
		},
		{
			MethodName: "LawsuitStatusState_Update_LawsuitID",
			Handler:    _PostgresMigrate_LawsuitStatusState_Update_LawsuitID_Handler,
		},
		{
			MethodName: "LawsuitStatusState_Update_MainSum",
			Handler:    _PostgresMigrate_LawsuitStatusState_Update_MainSum_Handler,
		},
		{
			MethodName: "LawsuitStatusState_Update_PaySum",
			Handler:    _PostgresMigrate_LawsuitStatusState_Update_PaySum_Handler,
		},
		{
			MethodName: "LawsuitStatusState_Update_PenaltySum",
			Handler:    _PostgresMigrate_LawsuitStatusState_Update_PenaltySum_Handler,
		},
		{
			MethodName: "LawsuitStatusState_Update_PennySum",
			Handler:    _PostgresMigrate_LawsuitStatusState_Update_PennySum_Handler,
		},
		{
			MethodName: "LawsuitStatusState_Update_RestrictSum",
			Handler:    _PostgresMigrate_LawsuitStatusState_Update_RestrictSum_Handler,
		},
		{
			MethodName: "LawsuitStatusState_Update_StateDutySum",
			Handler:    _PostgresMigrate_LawsuitStatusState_Update_StateDutySum_Handler,
		},
		{
			MethodName: "LawsuitStatusState_Update_StatusAt",
			Handler:    _PostgresMigrate_LawsuitStatusState_Update_StatusAt_Handler,
		},
		{
			MethodName: "LawsuitStatusState_Update_StatusID",
			Handler:    _PostgresMigrate_LawsuitStatusState_Update_StatusID_Handler,
		},
		{
			MethodName: "LawsuitStatusState_Update_Tag",
			Handler:    _PostgresMigrate_LawsuitStatusState_Update_Tag_Handler,
		},
		{
			MethodName: "LawsuitStatusState_Update_TotalDebt",
			Handler:    _PostgresMigrate_LawsuitStatusState_Update_TotalDebt_Handler,
		},
		{
			MethodName: "LawsuitStatusState_ReadFromCache",
			Handler:    _PostgresMigrate_LawsuitStatusState_ReadFromCache_Handler,
		},
		{
			MethodName: "LawsuitStatusState_UpdateManyFields",
			Handler:    _PostgresMigrate_LawsuitStatusState_UpdateManyFields_Handler,
		},
		{
			MethodName: "LawsuitStatusState_Update_ContractDebtSumAllTypes",
			Handler:    _PostgresMigrate_LawsuitStatusState_Update_ContractDebtSumAllTypes_Handler,
		},
		{
			MethodName: "LawsuitStatusState_Update_BillsTotalSum",
			Handler:    _PostgresMigrate_LawsuitStatusState_Update_BillsTotalSum_Handler,
		},
		{
			MethodName: "LawsuitStatusState_ReadObject",
			Handler:    _PostgresMigrate_LawsuitStatusState_ReadObject_Handler,
		},
		{
			MethodName: "LawsuitStatusType_Read",
			Handler:    _PostgresMigrate_LawsuitStatusType_Read_Handler,
		},
		{
			MethodName: "LawsuitStatusType_Create",
			Handler:    _PostgresMigrate_LawsuitStatusType_Create_Handler,
		},
		{
			MethodName: "LawsuitStatusType_Update",
			Handler:    _PostgresMigrate_LawsuitStatusType_Update_Handler,
		},
		{
			MethodName: "LawsuitStatusType_Save",
			Handler:    _PostgresMigrate_LawsuitStatusType_Save_Handler,
		},
		{
			MethodName: "LawsuitStatusType_Delete",
			Handler:    _PostgresMigrate_LawsuitStatusType_Delete_Handler,
		},
		{
			MethodName: "LawsuitStatusType_Restore",
			Handler:    _PostgresMigrate_LawsuitStatusType_Restore_Handler,
		},
		{
			MethodName: "LawsuitStatusType_Update_Code",
			Handler:    _PostgresMigrate_LawsuitStatusType_Update_Code_Handler,
		},
		{
			MethodName: "LawsuitStatusType_Update_Description",
			Handler:    _PostgresMigrate_LawsuitStatusType_Update_Description_Handler,
		},
		{
			MethodName: "LawsuitStatusType_Update_IsClosed",
			Handler:    _PostgresMigrate_LawsuitStatusType_Update_IsClosed_Handler,
		},
		{
			MethodName: "LawsuitStatusType_Update_Name",
			Handler:    _PostgresMigrate_LawsuitStatusType_Update_Name_Handler,
		},
		{
			MethodName: "LawsuitStatusType_ReadFromCache",
			Handler:    _PostgresMigrate_LawsuitStatusType_ReadFromCache_Handler,
		},
		{
			MethodName: "LawsuitStatusType_UpdateManyFields",
			Handler:    _PostgresMigrate_LawsuitStatusType_UpdateManyFields_Handler,
		},
		{
			MethodName: "LawsuitStatusType_Update_ColorID",
			Handler:    _PostgresMigrate_LawsuitStatusType_Update_ColorID_Handler,
		},
		{
			MethodName: "LawsuitStatusType_Update_IsError",
			Handler:    _PostgresMigrate_LawsuitStatusType_Update_IsError_Handler,
		},
		{
			MethodName: "LawsuitStatusType_Update_IsTech",
			Handler:    _PostgresMigrate_LawsuitStatusType_Update_IsTech_Handler,
		},
		{
			MethodName: "LawsuitStatusType_Update_ViewSort",
			Handler:    _PostgresMigrate_LawsuitStatusType_Update_ViewSort_Handler,
		},
		{
			MethodName: "LawsuitStatusType_ReadObject",
			Handler:    _PostgresMigrate_LawsuitStatusType_ReadObject_Handler,
		},
		{
			MethodName: "LawsuitType_Read",
			Handler:    _PostgresMigrate_LawsuitType_Read_Handler,
		},
		{
			MethodName: "LawsuitType_Create",
			Handler:    _PostgresMigrate_LawsuitType_Create_Handler,
		},
		{
			MethodName: "LawsuitType_Update",
			Handler:    _PostgresMigrate_LawsuitType_Update_Handler,
		},
		{
			MethodName: "LawsuitType_Save",
			Handler:    _PostgresMigrate_LawsuitType_Save_Handler,
		},
		{
			MethodName: "LawsuitType_Delete",
			Handler:    _PostgresMigrate_LawsuitType_Delete_Handler,
		},
		{
			MethodName: "LawsuitType_Restore",
			Handler:    _PostgresMigrate_LawsuitType_Restore_Handler,
		},
		{
			MethodName: "LawsuitType_Update_Code",
			Handler:    _PostgresMigrate_LawsuitType_Update_Code_Handler,
		},
		{
			MethodName: "LawsuitType_Update_Description",
			Handler:    _PostgresMigrate_LawsuitType_Update_Description_Handler,
		},
		{
			MethodName: "LawsuitType_Update_Name",
			Handler:    _PostgresMigrate_LawsuitType_Update_Name_Handler,
		},
		{
			MethodName: "LawsuitType_ReadFromCache",
			Handler:    _PostgresMigrate_LawsuitType_ReadFromCache_Handler,
		},
		{
			MethodName: "LawsuitType_UpdateManyFields",
			Handler:    _PostgresMigrate_LawsuitType_UpdateManyFields_Handler,
		},
		{
			MethodName: "LawsuitType_ReadObject",
			Handler:    _PostgresMigrate_LawsuitType_ReadObject_Handler,
		},
		{
			MethodName: "LegalType_Read",
			Handler:    _PostgresMigrate_LegalType_Read_Handler,
		},
		{
			MethodName: "LegalType_Create",
			Handler:    _PostgresMigrate_LegalType_Create_Handler,
		},
		{
			MethodName: "LegalType_Update",
			Handler:    _PostgresMigrate_LegalType_Update_Handler,
		},
		{
			MethodName: "LegalType_Save",
			Handler:    _PostgresMigrate_LegalType_Save_Handler,
		},
		{
			MethodName: "LegalType_Delete",
			Handler:    _PostgresMigrate_LegalType_Delete_Handler,
		},
		{
			MethodName: "LegalType_Restore",
			Handler:    _PostgresMigrate_LegalType_Restore_Handler,
		},
		{
			MethodName: "LegalType_Update_Description",
			Handler:    _PostgresMigrate_LegalType_Update_Description_Handler,
		},
		{
			MethodName: "LegalType_Update_IsIndividual",
			Handler:    _PostgresMigrate_LegalType_Update_IsIndividual_Handler,
		},
		{
			MethodName: "LegalType_Update_Name",
			Handler:    _PostgresMigrate_LegalType_Update_Name_Handler,
		},
		{
			MethodName: "LegalType_ReadFromCache",
			Handler:    _PostgresMigrate_LegalType_ReadFromCache_Handler,
		},
		{
			MethodName: "LegalType_UpdateManyFields",
			Handler:    _PostgresMigrate_LegalType_UpdateManyFields_Handler,
		},
		{
			MethodName: "LegalType_ReadAll",
			Handler:    _PostgresMigrate_LegalType_ReadAll_Handler,
		},
		{
			MethodName: "LegalType_ReadObject",
			Handler:    _PostgresMigrate_LegalType_ReadObject_Handler,
		},
		{
			MethodName: "LitigationType_Read",
			Handler:    _PostgresMigrate_LitigationType_Read_Handler,
		},
		{
			MethodName: "LitigationType_Create",
			Handler:    _PostgresMigrate_LitigationType_Create_Handler,
		},
		{
			MethodName: "LitigationType_Update",
			Handler:    _PostgresMigrate_LitigationType_Update_Handler,
		},
		{
			MethodName: "LitigationType_Save",
			Handler:    _PostgresMigrate_LitigationType_Save_Handler,
		},
		{
			MethodName: "LitigationType_Delete",
			Handler:    _PostgresMigrate_LitigationType_Delete_Handler,
		},
		{
			MethodName: "LitigationType_Restore",
			Handler:    _PostgresMigrate_LitigationType_Restore_Handler,
		},
		{
			MethodName: "LitigationType_UpdateManyFields",
			Handler:    _PostgresMigrate_LitigationType_UpdateManyFields_Handler,
		},
		{
			MethodName: "LitigationType_Update_Description",
			Handler:    _PostgresMigrate_LitigationType_Update_Description_Handler,
		},
		{
			MethodName: "LitigationType_Update_Name",
			Handler:    _PostgresMigrate_LitigationType_Update_Name_Handler,
		},
		{
			MethodName: "LitigationType_ReadFromCache",
			Handler:    _PostgresMigrate_LitigationType_ReadFromCache_Handler,
		},
		{
			MethodName: "LitigationType_ReadAll",
			Handler:    _PostgresMigrate_LitigationType_ReadAll_Handler,
		},
		{
			MethodName: "LitigationType_ReadObject",
			Handler:    _PostgresMigrate_LitigationType_ReadObject_Handler,
		},
		{
			MethodName: "MessageAttachement_Read",
			Handler:    _PostgresMigrate_MessageAttachement_Read_Handler,
		},
		{
			MethodName: "MessageAttachement_Create",
			Handler:    _PostgresMigrate_MessageAttachement_Create_Handler,
		},
		{
			MethodName: "MessageAttachement_Update",
			Handler:    _PostgresMigrate_MessageAttachement_Update_Handler,
		},
		{
			MethodName: "MessageAttachement_Save",
			Handler:    _PostgresMigrate_MessageAttachement_Save_Handler,
		},
		{
			MethodName: "MessageAttachement_Delete",
			Handler:    _PostgresMigrate_MessageAttachement_Delete_Handler,
		},
		{
			MethodName: "MessageAttachement_Restore",
			Handler:    _PostgresMigrate_MessageAttachement_Restore_Handler,
		},
		{
			MethodName: "MessageAttachement_Update_FilesID",
			Handler:    _PostgresMigrate_MessageAttachement_Update_FilesID_Handler,
		},
		{
			MethodName: "MessageAttachement_Update_MessagesID",
			Handler:    _PostgresMigrate_MessageAttachement_Update_MessagesID_Handler,
		},
		{
			MethodName: "MessageAttachement_ReadFromCache",
			Handler:    _PostgresMigrate_MessageAttachement_ReadFromCache_Handler,
		},
		{
			MethodName: "MessageAttachement_UpdateManyFields",
			Handler:    _PostgresMigrate_MessageAttachement_UpdateManyFields_Handler,
		},
		{
			MethodName: "MessageAttachement_ReadObject",
			Handler:    _PostgresMigrate_MessageAttachement_ReadObject_Handler,
		},
		{
			MethodName: "MessageSendStatus_Read",
			Handler:    _PostgresMigrate_MessageSendStatus_Read_Handler,
		},
		{
			MethodName: "MessageSendStatus_Create",
			Handler:    _PostgresMigrate_MessageSendStatus_Create_Handler,
		},
		{
			MethodName: "MessageSendStatus_Update",
			Handler:    _PostgresMigrate_MessageSendStatus_Update_Handler,
		},
		{
			MethodName: "MessageSendStatus_Save",
			Handler:    _PostgresMigrate_MessageSendStatus_Save_Handler,
		},
		{
			MethodName: "MessageSendStatus_Delete",
			Handler:    _PostgresMigrate_MessageSendStatus_Delete_Handler,
		},
		{
			MethodName: "MessageSendStatus_Restore",
			Handler:    _PostgresMigrate_MessageSendStatus_Restore_Handler,
		},
		{
			MethodName: "MessageSendStatus_Update_Code",
			Handler:    _PostgresMigrate_MessageSendStatus_Update_Code_Handler,
		},
		{
			MethodName: "MessageSendStatus_Update_Description",
			Handler:    _PostgresMigrate_MessageSendStatus_Update_Description_Handler,
		},
		{
			MethodName: "MessageSendStatus_Update_FormalName",
			Handler:    _PostgresMigrate_MessageSendStatus_Update_FormalName_Handler,
		},
		{
			MethodName: "MessageSendStatus_Update_IsDelivered",
			Handler:    _PostgresMigrate_MessageSendStatus_Update_IsDelivered_Handler,
		},
		{
			MethodName: "MessageSendStatus_Update_Name",
			Handler:    _PostgresMigrate_MessageSendStatus_Update_Name_Handler,
		},
		{
			MethodName: "MessageSendStatus_Update_NotifierID",
			Handler:    _PostgresMigrate_MessageSendStatus_Update_NotifierID_Handler,
		},
		{
			MethodName: "MessageSendStatus_ReadFromCache",
			Handler:    _PostgresMigrate_MessageSendStatus_ReadFromCache_Handler,
		},
		{
			MethodName: "MessageSendStatus_UpdateManyFields",
			Handler:    _PostgresMigrate_MessageSendStatus_UpdateManyFields_Handler,
		},
		{
			MethodName: "MessageSendStatus_ReadObject",
			Handler:    _PostgresMigrate_MessageSendStatus_ReadObject_Handler,
		},
		{
			MethodName: "MessageType_Read",
			Handler:    _PostgresMigrate_MessageType_Read_Handler,
		},
		{
			MethodName: "MessageType_Create",
			Handler:    _PostgresMigrate_MessageType_Create_Handler,
		},
		{
			MethodName: "MessageType_Update",
			Handler:    _PostgresMigrate_MessageType_Update_Handler,
		},
		{
			MethodName: "MessageType_Save",
			Handler:    _PostgresMigrate_MessageType_Save_Handler,
		},
		{
			MethodName: "MessageType_Delete",
			Handler:    _PostgresMigrate_MessageType_Delete_Handler,
		},
		{
			MethodName: "MessageType_Restore",
			Handler:    _PostgresMigrate_MessageType_Restore_Handler,
		},
		{
			MethodName: "MessageType_Update_Code",
			Handler:    _PostgresMigrate_MessageType_Update_Code_Handler,
		},
		{
			MethodName: "MessageType_Update_Description",
			Handler:    _PostgresMigrate_MessageType_Update_Description_Handler,
		},
		{
			MethodName: "MessageType_Update_Name",
			Handler:    _PostgresMigrate_MessageType_Update_Name_Handler,
		},
		{
			MethodName: "MessageType_ReadFromCache",
			Handler:    _PostgresMigrate_MessageType_ReadFromCache_Handler,
		},
		{
			MethodName: "MessageType_UpdateManyFields",
			Handler:    _PostgresMigrate_MessageType_UpdateManyFields_Handler,
		},
		{
			MethodName: "MessageType_ReadObject",
			Handler:    _PostgresMigrate_MessageType_ReadObject_Handler,
		},
		{
			MethodName: "Message_Read",
			Handler:    _PostgresMigrate_Message_Read_Handler,
		},
		{
			MethodName: "Message_Create",
			Handler:    _PostgresMigrate_Message_Create_Handler,
		},
		{
			MethodName: "Message_Update",
			Handler:    _PostgresMigrate_Message_Update_Handler,
		},
		{
			MethodName: "Message_Save",
			Handler:    _PostgresMigrate_Message_Save_Handler,
		},
		{
			MethodName: "Message_Delete",
			Handler:    _PostgresMigrate_Message_Delete_Handler,
		},
		{
			MethodName: "Message_Restore",
			Handler:    _PostgresMigrate_Message_Restore_Handler,
		},
		{
			MethodName: "Message_FindBy_LawsuitID_MessageTypeID",
			Handler:    _PostgresMigrate_Message_FindBy_LawsuitID_MessageTypeID_Handler,
		},
		{
			MethodName: "Message_Update_ChannelTypeID",
			Handler:    _PostgresMigrate_Message_Update_ChannelTypeID_Handler,
		},
		{
			MethodName: "Message_Update_ContactFrom",
			Handler:    _PostgresMigrate_Message_Update_ContactFrom_Handler,
		},
		{
			MethodName: "Message_Update_ContactTo",
			Handler:    _PostgresMigrate_Message_Update_ContactTo_Handler,
		},
		{
			MethodName: "Message_Update_DirectionTypeID",
			Handler:    _PostgresMigrate_Message_Update_DirectionTypeID_Handler,
		},
		{
			MethodName: "Message_Update_EmployeeIdFrom",
			Handler:    _PostgresMigrate_Message_Update_EmployeeIdFrom_Handler,
		},
		{
			MethodName: "Message_Update_EmployeeIdTo",
			Handler:    _PostgresMigrate_Message_Update_EmployeeIdTo_Handler,
		},
		{
			MethodName: "Message_Update_ExtCode",
			Handler:    _PostgresMigrate_Message_Update_ExtCode_Handler,
		},
		{
			MethodName: "Message_Update_LawsuitID",
			Handler:    _PostgresMigrate_Message_Update_LawsuitID_Handler,
		},
		{
			MethodName: "Message_Update_MailingCode",
			Handler:    _PostgresMigrate_Message_Update_MailingCode_Handler,
		},
		{
			MethodName: "Message_Update_MessageFileID",
			Handler:    _PostgresMigrate_Message_Update_MessageFileID_Handler,
		},
		{
			MethodName: "Message_Update_MessageTypeID",
			Handler:    _PostgresMigrate_Message_Update_MessageTypeID_Handler,
		},
		{
			MethodName: "Message_Update_ReceiveResult",
			Handler:    _PostgresMigrate_Message_Update_ReceiveResult_Handler,
		},
		{
			MethodName: "Message_Update_ReceiveStatusID",
			Handler:    _PostgresMigrate_Message_Update_ReceiveStatusID_Handler,
		},
		{
			MethodName: "Message_Update_ReceivedAt",
			Handler:    _PostgresMigrate_Message_Update_ReceivedAt_Handler,
		},
		{
			MethodName: "Message_Update_SendResult",
			Handler:    _PostgresMigrate_Message_Update_SendResult_Handler,
		},
		{
			MethodName: "Message_Update_SendStatusID",
			Handler:    _PostgresMigrate_Message_Update_SendStatusID_Handler,
		},
		{
			MethodName: "Message_Update_SentAt",
			Handler:    _PostgresMigrate_Message_Update_SentAt_Handler,
		},
		{
			MethodName: "Message_Update_Topic",
			Handler:    _PostgresMigrate_Message_Update_Topic_Handler,
		},
		{
			MethodName: "Message_ReadFromCache",
			Handler:    _PostgresMigrate_Message_ReadFromCache_Handler,
		},
		{
			MethodName: "Message_UpdateManyFields",
			Handler:    _PostgresMigrate_Message_UpdateManyFields_Handler,
		},
		{
			MethodName: "Message_ReadObject",
			Handler:    _PostgresMigrate_Message_ReadObject_Handler,
		},
		{
			MethodName: "NotificationType_Read",
			Handler:    _PostgresMigrate_NotificationType_Read_Handler,
		},
		{
			MethodName: "NotificationType_Create",
			Handler:    _PostgresMigrate_NotificationType_Create_Handler,
		},
		{
			MethodName: "NotificationType_Update",
			Handler:    _PostgresMigrate_NotificationType_Update_Handler,
		},
		{
			MethodName: "NotificationType_Save",
			Handler:    _PostgresMigrate_NotificationType_Save_Handler,
		},
		{
			MethodName: "NotificationType_Delete",
			Handler:    _PostgresMigrate_NotificationType_Delete_Handler,
		},
		{
			MethodName: "NotificationType_Restore",
			Handler:    _PostgresMigrate_NotificationType_Restore_Handler,
		},
		{
			MethodName: "NotificationType_Update_BeforeTimeID",
			Handler:    _PostgresMigrate_NotificationType_Update_BeforeTimeID_Handler,
		},
		{
			MethodName: "NotificationType_Update_Code",
			Handler:    _PostgresMigrate_NotificationType_Update_Code_Handler,
		},
		{
			MethodName: "NotificationType_Update_Description",
			Handler:    _PostgresMigrate_NotificationType_Update_Description_Handler,
		},
		{
			MethodName: "NotificationType_Update_InTime",
			Handler:    _PostgresMigrate_NotificationType_Update_InTime_Handler,
		},
		{
			MethodName: "NotificationType_Update_Name",
			Handler:    _PostgresMigrate_NotificationType_Update_Name_Handler,
		},
		{
			MethodName: "NotificationType_Update_Value",
			Handler:    _PostgresMigrate_NotificationType_Update_Value_Handler,
		},
		{
			MethodName: "NotificationType_ReadFromCache",
			Handler:    _PostgresMigrate_NotificationType_ReadFromCache_Handler,
		},
		{
			MethodName: "NotificationType_UpdateManyFields",
			Handler:    _PostgresMigrate_NotificationType_UpdateManyFields_Handler,
		},
		{
			MethodName: "NotificationType_ReadObject",
			Handler:    _PostgresMigrate_NotificationType_ReadObject_Handler,
		},
		{
			MethodName: "Organization_Read",
			Handler:    _PostgresMigrate_Organization_Read_Handler,
		},
		{
			MethodName: "Organization_Create",
			Handler:    _PostgresMigrate_Organization_Create_Handler,
		},
		{
			MethodName: "Organization_Update",
			Handler:    _PostgresMigrate_Organization_Update_Handler,
		},
		{
			MethodName: "Organization_Save",
			Handler:    _PostgresMigrate_Organization_Save_Handler,
		},
		{
			MethodName: "Organization_Delete",
			Handler:    _PostgresMigrate_Organization_Delete_Handler,
		},
		{
			MethodName: "Organization_Restore",
			Handler:    _PostgresMigrate_Organization_Restore_Handler,
		},
		{
			MethodName: "Organization_FindByInnKpp",
			Handler:    _PostgresMigrate_Organization_FindByInnKpp_Handler,
		},
		{
			MethodName: "Organization_FindBy_InnKppLegaltype",
			Handler:    _PostgresMigrate_Organization_FindBy_InnKppLegaltype_Handler,
		},
		{
			MethodName: "Organization_FindByExtId",
			Handler:    _PostgresMigrate_Organization_FindByExtId_Handler,
		},
		{
			MethodName: "Organization_FindByExtID",
			Handler:    _PostgresMigrate_Organization_FindByExtID_Handler,
		},
		{
			MethodName: "Organization_Update_BankruptAt",
			Handler:    _PostgresMigrate_Organization_Update_BankruptAt_Handler,
		},
		{
			MethodName: "Organization_Update_BookkeeperName",
			Handler:    _PostgresMigrate_Organization_Update_BookkeeperName_Handler,
		},
		{
			MethodName: "Organization_Update_CategoryID",
			Handler:    _PostgresMigrate_Organization_Update_CategoryID_Handler,
		},
		{
			MethodName: "Organization_Update_ConnectionID",
			Handler:    _PostgresMigrate_Organization_Update_ConnectionID_Handler,
		},
		{
			MethodName: "Organization_Update_Description",
			Handler:    _PostgresMigrate_Organization_Update_Description_Handler,
		},
		{
			MethodName: "Organization_Update_Email",
			Handler:    _PostgresMigrate_Organization_Update_Email_Handler,
		},
		{
			MethodName: "Organization_Update_FullName",
			Handler:    _PostgresMigrate_Organization_Update_FullName_Handler,
		},
		{
			MethodName: "Organization_Update_INN",
			Handler:    _PostgresMigrate_Organization_Update_INN_Handler,
		},
		{
			MethodName: "Organization_Update_IsActive",
			Handler:    _PostgresMigrate_Organization_Update_IsActive_Handler,
		},
		{
			MethodName: "Organization_Update_IsBankrupt",
			Handler:    _PostgresMigrate_Organization_Update_IsBankrupt_Handler,
		},
		{
			MethodName: "Organization_Update_IsLiquidated",
			Handler:    _PostgresMigrate_Organization_Update_IsLiquidated_Handler,
		},
		{
			MethodName: "Organization_Update_KPP",
			Handler:    _PostgresMigrate_Organization_Update_KPP_Handler,
		},
		{
			MethodName: "Organization_Update_LegalAddress",
			Handler:    _PostgresMigrate_Organization_Update_LegalAddress_Handler,
		},
		{
			MethodName: "Organization_Update_LegalEmail",
			Handler:    _PostgresMigrate_Organization_Update_LegalEmail_Handler,
		},
		{
			MethodName: "Organization_Update_LegalTypeID",
			Handler:    _PostgresMigrate_Organization_Update_LegalTypeID_Handler,
		},
		{
			MethodName: "Organization_Update_LiquidateAt",
			Handler:    _PostgresMigrate_Organization_Update_LiquidateAt_Handler,
		},
		{
			MethodName: "Organization_Update_ManagerName",
			Handler:    _PostgresMigrate_Organization_Update_ManagerName_Handler,
		},
		{
			MethodName: "Organization_Update_Name",
			Handler:    _PostgresMigrate_Organization_Update_Name_Handler,
		},
		{
			MethodName: "Organization_Update_NSIFlat",
			Handler:    _PostgresMigrate_Organization_Update_NSIFlat_Handler,
		},
		{
			MethodName: "Organization_Update_NSIFlatID",
			Handler:    _PostgresMigrate_Organization_Update_NSIFlatID_Handler,
		},
		{
			MethodName: "Organization_Update_NSIID",
			Handler:    _PostgresMigrate_Organization_Update_NSIID_Handler,
		},
		{
			MethodName: "Organization_Update_OGRN",
			Handler:    _PostgresMigrate_Organization_Update_OGRN_Handler,
		},
		{
			MethodName: "Organization_Update_OKATO",
			Handler:    _PostgresMigrate_Organization_Update_OKATO_Handler,
		},
		{
			MethodName: "Organization_Update_OKPO",
			Handler:    _PostgresMigrate_Organization_Update_OKPO_Handler,
		},
		{
			MethodName: "Organization_Update_Phone",
			Handler:    _PostgresMigrate_Organization_Update_Phone_Handler,
		},
		{
			MethodName: "Organization_Update_PostAddress",
			Handler:    _PostgresMigrate_Organization_Update_PostAddress_Handler,
		},
		{
			MethodName: "Organization_Update_PostAddressID",
			Handler:    _PostgresMigrate_Organization_Update_PostAddressID_Handler,
		},
		{
			MethodName: "Organization_Update_RegistrationAt",
			Handler:    _PostgresMigrate_Organization_Update_RegistrationAt_Handler,
		},
		{
			MethodName: "Organization_Update_StateCode",
			Handler:    _PostgresMigrate_Organization_Update_StateCode_Handler,
		},
		{
			MethodName: "Organization_Update_StateID",
			Handler:    _PostgresMigrate_Organization_Update_StateID_Handler,
		},
		{
			MethodName: "Organization_Update_WWW",
			Handler:    _PostgresMigrate_Organization_Update_WWW_Handler,
		},
		{
			MethodName: "Organization_ReadFromCache",
			Handler:    _PostgresMigrate_Organization_ReadFromCache_Handler,
		},
		{
			MethodName: "Organization_UpdateManyFields",
			Handler:    _PostgresMigrate_Organization_UpdateManyFields_Handler,
		},
		{
			MethodName: "Organization_Update_LegalAddressStack",
			Handler:    _PostgresMigrate_Organization_Update_LegalAddressStack_Handler,
		},
		{
			MethodName: "Organization_ReadObject",
			Handler:    _PostgresMigrate_Organization_ReadObject_Handler,
		},
		{
			MethodName: "OrganizationsFile_Read",
			Handler:    _PostgresMigrate_OrganizationsFile_Read_Handler,
		},
		{
			MethodName: "OrganizationsFile_Create",
			Handler:    _PostgresMigrate_OrganizationsFile_Create_Handler,
		},
		{
			MethodName: "OrganizationsFile_Update",
			Handler:    _PostgresMigrate_OrganizationsFile_Update_Handler,
		},
		{
			MethodName: "OrganizationsFile_Save",
			Handler:    _PostgresMigrate_OrganizationsFile_Save_Handler,
		},
		{
			MethodName: "OrganizationsFile_Delete",
			Handler:    _PostgresMigrate_OrganizationsFile_Delete_Handler,
		},
		{
			MethodName: "OrganizationsFile_Restore",
			Handler:    _PostgresMigrate_OrganizationsFile_Restore_Handler,
		},
		{
			MethodName: "OrganizationsFile_UpdateManyFields",
			Handler:    _PostgresMigrate_OrganizationsFile_UpdateManyFields_Handler,
		},
		{
			MethodName: "OrganizationsFile_Update_FileID",
			Handler:    _PostgresMigrate_OrganizationsFile_Update_FileID_Handler,
		},
		{
			MethodName: "OrganizationsFile_Update_OrganizationID",
			Handler:    _PostgresMigrate_OrganizationsFile_Update_OrganizationID_Handler,
		},
		{
			MethodName: "OrganizationsFile_ReadFromCache",
			Handler:    _PostgresMigrate_OrganizationsFile_ReadFromCache_Handler,
		},
		{
			MethodName: "OrganizationsFile_ReadObject",
			Handler:    _PostgresMigrate_OrganizationsFile_ReadObject_Handler,
		},
		{
			MethodName: "OrganizationCasebook_Read",
			Handler:    _PostgresMigrate_OrganizationCasebook_Read_Handler,
		},
		{
			MethodName: "OrganizationCasebook_Create",
			Handler:    _PostgresMigrate_OrganizationCasebook_Create_Handler,
		},
		{
			MethodName: "OrganizationCasebook_Update",
			Handler:    _PostgresMigrate_OrganizationCasebook_Update_Handler,
		},
		{
			MethodName: "OrganizationCasebook_Save",
			Handler:    _PostgresMigrate_OrganizationCasebook_Save_Handler,
		},
		{
			MethodName: "OrganizationCasebook_Delete",
			Handler:    _PostgresMigrate_OrganizationCasebook_Delete_Handler,
		},
		{
			MethodName: "OrganizationCasebook_Restore",
			Handler:    _PostgresMigrate_OrganizationCasebook_Restore_Handler,
		},
		{
			MethodName: "OrganizationCasebook_FindByInnKpp",
			Handler:    _PostgresMigrate_OrganizationCasebook_FindByInnKpp_Handler,
		},
		{
			MethodName: "OrganizationCasebook_FindByInn",
			Handler:    _PostgresMigrate_OrganizationCasebook_FindByInn_Handler,
		},
		{
			MethodName: "OrganizationCasebook_FindByOrganizationId",
			Handler:    _PostgresMigrate_OrganizationCasebook_FindByOrganizationId_Handler,
		},
		{
			MethodName: "OrganizationCasebook_Update_INN",
			Handler:    _PostgresMigrate_OrganizationCasebook_Update_INN_Handler,
		},
		{
			MethodName: "OrganizationCasebook_Update_JSONFileID",
			Handler:    _PostgresMigrate_OrganizationCasebook_Update_JSONFileID_Handler,
		},
		{
			MethodName: "OrganizationCasebook_Update_JSONUpdatedAt",
			Handler:    _PostgresMigrate_OrganizationCasebook_Update_JSONUpdatedAt_Handler,
		},
		{
			MethodName: "OrganizationCasebook_Update_OrganizationID",
			Handler:    _PostgresMigrate_OrganizationCasebook_Update_OrganizationID_Handler,
		},
		{
			MethodName: "OrganizationCasebook_Update_PDFFileID",
			Handler:    _PostgresMigrate_OrganizationCasebook_Update_PDFFileID_Handler,
		},
		{
			MethodName: "OrganizationCasebook_Update_PDFUpdatedAt",
			Handler:    _PostgresMigrate_OrganizationCasebook_Update_PDFUpdatedAt_Handler,
		},
		{
			MethodName: "OrganizationCasebook_ReadFromCache",
			Handler:    _PostgresMigrate_OrganizationCasebook_ReadFromCache_Handler,
		},
		{
			MethodName: "OrganizationCasebook_UpdateManyFields",
			Handler:    _PostgresMigrate_OrganizationCasebook_UpdateManyFields_Handler,
		},
		{
			MethodName: "OrganizationCasebook_ReadObject",
			Handler:    _PostgresMigrate_OrganizationCasebook_ReadObject_Handler,
		},
		{
			MethodName: "OrganizationCategoryType_Read",
			Handler:    _PostgresMigrate_OrganizationCategoryType_Read_Handler,
		},
		{
			MethodName: "OrganizationCategoryType_Create",
			Handler:    _PostgresMigrate_OrganizationCategoryType_Create_Handler,
		},
		{
			MethodName: "OrganizationCategoryType_Update",
			Handler:    _PostgresMigrate_OrganizationCategoryType_Update_Handler,
		},
		{
			MethodName: "OrganizationCategoryType_Save",
			Handler:    _PostgresMigrate_OrganizationCategoryType_Save_Handler,
		},
		{
			MethodName: "OrganizationCategoryType_FindByExtID",
			Handler:    _PostgresMigrate_OrganizationCategoryType_FindByExtID_Handler,
		},
		{
			MethodName: "OrganizationCategoryType_Delete",
			Handler:    _PostgresMigrate_OrganizationCategoryType_Delete_Handler,
		},
		{
			MethodName: "OrganizationCategoryType_Restore",
			Handler:    _PostgresMigrate_OrganizationCategoryType_Restore_Handler,
		},
		{
			MethodName: "OrganizationCategoryType_Update_ConnectionID",
			Handler:    _PostgresMigrate_OrganizationCategoryType_Update_ConnectionID_Handler,
		},
		{
			MethodName: "OrganizationCategoryType_Update_Description",
			Handler:    _PostgresMigrate_OrganizationCategoryType_Update_Description_Handler,
		},
		{
			MethodName: "OrganizationCategoryType_Update_Name",
			Handler:    _PostgresMigrate_OrganizationCategoryType_Update_Name_Handler,
		},
		{
			MethodName: "OrganizationCategoryType_ReadFromCache",
			Handler:    _PostgresMigrate_OrganizationCategoryType_ReadFromCache_Handler,
		},
		{
			MethodName: "OrganizationCategoryType_UpdateManyFields",
			Handler:    _PostgresMigrate_OrganizationCategoryType_UpdateManyFields_Handler,
		},
		{
			MethodName: "OrganizationCategoryType_ReadObject",
			Handler:    _PostgresMigrate_OrganizationCategoryType_ReadObject_Handler,
		},
		{
			MethodName: "OrganizationStateType_Read",
			Handler:    _PostgresMigrate_OrganizationStateType_Read_Handler,
		},
		{
			MethodName: "OrganizationStateType_Create",
			Handler:    _PostgresMigrate_OrganizationStateType_Create_Handler,
		},
		{
			MethodName: "OrganizationStateType_Update",
			Handler:    _PostgresMigrate_OrganizationStateType_Update_Handler,
		},
		{
			MethodName: "OrganizationStateType_Save",
			Handler:    _PostgresMigrate_OrganizationStateType_Save_Handler,
		},
		{
			MethodName: "OrganizationStateType_Delete",
			Handler:    _PostgresMigrate_OrganizationStateType_Delete_Handler,
		},
		{
			MethodName: "OrganizationStateType_Restore",
			Handler:    _PostgresMigrate_OrganizationStateType_Restore_Handler,
		},
		{
			MethodName: "OrganizationStateType_Update_ActionIndividual",
			Handler:    _PostgresMigrate_OrganizationStateType_Update_ActionIndividual_Handler,
		},
		{
			MethodName: "OrganizationStateType_Update_ActionOrganization",
			Handler:    _PostgresMigrate_OrganizationStateType_Update_ActionOrganization_Handler,
		},
		{
			MethodName: "OrganizationStateType_Update_Code",
			Handler:    _PostgresMigrate_OrganizationStateType_Update_Code_Handler,
		},
		{
			MethodName: "OrganizationStateType_Update_Color",
			Handler:    _PostgresMigrate_OrganizationStateType_Update_Color_Handler,
		},
		{
			MethodName: "OrganizationStateType_Update_Description",
			Handler:    _PostgresMigrate_OrganizationStateType_Update_Description_Handler,
		},
		{
			MethodName: "OrganizationStateType_Update_Name",
			Handler:    _PostgresMigrate_OrganizationStateType_Update_Name_Handler,
		},
		{
			MethodName: "OrganizationStateType_ReadFromCache",
			Handler:    _PostgresMigrate_OrganizationStateType_ReadFromCache_Handler,
		},
		{
			MethodName: "OrganizationStateType_UpdateManyFields",
			Handler:    _PostgresMigrate_OrganizationStateType_UpdateManyFields_Handler,
		},
		{
			MethodName: "OrganizationStateType_Update_IsBankrupt",
			Handler:    _PostgresMigrate_OrganizationStateType_Update_IsBankrupt_Handler,
		},
		{
			MethodName: "OrganizationStateType_Update_IsLiquidated",
			Handler:    _PostgresMigrate_OrganizationStateType_Update_IsLiquidated_Handler,
		},
		{
			MethodName: "OrganizationStateType_ReadObject",
			Handler:    _PostgresMigrate_OrganizationStateType_ReadObject_Handler,
		},
		{
			MethodName: "PaymentDay_Read",
			Handler:    _PostgresMigrate_PaymentDay_Read_Handler,
		},
		{
			MethodName: "PaymentDay_Create",
			Handler:    _PostgresMigrate_PaymentDay_Create_Handler,
		},
		{
			MethodName: "PaymentDay_Update",
			Handler:    _PostgresMigrate_PaymentDay_Update_Handler,
		},
		{
			MethodName: "PaymentDay_Save",
			Handler:    _PostgresMigrate_PaymentDay_Save_Handler,
		},
		{
			MethodName: "PaymentDay_FindByExtID",
			Handler:    _PostgresMigrate_PaymentDay_FindByExtID_Handler,
		},
		{
			MethodName: "PaymentDay_Delete",
			Handler:    _PostgresMigrate_PaymentDay_Delete_Handler,
		},
		{
			MethodName: "PaymentDay_Restore",
			Handler:    _PostgresMigrate_PaymentDay_Restore_Handler,
		},
		{
			MethodName: "PaymentDay_Update_ConnectionID",
			Handler:    _PostgresMigrate_PaymentDay_Update_ConnectionID_Handler,
		},
		{
			MethodName: "PaymentDay_Update_ContractID",
			Handler:    _PostgresMigrate_PaymentDay_Update_ContractID_Handler,
		},
		{
			MethodName: "PaymentDay_Update_DateFrom",
			Handler:    _PostgresMigrate_PaymentDay_Update_DateFrom_Handler,
		},
		{
			MethodName: "PaymentDay_Update_DateTo",
			Handler:    _PostgresMigrate_PaymentDay_Update_DateTo_Handler,
		},
		{
			MethodName: "PaymentDay_Update_Day",
			Handler:    _PostgresMigrate_PaymentDay_Update_Day_Handler,
		},
		{
			MethodName: "PaymentDay_ReadFromCache",
			Handler:    _PostgresMigrate_PaymentDay_ReadFromCache_Handler,
		},
		{
			MethodName: "PaymentDay_UpdateManyFields",
			Handler:    _PostgresMigrate_PaymentDay_UpdateManyFields_Handler,
		},
		{
			MethodName: "PaymentDay_ReadObject",
			Handler:    _PostgresMigrate_PaymentDay_ReadObject_Handler,
		},
		{
			MethodName: "PaymentSchedule_Read",
			Handler:    _PostgresMigrate_PaymentSchedule_Read_Handler,
		},
		{
			MethodName: "PaymentSchedule_Create",
			Handler:    _PostgresMigrate_PaymentSchedule_Create_Handler,
		},
		{
			MethodName: "PaymentSchedule_Update",
			Handler:    _PostgresMigrate_PaymentSchedule_Update_Handler,
		},
		{
			MethodName: "PaymentSchedule_Save",
			Handler:    _PostgresMigrate_PaymentSchedule_Save_Handler,
		},
		{
			MethodName: "PaymentSchedule_FindByExtID",
			Handler:    _PostgresMigrate_PaymentSchedule_FindByExtID_Handler,
		},
		{
			MethodName: "PaymentSchedule_Delete",
			Handler:    _PostgresMigrate_PaymentSchedule_Delete_Handler,
		},
		{
			MethodName: "PaymentSchedule_Restore",
			Handler:    _PostgresMigrate_PaymentSchedule_Restore_Handler,
		},
		{
			MethodName: "PaymentSchedule_Update_ConnectionID",
			Handler:    _PostgresMigrate_PaymentSchedule_Update_ConnectionID_Handler,
		},
		{
			MethodName: "PaymentSchedule_Update_ContractID",
			Handler:    _PostgresMigrate_PaymentSchedule_Update_ContractID_Handler,
		},
		{
			MethodName: "PaymentSchedule_Update_DateFrom",
			Handler:    _PostgresMigrate_PaymentSchedule_Update_DateFrom_Handler,
		},
		{
			MethodName: "PaymentSchedule_Update_DateTo",
			Handler:    _PostgresMigrate_PaymentSchedule_Update_DateTo_Handler,
		},
		{
			MethodName: "PaymentSchedule_Update_Day",
			Handler:    _PostgresMigrate_PaymentSchedule_Update_Day_Handler,
		},
		{
			MethodName: "PaymentSchedule_Update_Percent",
			Handler:    _PostgresMigrate_PaymentSchedule_Update_Percent_Handler,
		},
		{
			MethodName: "PaymentSchedule_ReadFromCache",
			Handler:    _PostgresMigrate_PaymentSchedule_ReadFromCache_Handler,
		},
		{
			MethodName: "PaymentSchedule_UpdateManyFields",
			Handler:    _PostgresMigrate_PaymentSchedule_UpdateManyFields_Handler,
		},
		{
			MethodName: "PaymentSchedule_ReadObject",
			Handler:    _PostgresMigrate_PaymentSchedule_ReadObject_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_Read",
			Handler:    _PostgresMigrate_PenaltyCalculationItem_Read_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_Create",
			Handler:    _PostgresMigrate_PenaltyCalculationItem_Create_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_Update",
			Handler:    _PostgresMigrate_PenaltyCalculationItem_Update_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_Save",
			Handler:    _PostgresMigrate_PenaltyCalculationItem_Save_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_FindByExtID",
			Handler:    _PostgresMigrate_PenaltyCalculationItem_FindByExtID_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_Delete",
			Handler:    _PostgresMigrate_PenaltyCalculationItem_Delete_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_Restore",
			Handler:    _PostgresMigrate_PenaltyCalculationItem_Restore_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_Update_BillingMonth",
			Handler:    _PostgresMigrate_PenaltyCalculationItem_Update_BillingMonth_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_Update_ConnectionID",
			Handler:    _PostgresMigrate_PenaltyCalculationItem_Update_ConnectionID_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_Update_ContractID",
			Handler:    _PostgresMigrate_PenaltyCalculationItem_Update_ContractID_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_Update_DateFrom",
			Handler:    _PostgresMigrate_PenaltyCalculationItem_Update_DateFrom_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_Update_DateTo",
			Handler:    _PostgresMigrate_PenaltyCalculationItem_Update_DateTo_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_Update_DaysCount",
			Handler:    _PostgresMigrate_PenaltyCalculationItem_Update_DaysCount_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_Update_DebtSum",
			Handler:    _PostgresMigrate_PenaltyCalculationItem_Update_DebtSum_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_Update_DebtorCategoryID",
			Handler:    _PostgresMigrate_PenaltyCalculationItem_Update_DebtorCategoryID_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_Update_Dividend",
			Handler:    _PostgresMigrate_PenaltyCalculationItem_Update_Dividend_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_Update_Divider",
			Handler:    _PostgresMigrate_PenaltyCalculationItem_Update_Divider_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_Update_DocumentInvoiceID",
			Handler:    _PostgresMigrate_PenaltyCalculationItem_Update_DocumentInvoiceID_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_Update_Flags",
			Handler:    _PostgresMigrate_PenaltyCalculationItem_Update_Flags_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_Update_PaymentDueAt",
			Handler:    _PostgresMigrate_PenaltyCalculationItem_Update_PaymentDueAt_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_Update_PenaltyCalculationItemsTypeID",
			Handler:    _PostgresMigrate_PenaltyCalculationItem_Update_PenaltyCalculationItemsTypeID_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_Update_Percent",
			Handler:    _PostgresMigrate_PenaltyCalculationItem_Update_Percent_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_Update_Sum",
			Handler:    _PostgresMigrate_PenaltyCalculationItem_Update_Sum_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_ReadFromCache",
			Handler:    _PostgresMigrate_PenaltyCalculationItem_ReadFromCache_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_UpdateManyFields",
			Handler:    _PostgresMigrate_PenaltyCalculationItem_UpdateManyFields_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_Update_DebtCollectionID",
			Handler:    _PostgresMigrate_PenaltyCalculationItem_Update_DebtCollectionID_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_ReadObject",
			Handler:    _PostgresMigrate_PenaltyCalculationItem_ReadObject_Handler,
		},
		{
			MethodName: "PenaltyCalculationItemsType_Read",
			Handler:    _PostgresMigrate_PenaltyCalculationItemsType_Read_Handler,
		},
		{
			MethodName: "PenaltyCalculationItemsType_Create",
			Handler:    _PostgresMigrate_PenaltyCalculationItemsType_Create_Handler,
		},
		{
			MethodName: "PenaltyCalculationItemsType_Update",
			Handler:    _PostgresMigrate_PenaltyCalculationItemsType_Update_Handler,
		},
		{
			MethodName: "PenaltyCalculationItemsType_Save",
			Handler:    _PostgresMigrate_PenaltyCalculationItemsType_Save_Handler,
		},
		{
			MethodName: "PenaltyCalculationItemsType_Delete",
			Handler:    _PostgresMigrate_PenaltyCalculationItemsType_Delete_Handler,
		},
		{
			MethodName: "PenaltyCalculationItemsType_Restore",
			Handler:    _PostgresMigrate_PenaltyCalculationItemsType_Restore_Handler,
		},
		{
			MethodName: "PenaltyCalculationItemsType_UpdateManyFields",
			Handler:    _PostgresMigrate_PenaltyCalculationItemsType_UpdateManyFields_Handler,
		},
		{
			MethodName: "PenaltyCalculationItemsType_Update_Code",
			Handler:    _PostgresMigrate_PenaltyCalculationItemsType_Update_Code_Handler,
		},
		{
			MethodName: "PenaltyCalculationItemsType_Update_Description",
			Handler:    _PostgresMigrate_PenaltyCalculationItemsType_Update_Description_Handler,
		},
		{
			MethodName: "PenaltyCalculationItemsType_Update_Name",
			Handler:    _PostgresMigrate_PenaltyCalculationItemsType_Update_Name_Handler,
		},
		{
			MethodName: "PenaltyCalculationItemsType_ReadFromCache",
			Handler:    _PostgresMigrate_PenaltyCalculationItemsType_ReadFromCache_Handler,
		},
		{
			MethodName: "PenaltyCalculationItemsType_ReadObject",
			Handler:    _PostgresMigrate_PenaltyCalculationItemsType_ReadObject_Handler,
		},
		{
			MethodName: "PriorityType_Read",
			Handler:    _PostgresMigrate_PriorityType_Read_Handler,
		},
		{
			MethodName: "PriorityType_Create",
			Handler:    _PostgresMigrate_PriorityType_Create_Handler,
		},
		{
			MethodName: "PriorityType_Update",
			Handler:    _PostgresMigrate_PriorityType_Update_Handler,
		},
		{
			MethodName: "PriorityType_Save",
			Handler:    _PostgresMigrate_PriorityType_Save_Handler,
		},
		{
			MethodName: "PriorityType_Delete",
			Handler:    _PostgresMigrate_PriorityType_Delete_Handler,
		},
		{
			MethodName: "PriorityType_Restore",
			Handler:    _PostgresMigrate_PriorityType_Restore_Handler,
		},
		{
			MethodName: "PriorityType_Update_Code",
			Handler:    _PostgresMigrate_PriorityType_Update_Code_Handler,
		},
		{
			MethodName: "PriorityType_Update_Description",
			Handler:    _PostgresMigrate_PriorityType_Update_Description_Handler,
		},
		{
			MethodName: "PriorityType_Update_Name",
			Handler:    _PostgresMigrate_PriorityType_Update_Name_Handler,
		},
		{
			MethodName: "PriorityType_Update_Value",
			Handler:    _PostgresMigrate_PriorityType_Update_Value_Handler,
		},
		{
			MethodName: "PriorityType_ReadFromCache",
			Handler:    _PostgresMigrate_PriorityType_ReadFromCache_Handler,
		},
		{
			MethodName: "PriorityType_UpdateManyFields",
			Handler:    _PostgresMigrate_PriorityType_UpdateManyFields_Handler,
		},
		{
			MethodName: "PriorityType_ReadObject",
			Handler:    _PostgresMigrate_PriorityType_ReadObject_Handler,
		},
		{
			MethodName: "RepeatType_Read",
			Handler:    _PostgresMigrate_RepeatType_Read_Handler,
		},
		{
			MethodName: "RepeatType_Create",
			Handler:    _PostgresMigrate_RepeatType_Create_Handler,
		},
		{
			MethodName: "RepeatType_Update",
			Handler:    _PostgresMigrate_RepeatType_Update_Handler,
		},
		{
			MethodName: "RepeatType_Save",
			Handler:    _PostgresMigrate_RepeatType_Save_Handler,
		},
		{
			MethodName: "RepeatType_Delete",
			Handler:    _PostgresMigrate_RepeatType_Delete_Handler,
		},
		{
			MethodName: "RepeatType_Restore",
			Handler:    _PostgresMigrate_RepeatType_Restore_Handler,
		},
		{
			MethodName: "RepeatType_Update_Code",
			Handler:    _PostgresMigrate_RepeatType_Update_Code_Handler,
		},
		{
			MethodName: "RepeatType_Update_Description",
			Handler:    _PostgresMigrate_RepeatType_Update_Description_Handler,
		},
		{
			MethodName: "RepeatType_Update_Name",
			Handler:    _PostgresMigrate_RepeatType_Update_Name_Handler,
		},
		{
			MethodName: "RepeatType_ReadFromCache",
			Handler:    _PostgresMigrate_RepeatType_ReadFromCache_Handler,
		},
		{
			MethodName: "RepeatType_UpdateManyFields",
			Handler:    _PostgresMigrate_RepeatType_UpdateManyFields_Handler,
		},
		{
			MethodName: "RepeatType_ReadObject",
			Handler:    _PostgresMigrate_RepeatType_ReadObject_Handler,
		},
		{
			MethodName: "ServiceProvider_Read",
			Handler:    _PostgresMigrate_ServiceProvider_Read_Handler,
		},
		{
			MethodName: "ServiceProvider_Create",
			Handler:    _PostgresMigrate_ServiceProvider_Create_Handler,
		},
		{
			MethodName: "ServiceProvider_Update",
			Handler:    _PostgresMigrate_ServiceProvider_Update_Handler,
		},
		{
			MethodName: "ServiceProvider_Save",
			Handler:    _PostgresMigrate_ServiceProvider_Save_Handler,
		},
		{
			MethodName: "ServiceProvider_FindByExtID",
			Handler:    _PostgresMigrate_ServiceProvider_FindByExtID_Handler,
		},
		{
			MethodName: "ServiceProvider_Delete",
			Handler:    _PostgresMigrate_ServiceProvider_Delete_Handler,
		},
		{
			MethodName: "ServiceProvider_Restore",
			Handler:    _PostgresMigrate_ServiceProvider_Restore_Handler,
		},
		{
			MethodName: "ServiceProvider_Update_ConnectionID",
			Handler:    _PostgresMigrate_ServiceProvider_Update_ConnectionID_Handler,
		},
		{
			MethodName: "ServiceProvider_Update_DateFrom",
			Handler:    _PostgresMigrate_ServiceProvider_Update_DateFrom_Handler,
		},
		{
			MethodName: "ServiceProvider_Update_DateTo",
			Handler:    _PostgresMigrate_ServiceProvider_Update_DateTo_Handler,
		},
		{
			MethodName: "ServiceProvider_Update_OrganizationID",
			Handler:    _PostgresMigrate_ServiceProvider_Update_OrganizationID_Handler,
		},
		{
			MethodName: "ServiceProvider_ReadFromCache",
			Handler:    _PostgresMigrate_ServiceProvider_ReadFromCache_Handler,
		},
		{
			MethodName: "ServiceProvider_UpdateManyFields",
			Handler:    _PostgresMigrate_ServiceProvider_UpdateManyFields_Handler,
		},
		{
			MethodName: "ServiceProvider_ReadObject",
			Handler:    _PostgresMigrate_ServiceProvider_ReadObject_Handler,
		},
		{
			MethodName: "ServiceType_Read",
			Handler:    _PostgresMigrate_ServiceType_Read_Handler,
		},
		{
			MethodName: "ServiceType_Create",
			Handler:    _PostgresMigrate_ServiceType_Create_Handler,
		},
		{
			MethodName: "ServiceType_Update",
			Handler:    _PostgresMigrate_ServiceType_Update_Handler,
		},
		{
			MethodName: "ServiceType_Save",
			Handler:    _PostgresMigrate_ServiceType_Save_Handler,
		},
		{
			MethodName: "ServiceType_FindByExtID",
			Handler:    _PostgresMigrate_ServiceType_FindByExtID_Handler,
		},
		{
			MethodName: "ServiceType_Delete",
			Handler:    _PostgresMigrate_ServiceType_Delete_Handler,
		},
		{
			MethodName: "ServiceType_Restore",
			Handler:    _PostgresMigrate_ServiceType_Restore_Handler,
		},
		{
			MethodName: "ServiceType_Update_Code",
			Handler:    _PostgresMigrate_ServiceType_Update_Code_Handler,
		},
		{
			MethodName: "ServiceType_Update_ConnectionID",
			Handler:    _PostgresMigrate_ServiceType_Update_ConnectionID_Handler,
		},
		{
			MethodName: "ServiceType_Update_Description",
			Handler:    _PostgresMigrate_ServiceType_Update_Description_Handler,
		},
		{
			MethodName: "ServiceType_Update_FullName",
			Handler:    _PostgresMigrate_ServiceType_Update_FullName_Handler,
		},
		{
			MethodName: "ServiceType_Update_Measure",
			Handler:    _PostgresMigrate_ServiceType_Update_Measure_Handler,
		},
		{
			MethodName: "ServiceType_Update_Name",
			Handler:    _PostgresMigrate_ServiceType_Update_Name_Handler,
		},
		{
			MethodName: "ServiceType_Update_ServiceProviderID",
			Handler:    _PostgresMigrate_ServiceType_Update_ServiceProviderID_Handler,
		},
		{
			MethodName: "ServiceType_ReadFromCache",
			Handler:    _PostgresMigrate_ServiceType_ReadFromCache_Handler,
		},
		{
			MethodName: "ServiceType_UpdateManyFields",
			Handler:    _PostgresMigrate_ServiceType_UpdateManyFields_Handler,
		},
		{
			MethodName: "ServiceType_ReadObject",
			Handler:    _PostgresMigrate_ServiceType_ReadObject_Handler,
		},
		{
			MethodName: "StateDuty_Read",
			Handler:    _PostgresMigrate_StateDuty_Read_Handler,
		},
		{
			MethodName: "StateDuty_Create",
			Handler:    _PostgresMigrate_StateDuty_Create_Handler,
		},
		{
			MethodName: "StateDuty_Update",
			Handler:    _PostgresMigrate_StateDuty_Update_Handler,
		},
		{
			MethodName: "StateDuty_Save",
			Handler:    _PostgresMigrate_StateDuty_Save_Handler,
		},
		{
			MethodName: "StateDuty_Delete",
			Handler:    _PostgresMigrate_StateDuty_Delete_Handler,
		},
		{
			MethodName: "StateDuty_Restore",
			Handler:    _PostgresMigrate_StateDuty_Restore_Handler,
		},
		{
			MethodName: "StateDuty_Update_CourtID",
			Handler:    _PostgresMigrate_StateDuty_Update_CourtID_Handler,
		},
		{
			MethodName: "StateDuty_Update_Description",
			Handler:    _PostgresMigrate_StateDuty_Update_Description_Handler,
		},
		{
			MethodName: "StateDuty_Update_LawsuitID",
			Handler:    _PostgresMigrate_StateDuty_Update_LawsuitID_Handler,
		},
		{
			MethodName: "StateDuty_Update_Name",
			Handler:    _PostgresMigrate_StateDuty_Update_Name_Handler,
		},
		{
			MethodName: "StateDuty_Update_RequestDate",
			Handler:    _PostgresMigrate_StateDuty_Update_RequestDate_Handler,
		},
		{
			MethodName: "StateDuty_Update_RequestNumber",
			Handler:    _PostgresMigrate_StateDuty_Update_RequestNumber_Handler,
		},
		{
			MethodName: "StateDuty_Update_Sum",
			Handler:    _PostgresMigrate_StateDuty_Update_Sum_Handler,
		},
		{
			MethodName: "StateDuty_ReadFromCache",
			Handler:    _PostgresMigrate_StateDuty_ReadFromCache_Handler,
		},
		{
			MethodName: "StateDuty_UpdateManyFields",
			Handler:    _PostgresMigrate_StateDuty_UpdateManyFields_Handler,
		},
		{
			MethodName: "StateDuty_ReadObject",
			Handler:    _PostgresMigrate_StateDuty_ReadObject_Handler,
		},
		{
			MethodName: "StateDutyConsumption_Read",
			Handler:    _PostgresMigrate_StateDutyConsumption_Read_Handler,
		},
		{
			MethodName: "StateDutyConsumption_Create",
			Handler:    _PostgresMigrate_StateDutyConsumption_Create_Handler,
		},
		{
			MethodName: "StateDutyConsumption_Update",
			Handler:    _PostgresMigrate_StateDutyConsumption_Update_Handler,
		},
		{
			MethodName: "StateDutyConsumption_Save",
			Handler:    _PostgresMigrate_StateDutyConsumption_Save_Handler,
		},
		{
			MethodName: "StateDutyConsumption_Delete",
			Handler:    _PostgresMigrate_StateDutyConsumption_Delete_Handler,
		},
		{
			MethodName: "StateDutyConsumption_Restore",
			Handler:    _PostgresMigrate_StateDutyConsumption_Restore_Handler,
		},
		{
			MethodName: "StateDutyConsumption_UpdateManyFields",
			Handler:    _PostgresMigrate_StateDutyConsumption_UpdateManyFields_Handler,
		},
		{
			MethodName: "StateDutyConsumption_Update_CourtSuitID",
			Handler:    _PostgresMigrate_StateDutyConsumption_Update_CourtSuitID_Handler,
		},
		{
			MethodName: "StateDutyConsumption_Update_StateDutyPaymentsPaymentID",
			Handler:    _PostgresMigrate_StateDutyConsumption_Update_StateDutyPaymentsPaymentID_Handler,
		},
		{
			MethodName: "StateDutyConsumption_Update_StateDutyPaymentsReturnID",
			Handler:    _PostgresMigrate_StateDutyConsumption_Update_StateDutyPaymentsReturnID_Handler,
		},
		{
			MethodName: "StateDutyConsumption_Update_StateDutyRegistryID",
			Handler:    _PostgresMigrate_StateDutyConsumption_Update_StateDutyRegistryID_Handler,
		},
		{
			MethodName: "StateDutyConsumption_Update_StateDutySum",
			Handler:    _PostgresMigrate_StateDutyConsumption_Update_StateDutySum_Handler,
		},
		{
			MethodName: "StateDutyConsumption_Update_StatusID",
			Handler:    _PostgresMigrate_StateDutyConsumption_Update_StatusID_Handler,
		},
		{
			MethodName: "StateDutyConsumption_ReadFromCache",
			Handler:    _PostgresMigrate_StateDutyConsumption_ReadFromCache_Handler,
		},
		{
			MethodName: "StateDutyConsumption_ReadObject",
			Handler:    _PostgresMigrate_StateDutyConsumption_ReadObject_Handler,
		},
		{
			MethodName: "StateDutyConsumptionsFile_Read",
			Handler:    _PostgresMigrate_StateDutyConsumptionsFile_Read_Handler,
		},
		{
			MethodName: "StateDutyConsumptionsFile_Create",
			Handler:    _PostgresMigrate_StateDutyConsumptionsFile_Create_Handler,
		},
		{
			MethodName: "StateDutyConsumptionsFile_Update",
			Handler:    _PostgresMigrate_StateDutyConsumptionsFile_Update_Handler,
		},
		{
			MethodName: "StateDutyConsumptionsFile_Save",
			Handler:    _PostgresMigrate_StateDutyConsumptionsFile_Save_Handler,
		},
		{
			MethodName: "StateDutyConsumptionsFile_Delete",
			Handler:    _PostgresMigrate_StateDutyConsumptionsFile_Delete_Handler,
		},
		{
			MethodName: "StateDutyConsumptionsFile_Restore",
			Handler:    _PostgresMigrate_StateDutyConsumptionsFile_Restore_Handler,
		},
		{
			MethodName: "StateDutyConsumptionsFile_UpdateManyFields",
			Handler:    _PostgresMigrate_StateDutyConsumptionsFile_UpdateManyFields_Handler,
		},
		{
			MethodName: "StateDutyConsumptionsFile_Update_ConsumptionID",
			Handler:    _PostgresMigrate_StateDutyConsumptionsFile_Update_ConsumptionID_Handler,
		},
		{
			MethodName: "StateDutyConsumptionsFile_Update_FileID",
			Handler:    _PostgresMigrate_StateDutyConsumptionsFile_Update_FileID_Handler,
		},
		{
			MethodName: "StateDutyConsumptionsFile_ReadFromCache",
			Handler:    _PostgresMigrate_StateDutyConsumptionsFile_ReadFromCache_Handler,
		},
		{
			MethodName: "StateDutyConsumptionsFile_ReadObject",
			Handler:    _PostgresMigrate_StateDutyConsumptionsFile_ReadObject_Handler,
		},
		{
			MethodName: "StateDutyPaymentType_Read",
			Handler:    _PostgresMigrate_StateDutyPaymentType_Read_Handler,
		},
		{
			MethodName: "StateDutyPaymentType_Create",
			Handler:    _PostgresMigrate_StateDutyPaymentType_Create_Handler,
		},
		{
			MethodName: "StateDutyPaymentType_Update",
			Handler:    _PostgresMigrate_StateDutyPaymentType_Update_Handler,
		},
		{
			MethodName: "StateDutyPaymentType_Save",
			Handler:    _PostgresMigrate_StateDutyPaymentType_Save_Handler,
		},
		{
			MethodName: "StateDutyPaymentType_Delete",
			Handler:    _PostgresMigrate_StateDutyPaymentType_Delete_Handler,
		},
		{
			MethodName: "StateDutyPaymentType_Restore",
			Handler:    _PostgresMigrate_StateDutyPaymentType_Restore_Handler,
		},
		{
			MethodName: "StateDutyPaymentType_UpdateManyFields",
			Handler:    _PostgresMigrate_StateDutyPaymentType_UpdateManyFields_Handler,
		},
		{
			MethodName: "StateDutyPaymentType_Update_Description",
			Handler:    _PostgresMigrate_StateDutyPaymentType_Update_Description_Handler,
		},
		{
			MethodName: "StateDutyPaymentType_Update_Name",
			Handler:    _PostgresMigrate_StateDutyPaymentType_Update_Name_Handler,
		},
		{
			MethodName: "StateDutyPaymentType_ReadFromCache",
			Handler:    _PostgresMigrate_StateDutyPaymentType_ReadFromCache_Handler,
		},
		{
			MethodName: "StateDutyPaymentType_ReadObject",
			Handler:    _PostgresMigrate_StateDutyPaymentType_ReadObject_Handler,
		},
		{
			MethodName: "StateDutyPayment_Read",
			Handler:    _PostgresMigrate_StateDutyPayment_Read_Handler,
		},
		{
			MethodName: "StateDutyPayment_Create",
			Handler:    _PostgresMigrate_StateDutyPayment_Create_Handler,
		},
		{
			MethodName: "StateDutyPayment_Update",
			Handler:    _PostgresMigrate_StateDutyPayment_Update_Handler,
		},
		{
			MethodName: "StateDutyPayment_Save",
			Handler:    _PostgresMigrate_StateDutyPayment_Save_Handler,
		},
		{
			MethodName: "StateDutyPayment_Delete",
			Handler:    _PostgresMigrate_StateDutyPayment_Delete_Handler,
		},
		{
			MethodName: "StateDutyPayment_Restore",
			Handler:    _PostgresMigrate_StateDutyPayment_Restore_Handler,
		},
		{
			MethodName: "StateDutyPayment_UpdateManyFields",
			Handler:    _PostgresMigrate_StateDutyPayment_UpdateManyFields_Handler,
		},
		{
			MethodName: "StateDutyPayment_Update_BranchID",
			Handler:    _PostgresMigrate_StateDutyPayment_Update_BranchID_Handler,
		},
		{
			MethodName: "StateDutyPayment_Update_CourtID",
			Handler:    _PostgresMigrate_StateDutyPayment_Update_CourtID_Handler,
		},
		{
			MethodName: "StateDutyPayment_Update_DocumentSum",
			Handler:    _PostgresMigrate_StateDutyPayment_Update_DocumentSum_Handler,
		},
		{
			MethodName: "StateDutyPayment_Update_FileID",
			Handler:    _PostgresMigrate_StateDutyPayment_Update_FileID_Handler,
		},
		{
			MethodName: "StateDutyPayment_Update_Number",
			Handler:    _PostgresMigrate_StateDutyPayment_Update_Number_Handler,
		},
		{
			MethodName: "StateDutyPayment_Update_PaymentDate",
			Handler:    _PostgresMigrate_StateDutyPayment_Update_PaymentDate_Handler,
		},
		{
			MethodName: "StateDutyPayment_Update_StateDutyPaymentTypeID",
			Handler:    _PostgresMigrate_StateDutyPayment_Update_StateDutyPaymentTypeID_Handler,
		},
		{
			MethodName: "StateDutyPayment_Update_TaxOfficeID",
			Handler:    _PostgresMigrate_StateDutyPayment_Update_TaxOfficeID_Handler,
		},
		{
			MethodName: "StateDutyPayment_ReadFromCache",
			Handler:    _PostgresMigrate_StateDutyPayment_ReadFromCache_Handler,
		},
		{
			MethodName: "StateDutyPayment_ReadObject",
			Handler:    _PostgresMigrate_StateDutyPayment_ReadObject_Handler,
		},
		{
			MethodName: "StateDutyRegistry_Read",
			Handler:    _PostgresMigrate_StateDutyRegistry_Read_Handler,
		},
		{
			MethodName: "StateDutyRegistry_Create",
			Handler:    _PostgresMigrate_StateDutyRegistry_Create_Handler,
		},
		{
			MethodName: "StateDutyRegistry_Update",
			Handler:    _PostgresMigrate_StateDutyRegistry_Update_Handler,
		},
		{
			MethodName: "StateDutyRegistry_Save",
			Handler:    _PostgresMigrate_StateDutyRegistry_Save_Handler,
		},
		{
			MethodName: "StateDutyRegistry_Delete",
			Handler:    _PostgresMigrate_StateDutyRegistry_Delete_Handler,
		},
		{
			MethodName: "StateDutyRegistry_Restore",
			Handler:    _PostgresMigrate_StateDutyRegistry_Restore_Handler,
		},
		{
			MethodName: "StateDutyRegistry_UpdateManyFields",
			Handler:    _PostgresMigrate_StateDutyRegistry_UpdateManyFields_Handler,
		},
		{
			MethodName: "StateDutyRegistry_Update_BranchID",
			Handler:    _PostgresMigrate_StateDutyRegistry_Update_BranchID_Handler,
		},
		{
			MethodName: "StateDutyRegistry_ReadFromCache",
			Handler:    _PostgresMigrate_StateDutyRegistry_ReadFromCache_Handler,
		},
		{
			MethodName: "StateDutyRegistry_ReadObject",
			Handler:    _PostgresMigrate_StateDutyRegistry_ReadObject_Handler,
		},
		{
			MethodName: "StateDutyStatus_Read",
			Handler:    _PostgresMigrate_StateDutyStatus_Read_Handler,
		},
		{
			MethodName: "StateDutyStatus_Create",
			Handler:    _PostgresMigrate_StateDutyStatus_Create_Handler,
		},
		{
			MethodName: "StateDutyStatus_Update",
			Handler:    _PostgresMigrate_StateDutyStatus_Update_Handler,
		},
		{
			MethodName: "StateDutyStatus_Save",
			Handler:    _PostgresMigrate_StateDutyStatus_Save_Handler,
		},
		{
			MethodName: "StateDutyStatus_Delete",
			Handler:    _PostgresMigrate_StateDutyStatus_Delete_Handler,
		},
		{
			MethodName: "StateDutyStatus_Restore",
			Handler:    _PostgresMigrate_StateDutyStatus_Restore_Handler,
		},
		{
			MethodName: "StateDutyStatus_UpdateManyFields",
			Handler:    _PostgresMigrate_StateDutyStatus_UpdateManyFields_Handler,
		},
		{
			MethodName: "StateDutyStatus_Update_Description",
			Handler:    _PostgresMigrate_StateDutyStatus_Update_Description_Handler,
		},
		{
			MethodName: "StateDutyStatus_Update_Name",
			Handler:    _PostgresMigrate_StateDutyStatus_Update_Name_Handler,
		},
		{
			MethodName: "StateDutyStatus_ReadFromCache",
			Handler:    _PostgresMigrate_StateDutyStatus_ReadFromCache_Handler,
		},
		{
			MethodName: "StateDutyStatus_ReadObject",
			Handler:    _PostgresMigrate_StateDutyStatus_ReadObject_Handler,
		},
		{
			MethodName: "TableName_Read",
			Handler:    _PostgresMigrate_TableName_Read_Handler,
		},
		{
			MethodName: "TableName_Create",
			Handler:    _PostgresMigrate_TableName_Create_Handler,
		},
		{
			MethodName: "TableName_Update",
			Handler:    _PostgresMigrate_TableName_Update_Handler,
		},
		{
			MethodName: "TableName_Save",
			Handler:    _PostgresMigrate_TableName_Save_Handler,
		},
		{
			MethodName: "TableName_Delete",
			Handler:    _PostgresMigrate_TableName_Delete_Handler,
		},
		{
			MethodName: "TableName_Restore",
			Handler:    _PostgresMigrate_TableName_Restore_Handler,
		},
		{
			MethodName: "TableName_Update_Description",
			Handler:    _PostgresMigrate_TableName_Update_Description_Handler,
		},
		{
			MethodName: "TableName_Update_Name",
			Handler:    _PostgresMigrate_TableName_Update_Name_Handler,
		},
		{
			MethodName: "TableName_ReadFromCache",
			Handler:    _PostgresMigrate_TableName_ReadFromCache_Handler,
		},
		{
			MethodName: "TableName_UpdateManyFields",
			Handler:    _PostgresMigrate_TableName_UpdateManyFields_Handler,
		},
		{
			MethodName: "TableName_ReadObject",
			Handler:    _PostgresMigrate_TableName_ReadObject_Handler,
		},
		{
			MethodName: "TaxOffice_Read",
			Handler:    _PostgresMigrate_TaxOffice_Read_Handler,
		},
		{
			MethodName: "TaxOffice_Create",
			Handler:    _PostgresMigrate_TaxOffice_Create_Handler,
		},
		{
			MethodName: "TaxOffice_Update",
			Handler:    _PostgresMigrate_TaxOffice_Update_Handler,
		},
		{
			MethodName: "TaxOffice_Save",
			Handler:    _PostgresMigrate_TaxOffice_Save_Handler,
		},
		{
			MethodName: "TaxOffice_Delete",
			Handler:    _PostgresMigrate_TaxOffice_Delete_Handler,
		},
		{
			MethodName: "TaxOffice_Restore",
			Handler:    _PostgresMigrate_TaxOffice_Restore_Handler,
		},
		{
			MethodName: "TaxOffice_UpdateManyFields",
			Handler:    _PostgresMigrate_TaxOffice_UpdateManyFields_Handler,
		},
		{
			MethodName: "TaxOffice_Update_Description",
			Handler:    _PostgresMigrate_TaxOffice_Update_Description_Handler,
		},
		{
			MethodName: "TaxOffice_Update_Name",
			Handler:    _PostgresMigrate_TaxOffice_Update_Name_Handler,
		},
		{
			MethodName: "TaxOffice_ReadFromCache",
			Handler:    _PostgresMigrate_TaxOffice_ReadFromCache_Handler,
		},
		{
			MethodName: "TaxOffice_ReadObject",
			Handler:    _PostgresMigrate_TaxOffice_ReadObject_Handler,
		},
		{
			MethodName: "UserRole_Read",
			Handler:    _PostgresMigrate_UserRole_Read_Handler,
		},
		{
			MethodName: "UserRole_Create",
			Handler:    _PostgresMigrate_UserRole_Create_Handler,
		},
		{
			MethodName: "UserRole_Update",
			Handler:    _PostgresMigrate_UserRole_Update_Handler,
		},
		{
			MethodName: "UserRole_Save",
			Handler:    _PostgresMigrate_UserRole_Save_Handler,
		},
		{
			MethodName: "UserRole_Delete",
			Handler:    _PostgresMigrate_UserRole_Delete_Handler,
		},
		{
			MethodName: "UserRole_Restore",
			Handler:    _PostgresMigrate_UserRole_Restore_Handler,
		},
		{
			MethodName: "UserRole_Update_Description",
			Handler:    _PostgresMigrate_UserRole_Update_Description_Handler,
		},
		{
			MethodName: "UserRole_Update_Name",
			Handler:    _PostgresMigrate_UserRole_Update_Name_Handler,
		},
		{
			MethodName: "UserRole_ReadFromCache",
			Handler:    _PostgresMigrate_UserRole_ReadFromCache_Handler,
		},
		{
			MethodName: "UserRole_UpdateManyFields",
			Handler:    _PostgresMigrate_UserRole_UpdateManyFields_Handler,
		},
		{
			MethodName: "UserRole_ReadAll",
			Handler:    _PostgresMigrate_UserRole_ReadAll_Handler,
		},
		{
			MethodName: "UserRole_ReadObject",
			Handler:    _PostgresMigrate_UserRole_ReadObject_Handler,
		},
		{
			MethodName: "UserRolesMembership_Read",
			Handler:    _PostgresMigrate_UserRolesMembership_Read_Handler,
		},
		{
			MethodName: "UserRolesMembership_Create",
			Handler:    _PostgresMigrate_UserRolesMembership_Create_Handler,
		},
		{
			MethodName: "UserRolesMembership_Update",
			Handler:    _PostgresMigrate_UserRolesMembership_Update_Handler,
		},
		{
			MethodName: "UserRolesMembership_Save",
			Handler:    _PostgresMigrate_UserRolesMembership_Save_Handler,
		},
		{
			MethodName: "UserRolesMembership_Delete",
			Handler:    _PostgresMigrate_UserRolesMembership_Delete_Handler,
		},
		{
			MethodName: "UserRolesMembership_Restore",
			Handler:    _PostgresMigrate_UserRolesMembership_Restore_Handler,
		},
		{
			MethodName: "UserRolesMembership_UpdateManyFields",
			Handler:    _PostgresMigrate_UserRolesMembership_UpdateManyFields_Handler,
		},
		{
			MethodName: "UserRolesMembership_Update_EmployeeID",
			Handler:    _PostgresMigrate_UserRolesMembership_Update_EmployeeID_Handler,
		},
		{
			MethodName: "UserRolesMembership_Update_UserRoleID",
			Handler:    _PostgresMigrate_UserRolesMembership_Update_UserRoleID_Handler,
		},
		{
			MethodName: "UserRolesMembership_ReadFromCache",
			Handler:    _PostgresMigrate_UserRolesMembership_ReadFromCache_Handler,
		},
		{
			MethodName: "UserRolesMembership_FindMassBy_EmployeeID",
			Handler:    _PostgresMigrate_UserRolesMembership_FindMassBy_EmployeeID_Handler,
		},
		{
			MethodName: "UserRolesMembership_FindMassBy_UserRoleID",
			Handler:    _PostgresMigrate_UserRolesMembership_FindMassBy_UserRoleID_Handler,
		},
		{
			MethodName: "UserRolesMembership_ReadObject",
			Handler:    _PostgresMigrate_UserRolesMembership_ReadObject_Handler,
		},
		{
			MethodName: "WhiteListReasonType_Read",
			Handler:    _PostgresMigrate_WhiteListReasonType_Read_Handler,
		},
		{
			MethodName: "WhiteListReasonType_Create",
			Handler:    _PostgresMigrate_WhiteListReasonType_Create_Handler,
		},
		{
			MethodName: "WhiteListReasonType_Update",
			Handler:    _PostgresMigrate_WhiteListReasonType_Update_Handler,
		},
		{
			MethodName: "WhiteListReasonType_Save",
			Handler:    _PostgresMigrate_WhiteListReasonType_Save_Handler,
		},
		{
			MethodName: "WhiteListReasonType_Delete",
			Handler:    _PostgresMigrate_WhiteListReasonType_Delete_Handler,
		},
		{
			MethodName: "WhiteListReasonType_Restore",
			Handler:    _PostgresMigrate_WhiteListReasonType_Restore_Handler,
		},
		{
			MethodName: "WhiteListReasonType_Update_Code",
			Handler:    _PostgresMigrate_WhiteListReasonType_Update_Code_Handler,
		},
		{
			MethodName: "WhiteListReasonType_Update_Description",
			Handler:    _PostgresMigrate_WhiteListReasonType_Update_Description_Handler,
		},
		{
			MethodName: "WhiteListReasonType_Update_Name",
			Handler:    _PostgresMigrate_WhiteListReasonType_Update_Name_Handler,
		},
		{
			MethodName: "WhiteListReasonType_ReadFromCache",
			Handler:    _PostgresMigrate_WhiteListReasonType_ReadFromCache_Handler,
		},
		{
			MethodName: "WhiteListReasonType_UpdateManyFields",
			Handler:    _PostgresMigrate_WhiteListReasonType_UpdateManyFields_Handler,
		},
		{
			MethodName: "WhiteListReasonType_ReadObject",
			Handler:    _PostgresMigrate_WhiteListReasonType_ReadObject_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "postgres_migrate.proto",
}
